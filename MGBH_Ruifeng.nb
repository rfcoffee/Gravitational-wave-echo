(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    243426,       4790]
NotebookOptionsPosition[    239938,       4730]
NotebookOutlinePosition[    240375,       4747]
CellTagsIndexPosition[    240332,       4744]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"rh", ",", "rd", ",", "answer", ",", "rdlist", ",", "Blist"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rh", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"r", "-", "rh"}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{"r", "-", "rd"}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{"r", "+", "rd", "+", "rh"}], ")"}]}], ")"}]}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["rh", "2"], "+", 
        RowBox[{"rd", "*", "rh"}], "+", 
        SuperscriptBox["rd", "2"]}], ")"}], "*", "r"}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rdlist", "=", 
    RowBox[{"{", "10", "}"}]}], " ", ";", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"10", ",", "20", ",", "40", ",", "80", ",", " ", "160"}], "}"}],
      ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Blist", "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", "3", ",", "10"}], "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Range", "[", 
     RowBox[{"0", ",", "10"}], "]"}], ";"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x2list", "=", 
   RowBox[{"{", "40", "}"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"60", ",", "100", ",", "150", ",", "300", ",", "600"}], "}"}], 
    ";"}], "*)"}], "\[IndentingNewLine]"}]}], "Input",
 CellChangeTimes->{{3.8063147916992893`*^9, 3.8063147921680293`*^9}, {
   3.8063149247810965`*^9, 3.8063149532668133`*^9}, {3.8063149865368433`*^9, 
   3.8063150591032934`*^9}, {3.806315856166582*^9, 3.8063158580325456`*^9}, {
   3.8063248912223997`*^9, 3.806324940646096*^9}, {3.8063343290193605`*^9, 
   3.8063343292042875`*^9}, {3.806352517031844*^9, 3.806352529199839*^9}, {
   3.8063613061541386`*^9, 3.8063613702614307`*^9}, {3.8063667196637025`*^9, 
   3.8063667278620367`*^9}, 3.8063932315754995`*^9, {3.806411332377057*^9, 
   3.8064113326379404`*^9}, {3.8064267806209936`*^9, 
   3.8064267840430603`*^9}, {3.8064287583067713`*^9, 3.806428758645609*^9}, {
   3.8064304593721943`*^9, 3.8064304965239224`*^9}, 3.8064381719466333`*^9, {
   3.806447851004202*^9, 3.80644788862969*^9}, {3.806476956054854*^9, 
   3.806476968558694*^9}, {3.8064815117163653`*^9, 3.8064815121441207`*^9}, {
   3.806491187877514*^9, 3.806491188142331*^9}, {3.8064991065840597`*^9, 
   3.8064991068369074`*^9}, {3.8065176601638083`*^9, 
   3.8065177055908303`*^9}, {3.806531728304747*^9, 3.8065318014448624`*^9}, {
   3.8065857292645016`*^9, 3.8065857352200923`*^9}, {3.806599041497023*^9, 
   3.8065990500612154`*^9}, {3.806604320098608*^9, 3.806604334429409*^9}, 
   3.8066110007777576`*^9, {3.806647735173958*^9, 3.8066477384860287`*^9}, {
   3.8066525518022346`*^9, 3.8066525519991293`*^9}, 3.8066552148999987`*^9, {
   3.806657166426041*^9, 3.806657166542977*^9}, {3.806658390645881*^9, 
   3.8066584013313603`*^9}, {3.806667084597962*^9, 3.806667085816265*^9}, {
   3.806687934661337*^9, 3.806687941340515*^9}, {3.806688002848328*^9, 
   3.806688003327053*^9}, {3.8066969331740074`*^9, 3.806696933375881*^9}, 
   3.8067017689292345`*^9, {3.8067086851919394`*^9, 3.8067086879189353`*^9}, {
   3.8067090131979218`*^9, 3.806709015927998*^9}, {3.8067096300773273`*^9, 
   3.8067096578509073`*^9}, {3.8072088234788375`*^9, 
   3.8072088322618265`*^9}, {3.807208883757317*^9, 3.8072088921325455`*^9}, 
   3.8072089490449276`*^9, {3.8072252837911067`*^9, 
   3.807225284192871*^9}},ExpressionUUID->"6ca9472d-5d54-43c8-8a42-\
3cb1124d94db"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"kk", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{"kk", "\[LessEqual]", 
     RowBox[{"Length", "[", "rdlist", "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"rd", "=", 
      RowBox[{"rdlist", "[", 
       RowBox[{"[", "kk", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"M", "=", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["rd", "2"], " ", "rh"}], "+", 
           RowBox[{
            SuperscriptBox["rh", "2"], " ", "rd"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["rd", "2"], "+", 
           RowBox[{"rd", " ", "rh"}], "+", 
           SuperscriptBox["rh", "2"]}], ")"}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"kappa", "=", 
      RowBox[{"1", "/", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["rd", "2"], "+", 
          RowBox[{"rd", " ", "rh"}], "+", 
          SuperscriptBox["rh", "2"]}], ")"}], 
        RowBox[{"1", "/", "2"}]]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"kh", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"f", ",", "r"}], "]"}], "/", "2"}], "/.", 
       RowBox[{"r", "\[Rule]", "rh"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"kd", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"D", "[", 
          RowBox[{"f", ",", "r"}], "]"}]}], "/", "2"}], "/.", 
       RowBox[{"r", "\[Rule]", "rd"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"vr1", "=", 
      RowBox[{"f", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"L", "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"L", "+", "1"}], ")"}], "/", 
           RowBox[{"r", "^", "2"}]}]}], "-", 
         RowBox[{"6", "*", 
          RowBox[{"M", "/", 
           RowBox[{"r", "^", "3"}]}]}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"rt", "=", 
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["rd", "2"], "+", 
             RowBox[{"rd", " ", "rh"}], "+", 
             SuperscriptBox["rh", "2"]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"rd", " ", 
              RowBox[{"(", 
               RowBox[{"rd", "+", 
                RowBox[{"2", " ", "rh"}]}], ")"}], " ", 
              RowBox[{"Log", "[", 
               RowBox[{"r", "-", "rd"}], "]"}]}], "-", 
             RowBox[{"rh", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "rd"}], "+", "rh"}], ")"}], " ", 
              RowBox[{"Log", "[", 
               RowBox[{"r", "-", "rh"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 SuperscriptBox["rd", "2"]}], "+", 
                SuperscriptBox["rh", "2"]}], ")"}], " ", 
              RowBox[{"Log", "[", 
               RowBox[{"r", "+", "rd", "+", "rh"}], "]"}]}]}], ")"}]}], ")"}],
          "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"rd", "-", "rh"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "rd"}], "+", "rh"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"rd", "+", 
             RowBox[{"2", " ", "rh"}]}], ")"}]}], ")"}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"r0", "=", 
      RowBox[{
       RowBox[{"-", "10"}], "*", "rh"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"sigma", "=", "rh"}], ";", "\[IndentingNewLine]", 
     RowBox[{"rlist", "=", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"N", "[", 
           RowBox[{"rh", "+", 
            RowBox[{"Exp", "[", 
             RowBox[{"kh", "*", 
              RowBox[{"ii", "/", "16"}]}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"ii", ",", 
            RowBox[{"-", "500"}], ",", "30"}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"N", "[", 
           RowBox[{"2.001", "+", 
            RowBox[{"ii", "/", "10"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"ii", ",", "0", ",", 
            RowBox[{"10", "*", 
             RowBox[{"(", 
              RowBox[{"rd", "-", "3"}], ")"}]}]}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"N", "[", 
           RowBox[{"rd", "-", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "kd"}], "*", "ii"}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"ii", ",", 
            RowBox[{"-", "20"}], ",", "180"}], "}"}]}], "]"}]}], "]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"rtlist", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"N", "[", 
         RowBox[{"Re", "[", 
          RowBox[{"rt", "/.", 
           RowBox[{"r", "\[Rule]", 
            RowBox[{"rlist", "[", 
             RowBox[{"[", "ii", "]"}], "]"}]}]}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", "1", ",", 
          RowBox[{"Length", "[", "rlist", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Export", "[", 
        RowBox[{
         RowBox[{"\"\<rtlist_rd\>\"", "<>", 
          RowBox[{"IntegerString", "[", "rd", "]"}], "<>", "\"\<.txt\>\""}], 
         ",", "rtlist"}], "]"}], ";"}], " ", "*)"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"jj", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"jj", "\[LessEqual]", 
        RowBox[{"Length", "[", "Blist", "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"BB", "=", 
         RowBox[{"3", "*", 
          RowBox[{"Blist", "[", 
           RowBox[{"[", "jj", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"vr1list", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"N", "[", 
            RowBox[{"vr1", "/.", 
             RowBox[{"r", "\[Rule]", 
              RowBox[{"rlist", "[", 
               RowBox[{"[", "ii", "]"}], "]"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"ii", ",", "1", ",", 
             RowBox[{"Length", "[", "rlist", "]"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"vr2list", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"BB", "*", 
            SuperscriptBox["kh", "2"], "*", 
            SuperscriptBox["kappa", "2"], "*", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"f", "/.", 
                 RowBox[{"r", "\[Rule]", 
                  RowBox[{"rlist", "[", 
                   RowBox[{"[", "ii", "]"}], "]"}]}]}], ")"}], "*", 
               RowBox[{"NIntegrate", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Sqrt", "[", 
                   RowBox[{"1", "-", "f"}], "]"}], "/", "f"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"r", ",", 
                   RowBox[{"2", "*", "rh"}], ",", 
                   RowBox[{"rlist", "[", 
                    RowBox[{"[", "ii", "]"}], "]"}]}], "}"}]}], "]"}]}], 
              ")"}], "2"]}], ",", 
           RowBox[{"{", 
            RowBox[{"ii", ",", "1", ",", 
             RowBox[{"Length", "[", "rlist", "]"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"vrlist", "=", 
         RowBox[{"vr1list", "+", "vr2list"}]}], ";", "\[IndentingNewLine]", 
        "\n", "\t", 
        RowBox[{"vrrh", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"vr1", "+", 
            RowBox[{"BB", "*", 
             SuperscriptBox["kh", "2"], "*", 
             SuperscriptBox["kappa", "2"], "*", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"f", "*", 
                RowBox[{"Integrate", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sqrt", "[", 
                    RowBox[{"1", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", "*", "kh"}], ")"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"r", "-", "rh"}], ")"}]}]}], "]"}], "/", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", "*", "kh"}], ")"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"r", "-", "rh"}], ")"}]}], ")"}]}], ",", "r"}], 
                 "]"}]}], ")"}], "2"]}]}], ")"}], "-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"vr1", "+", 
              RowBox[{"BB", "*", 
               SuperscriptBox["kh", "2"], "*", 
               SuperscriptBox["kappa", "2"], "*", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"f", "*", 
                  RowBox[{"Integrate", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"1", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", "*", "kh"}], ")"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"r", "-", "rh"}], ")"}]}]}], "]"}], "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", "*", "kh"}], ")"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"r", "-", "rh"}], ")"}]}], ")"}]}], ",", "r"}], 
                   "]"}]}], ")"}], "2"]}]}], ")"}], "/.", 
            RowBox[{"r", "\[Rule]", 
             RowBox[{"rlist", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}]}], ")"}], "+", 
          RowBox[{"vrlist", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], ";", 
        RowBox[{"(*", 
         RowBox[{"near", " ", 
          SubscriptBox["r", "H"]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"vrrd", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"vr1", "+", 
            RowBox[{"BB", "*", 
             SuperscriptBox["kh", "2"], "*", 
             SuperscriptBox["kappa", "2"], "*", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"f", "*", 
                RowBox[{"Integrate", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sqrt", "[", 
                    RowBox[{"1", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", "*", "kd"}], ")"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"rd", "-", "r"}], ")"}]}]}], "]"}], "/", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", "*", "kd"}], ")"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"rd", "-", "r"}], ")"}]}], ")"}]}], ",", "r"}], 
                 "]"}]}], ")"}], "2"]}]}], ")"}], "-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"vr1", "+", 
              RowBox[{"BB", "*", 
               SuperscriptBox["kh", "2"], "*", 
               SuperscriptBox["kappa", "2"], "*", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"f", "*", 
                  RowBox[{"Integrate", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"1", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", "*", "kd"}], ")"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"rd", "-", "r"}], ")"}]}]}], "]"}], "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", "*", "kd"}], ")"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"rd", "-", "r"}], ")"}]}], ")"}]}], ",", "r"}], 
                   "]"}]}], ")"}], "2"]}]}], ")"}], "/.", 
            RowBox[{"r", "\[Rule]", 
             RowBox[{"rlist", "[", 
              RowBox[{"[", 
               RowBox[{"Length", "[", "rlist", "]"}], "]"}], "]"}]}]}], ")"}],
           "+", 
          RowBox[{"vrlist", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "rlist", "]"}], "]"}], "]"}]}]}], ";", 
        RowBox[{"(*", 
         RowBox[{"near", " ", 
          SubscriptBox["r", "d"]}], "*)"}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"dat2", "=", 
         RowBox[{"Flatten", "/@", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{"rtlist", ",", "vrlist"}], "}"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Export", "[", 
           RowBox[{
            RowBox[{"\"\<vrlist_rd\>\"", "<>", 
             RowBox[{"IntegerString", "[", "rd", "]"}], "<>", "\"\<_B\>\"", "<>", 
             RowBox[{"IntegerString", "[", 
              RowBox[{"BB", "/", "3"}], "]"}], "<>", "\"\<.txt\>\""}], ",", 
            "dat2", ",", "\"\<Table\>\""}], "]"}], ";"}], " ", "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"x1", "=", 
         RowBox[{"-", "20"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"x2", "=", 
         RowBox[{"x2list", "[", 
          RowBox[{"[", "kk", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ifun", "=", 
         RowBox[{"Interpolation", "[", 
          RowBox[{"Transpose", "@", 
           RowBox[{"{", 
            RowBox[{"rtlist", ",", "vrlist"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"vrrh", "/.", 
          RowBox[{"r", "\[Rule]", 
           RowBox[{"rh", "+", 
            RowBox[{
             RowBox[{"Exp", "[", 
              RowBox[{"2", "*", "kh", "*", 
               RowBox[{"(", 
                RowBox[{"x", "-", 
                 RowBox[{"rtlist", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "]"}], "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"rlist", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "-", "rh"}], ")"}]}]}]}]}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ifunfull1", "[", "xx_", "]"}], ":=", 
         RowBox[{"Piecewise", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"vrrh", "/.", 
               RowBox[{"r", "\[Rule]", 
                RowBox[{"rh", "+", 
                 RowBox[{
                  RowBox[{"Exp", "[", 
                   RowBox[{"2", "*", "kh", "*", 
                    RowBox[{"(", 
                    RowBox[{"xx", "-", 
                    RowBox[{"rtlist", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"rlist", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "rh"}], 
                   ")"}]}]}]}]}], ",", 
              RowBox[{
               RowBox[{"xx", "<=", 
                RowBox[{"rtlist", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "&&", 
               RowBox[{"xx", "\[GreaterEqual]", 
                RowBox[{"-", "x1"}]}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"ifun", "[", "xx", "]"}], ",", 
              RowBox[{
               RowBox[{"xx", ">", 
                RowBox[{"rtlist", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "&&", 
               RowBox[{"xx", "<", 
                RowBox[{"rtlist", "[", 
                 RowBox[{"[", 
                  RowBox[{"Length", "[", "rlist", "]"}], "]"}], "]"}]}]}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"vrrd", "/.", 
               RowBox[{"r", "\[Rule]", 
                RowBox[{"rd", "-", 
                 RowBox[{
                  RowBox[{"Exp", "[", 
                   RowBox[{
                    RowBox[{"-", "2"}], "*", "kd", "*", 
                    RowBox[{"(", 
                    RowBox[{"xx", "-", 
                    RowBox[{"rtlist", "[", 
                    RowBox[{"[", 
                    RowBox[{"Length", "[", "rlist", "]"}], "]"}], "]"}]}], 
                    ")"}]}], "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"rd", "-", 
                    RowBox[{"rlist", "[", 
                    RowBox[{"[", 
                    RowBox[{"Length", "[", "rlist", "]"}], "]"}], "]"}]}], 
                   ")"}]}]}]}]}], ",", 
              RowBox[{
               RowBox[{"xx", "\[GreaterEqual]", 
                RowBox[{"rtlist", "[", 
                 RowBox[{"[", 
                  RowBox[{"Length", "[", "rlist", "]"}], "]"}], "]"}]}], "&&", 
               RowBox[{"xx", "\[LessEqual]", "x2"}]}]}], "}"}]}], "}"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"ii", "=", "1"}], ";", "\[IndentingNewLine]", 
        RowBox[{"wlist", "=", 
         RowBox[{"0.01", "*", 
          RowBox[{"Range", "[", 
           RowBox[{"1", ",", "400"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"CinR", "=", "wlist"}], ";", "\[IndentingNewLine]", 
        RowBox[{"CinI", "=", "wlist"}], ";", "\[IndentingNewLine]", 
        RowBox[{"PsiR", "=", "wlist"}], ";", "\[IndentingNewLine]", 
        RowBox[{"PsiI", "=", "wlist"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Pow", "=", "wlist"}], ";", "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"ii", "\[LessEqual]", 
           RowBox[{"Length", "[", "wlist", "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"w", "=", 
            RowBox[{"wlist", "[", 
             RowBox[{"[", "ii", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"EQ", "=", 
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"y", "[", "x", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", "2"}], "}"}]}], "]"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"w", "^", "2"}], "-", 
                RowBox[{"ifunfull1", "[", "x", "]"}]}], ")"}], "*", 
              RowBox[{"y", "[", "x", "]"}]}]}]}], ";", "\[IndentingNewLine]", 
           
           RowBox[{"BC", "=", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "I"}], "*", "w", "*", "x1"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"BC1", "=", 
            RowBox[{
             RowBox[{"-", "I"}], "*", "w", "*", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "I"}], "*", "w", "*", "x1"}], "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"sol", "=", 
            RowBox[{"NDSolve", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"EQ", "==", "0"}], ",", 
                RowBox[{
                 RowBox[{"y", "[", "x1", "]"}], "\[Equal]", "BC"}], ",", 
                RowBox[{
                 RowBox[{
                  SuperscriptBox["y", "\[Prime]",
                   MultilineFunction->None], "[", "x1", "]"}], "\[Equal]", 
                 "BC1"}]}], "}"}], ",", "y", ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "x1", ",", "x2"}], "}"}], ",", 
              RowBox[{"MaxSteps", "\[Rule]", 
               RowBox[{"10", "^", "6"}]}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"yinf", "=", 
            RowBox[{
             RowBox[{"y", "[", "x2", "]"}], "/.", 
             RowBox[{"sol", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}]}], ";", 
           RowBox[{"yinf1", "=", 
            RowBox[{
             RowBox[{
              SuperscriptBox["y", "\[Prime]",
               MultilineFunction->None], "[", "x2", "]"}], "/.", 
             RowBox[{"sol", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"yinfana", "=", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Cin", "*", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "I"}], "*", "w", "*", "x2"}], "]"}]}], "+", 
              RowBox[{"Cout", "*", 
               RowBox[{"Exp", "[", 
                RowBox[{"I", "*", "w", "*", "x2"}], "]"}]}]}], ")"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"yinfana1", "=", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Cin", "*", 
                  RowBox[{"Exp", "[", 
                   RowBox[{
                    RowBox[{"-", "I"}], "*", "w", "*", "x"}], "]"}]}], "+", 
                 RowBox[{"Cout", "*", 
                  RowBox[{"Exp", "[", 
                   RowBox[{"I", "*", "w", "*", "x"}], "]"}]}]}], ",", "x"}], 
               "]"}], ")"}], "/.", 
             RowBox[{"x", "\[Rule]", "x2"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"solcin", "=", 
            RowBox[{
             RowBox[{"Solve", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"yinf", "\[Equal]", "yinfana"}], ",", 
                 RowBox[{"yinf1", "\[Equal]", "yinfana1"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"Cin", ",", "Cout"}], "}"}]}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Aint", "=", 
            RowBox[{
             RowBox[{"NIntegrate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"Exp", "[", 
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "-", "r0"}], ")"}], "^", "2"}]}], "/", 
                    RowBox[{"sigma", "^", "2"}]}], "]"}], "*", 
                  RowBox[{"y", "[", "x", "]"}]}], "/.", "sol"}], "//", 
                "Release"}], ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", "x1", ",", "x2"}], "}"}]}], 
              RowBox[{"(*", 
               RowBox[{",", 
                RowBox[{"WorkingPrecision", "\[Rule]", "8"}], ",", 
                RowBox[{"PrecisionGoal", "\[Rule]", "8"}], ",", 
                RowBox[{"MaxRecursion", "\[Rule]", "6"}]}], "*)"}], "]"}], 
             "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"CinR", "[", 
             RowBox[{"[", "ii", "]"}], "]"}], "=", 
            RowBox[{"Re", "[", 
             RowBox[{"Cin", "/.", 
              RowBox[{"solcin", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"CinI", "[", 
             RowBox[{"[", "ii", "]"}], "]"}], "=", 
            RowBox[{"Im", "[", 
             RowBox[{"Cin", "/.", 
              RowBox[{"solcin", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Psi", "=", 
            RowBox[{
             RowBox[{"Aint", "/", 
              RowBox[{"(", 
               RowBox[{"2", "*", "I", "*", "w", "*", "Cin"}], ")"}]}], "/.", 
             RowBox[{"solcin", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
           
           RowBox[{
            RowBox[{"PsiR", "[", 
             RowBox[{"[", "ii", "]"}], "]"}], "=", 
            RowBox[{"Re", "[", "Psi", "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"PsiI", "[", 
             RowBox[{"[", "ii", "]"}], "]"}], "=", 
            RowBox[{"Im", "[", "Psi", "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Pow", "[", 
             RowBox[{"[", "ii", "]"}], "]"}], "=", 
            RowBox[{
             RowBox[{"w", "^", "2"}], "*", 
             RowBox[{
              RowBox[{"Abs", "[", "Psi", "]"}], "^", "2"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"answer", "[", "ii", "]"}], "=", 
              RowBox[{"{", 
               RowBox[{"w", ",", 
                RowBox[{"Cin", "/.", 
                 RowBox[{"solcin", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                RowBox[{"Psi", "=", 
                 RowBox[{
                  RowBox[{"Aint", "/", 
                   RowBox[{"(", 
                    RowBox[{"2", "*", "I", "*", "w", "*", "Cin"}], ")"}]}], "/.", 
                  RowBox[{"solcin", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}]}], ",", 
                RowBox[{"P", "=", 
                 RowBox[{
                  RowBox[{"w", "^", "2"}], "*", 
                  RowBox[{
                   RowBox[{"Abs", "[", "Psi", "]"}], "^", "2"}]}]}]}], 
               "}"}]}], ";"}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"ii", "++"}], ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"Export", "[", 
           RowBox[{
            RowBox[{"\"\<answer_rd\>\"", "<>", 
             RowBox[{"IntegerString", "[", "rd", "]"}], "<>", "\"\<_\>\"", "<>", 
             RowBox[{"IntegerString", "[", "BB", "]"}], "<>", 
             "\"\<.txt\>\""}], ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"answer", "[", "ii", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"ii", ",", "1", ",", 
                RowBox[{"Length", "[", "wlist", "]"}]}], "}"}]}], "]"}]}], 
           "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"dat1", "=", 
         RowBox[{"Flatten", "/@", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
            "wlist", ",", "CinR", ",", "CinI", ",", "PsiR", ",", "PsiI", ",", 
             "Pow"}], "}"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Export", "[", 
         RowBox[{
          RowBox[{"\"\<schrodinger_rd\>\"", "<>", 
           RowBox[{"IntegerString", "[", "rd", "]"}], "<>", "\"\<_3D\>\"", "<>", 
           RowBox[{"IntegerString", "[", 
            RowBox[{"BB", "/", "3"}], "]"}], "<>", "\"\<.txt\>\""}], ",", 
          "dat1", ",", "\"\<Table\>\""}], "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"jj", "++"}], ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"kk", "++"}], ";"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7205266461451807`*^9, 3.720526657863509*^9}, {
   3.725706270501243*^9, 3.7257062705938396`*^9}, {3.725706348345269*^9, 
   3.725706350705656*^9}, {3.72657089598571*^9, 3.7265708961327333`*^9}, {
   3.8059938601840944`*^9, 3.805993863592168*^9}, {3.8060762886852837`*^9, 
   3.806076288937127*^9}, 3.8060957893643265`*^9, 3.806095846966345*^9, 
   3.8060960865681896`*^9, {3.8060961603619137`*^9, 3.8060961604368677`*^9}, {
   3.8063091964317274`*^9, 3.8063091966326127`*^9}, {3.806311768047964*^9, 
   3.8063117729301696`*^9}, {3.8063130008989735`*^9, 3.806313008522607*^9}, {
   3.8063134018357697`*^9, 3.8063134066170316`*^9}, {3.8063135455861483`*^9, 
   3.806313552087427*^9}, {3.806313942514887*^9, 3.8063139426548295`*^9}, {
   3.806314013917993*^9, 3.8063140140009785`*^9}, {3.8063140655054884`*^9, 
   3.806314066135128*^9}, {3.8063142635305896`*^9, 3.806314290713026*^9}, 
   3.8063143783189125`*^9, {3.8063144483048325`*^9, 3.8063144515259967`*^9}, {
   3.806314773616643*^9, 3.8063147949044857`*^9}, {3.806315042844569*^9, 
   3.806315096393942*^9}, {3.806315135682414*^9, 3.8063151457646728`*^9}, {
   3.806315244775091*^9, 3.806315261308601*^9}, {3.8063152925997076`*^9, 
   3.806315346208086*^9}, {3.806315386826798*^9, 3.8063156871438437`*^9}, {
   3.8063157482793884`*^9, 3.806315750799919*^9}, 3.8063524999226694`*^9, {
   3.8063525424562483`*^9, 3.8063525426181626`*^9}, {3.806357402975531*^9, 
   3.8063574208442993`*^9}, 3.806361290530115*^9, {3.8063645565888443`*^9, 
   3.8063645839699697`*^9}, {3.806364793428417*^9, 3.80636488926842*^9}, {
   3.8063649515037622`*^9, 3.806365101487979*^9}, {3.806365475769346*^9, 
   3.806365537581503*^9}, {3.806365938994149*^9, 3.8063659543093824`*^9}, {
   3.806366657105549*^9, 3.8063666597540007`*^9}, {3.8063666969826856`*^9, 
   3.8063666971826024`*^9}, {3.8065177194878407`*^9, 3.806517738679884*^9}, {
   3.806517774909108*^9, 3.806517775547775*^9}, {3.806517840745413*^9, 
   3.8065178734387245`*^9}, {3.8066043448414392`*^9, 3.806604383000598*^9}, {
   3.806647757863934*^9, 3.806647787528949*^9}, {3.806658425442814*^9, 
   3.806658451111024*^9}, {3.8066670987668486`*^9, 3.806667110151332*^9}, {
   3.806667309159416*^9, 3.8066673136398497`*^9}, {3.806675862405137*^9, 
   3.8066758693842306`*^9}, 3.806687918097824*^9, {3.806688006345293*^9, 
   3.8066880076325874`*^9}, {3.8067017810803103`*^9, 
   3.8067017995367093`*^9}, {3.8067085357208667`*^9, 
   3.8067086379621334`*^9}, {3.806708668103429*^9, 3.8067086707788014`*^9}, {
   3.8067087168753815`*^9, 3.806708725620736*^9}, {3.8072087566640816`*^9, 
   3.807208771865376*^9}, 3.807208861426098*^9, 3.8072089367929425`*^9, 
   3.8072249381157665`*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"16ce4052-78b2-4ee5-83f7-f8f85727252c"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{
  3.806361285283088*^9, {3.806708548627625*^9, 
   3.8067085491658125`*^9}},ExpressionUUID->"935848f6-56ac-43e1-ac16-\
ba3fccb0c560"],

Cell[CellGroupData[{

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.7202676973308563`*^9, 3.720267826175211*^9}, {
   3.7202688412401*^9, 3.7202688425162373`*^9}, 3.720269374876012*^9, {
   3.720269411347415*^9, 3.720269420651019*^9}, {3.720269495878354*^9, 
   3.7202694961758833`*^9}, {3.7202695527242603`*^9, 3.720269594422182*^9}, 
   3.720269638690624*^9, {3.720269722274683*^9, 3.720269765525167*^9}, 
   3.720269801557062*^9, 3.720269849079103*^9, {3.720269895543624*^9, 
   3.720269942390912*^9}, {3.720272430447448*^9, 3.720272464599025*^9}, {
   3.720272502603353*^9, 3.720272541006729*^9}, {3.720272573473062*^9, 
   3.720272613059822*^9}, 3.720291177903192*^9, 3.720291244794229*^9, 
   3.720291387612368*^9, {3.7202919647331333`*^9, 3.720291986606153*^9}, 
   3.720292025733603*^9, {3.720292183417363*^9, 3.720292227598434*^9}, 
   3.720292345646675*^9, {3.7202924312767887`*^9, 3.72029243912228*^9}, {
   3.7202926506817636`*^9, 3.720292653089946*^9}, {3.72029290990902*^9, 
   3.720292932401833*^9}, {3.7202929791507597`*^9, 3.720292984942799*^9}, {
   3.7202932038101177`*^9, 3.720293212582952*^9}, 3.720306010161272*^9, 
   3.720313921215464*^9, {3.720349816667128*^9, 3.7203498261195593`*^9}, {
   3.720349916071987*^9, 3.720349920517194*^9}, 3.720350028924286*^9, {
   3.720350134663274*^9, 3.72035014626923*^9}, {3.720350264770246*^9, 
   3.7203502716447906`*^9}, {3.72035031410529*^9, 3.720350322568174*^9}, {
   3.720351994228571*^9, 3.720351996419424*^9}, 3.720352106261735*^9, 
   3.720352268100432*^9, {3.720371479706167*^9, 3.720371704928597*^9}, {
   3.720503774814945*^9, 3.720503780846506*^9}, 3.720504679466895*^9, {
   3.72050486531322*^9, 3.720504868438692*^9}, 3.720505002524925*^9, 
   3.720505154879705*^9, 3.7205053647498837`*^9, 3.7205055209537573`*^9, 
   3.7205056484123573`*^9, 3.720505864962569*^9, 3.720506107748008*^9, 
   3.720506602229241*^9, 3.7205070450018187`*^9, 3.720523008347291*^9, 
   3.720523481423046*^9, 3.7255809245563393`*^9, {3.725582578317398*^9, 
   3.7255826215898857`*^9}, {3.7255829849830303`*^9, 3.725583051263826*^9}, {
   3.725707653916936*^9, 3.7257076867631893`*^9}, 3.726570567683158*^9, 
   3.726574906185409*^9, {3.726576652943329*^9, 3.726576653025077*^9}, 
   3.805991326180726*^9, {3.806021848871828*^9, 3.8060218519760475`*^9}, 
   3.8060234473978243`*^9, {3.8060725050663657`*^9, 3.8060725063236527`*^9}, 
   3.8060742628695607`*^9, {3.806076303720669*^9, 3.8060763038316307`*^9}, 
   3.806077962735564*^9, 3.8060795798298645`*^9, 3.8060817415764246`*^9, {
   3.8060832263380938`*^9, 3.8060832270831966`*^9}, {3.806095926893581*^9, 
   3.8060959286895523`*^9}, 3.806099260463338*^9, {3.8061056058970118`*^9, 
   3.8061056079877076`*^9}, {3.8061081408113327`*^9, 
   3.8061081409662433`*^9}, {3.8061523083492107`*^9, 3.806152308853921*^9}, {
   3.8063127437012053`*^9, 3.806312757308446*^9}, {3.806312818391445*^9, 
   3.80631289219818*^9}, {3.806312967749922*^9, 3.8063129868379917`*^9}, {
   3.8063132061158285`*^9, 3.806313209952663*^9}, {3.8063132526712046`*^9, 
   3.8063132858192244`*^9}, {3.8063133158970013`*^9, 
   3.8063133194729238`*^9}, {3.8063133521172323`*^9, 3.806313355019601*^9}, {
   3.8063134145454865`*^9, 3.8063134209298315`*^9}, 3.8063140799841895`*^9, {
   3.8063141734531965`*^9, 3.806314214020938*^9}, {3.806314296946489*^9, 
   3.8063143143984632`*^9}, {3.806314427121967*^9, 3.806314427246893*^9}, 
   3.8063153833917675`*^9, {3.80670854153507*^9, 3.806708567408739*^9}, 
   3.8072087522086306`*^9},ExpressionUUID->"f1536e5e-0b1b-4f6b-893a-\
262446e8f23f"],

Cell[BoxData["\<\"vrlist_rd40_B60.txt\"\>"], "Output",
 CellChangeTimes->{3.806314409043312*^9, 3.806314487928153*^9},
 CellLabel->
  "Out[476]=",ExpressionUUID->"cfce72c2-4d9f-4f49-91cc-711e885374fb"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.720282760154854*^9, 3.720282809645658*^9}, {
   3.720283336866466*^9, 3.720283400684016*^9}, {3.720283614653047*^9, 
   3.7202836538346357`*^9}, {3.7202838405210953`*^9, 3.720283939443358*^9}, {
   3.720284186958872*^9, 3.720284251258296*^9}, {3.720284300971388*^9, 
   3.7202843055054007`*^9}, {3.7202859638959723`*^9, 
   3.7202860909432287`*^9}, {3.7202864429044*^9, 3.720286516707971*^9}, {
   3.720286856016101*^9, 3.720286859015635*^9}, {3.720286971152948*^9, 
   3.720287062809094*^9}, {3.720287206224946*^9, 3.7202872163697853`*^9}, {
   3.720287469149179*^9, 3.72028747541852*^9}, {3.7202875345043087`*^9, 
   3.72028756027789*^9}, {3.720287922315322*^9, 3.72028792692188*^9}, {
   3.720288033039906*^9, 3.720288040375025*^9}, {3.720288174727479*^9, 
   3.7202881772933197`*^9}, {3.7202937748727694`*^9, 3.720293808207089*^9}, {
   3.7202938473063517`*^9, 3.720293847983262*^9}, {3.720307069989511*^9, 
   3.720307116149193*^9}, 3.720307471094714*^9, {3.720350625200192*^9, 
   3.720350627421629*^9}, {3.7203506754237957`*^9, 3.720350697614951*^9}, {
   3.720350921860058*^9, 3.72035097061583*^9}, {3.720351147689144*^9, 
   3.720351148428586*^9}, 3.720352390740493*^9, 3.720352569869671*^9, {
   3.725582942076541*^9, 3.7255829623934517`*^9}, {3.725706434799713*^9, 
   3.725706435120426*^9}, {3.7265709495775023`*^9, 3.72657097041679*^9}, {
   3.8060962337099047`*^9, 3.8060962441399336`*^9}, {3.8063093566226807`*^9, 
   3.8063093570994062`*^9}, {3.8063138557055817`*^9, 3.806313882641192*^9}, {
   3.80631391861856*^9, 3.8063139257374835`*^9}, {3.806314227530235*^9, 
   3.806314236720973*^9}, {3.806314354591522*^9, 3.806314368781399*^9}, {
   3.806314435350251*^9, 3.8063144368504*^9}, {3.806314726200824*^9, 
   3.806314733882427*^9}, 
   3.806315586331565*^9},ExpressionUUID->"e6266782-0933-46f4-bfc5-\
9ac0340565c7"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.806315699291437*^9, 
  3.806315699556286*^9}},ExpressionUUID->"1c6f85b5-c3c5-4191-9488-\
c1431c82dcce"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"plot", " ", "power", " ", 
    RowBox[{"spctrum", " ", "@", "detector"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Tabe", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"answer", "[", "ii", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"ii", ",", "0", ",", "Nmaxx"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Tabeexport", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"N", "[", 
          RowBox[{"Tabe", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], ",", 
         RowBox[{"Re", "[", 
          RowBox[{"Tabe", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "3"}], "]"}], "]"}], "]"}], ",", 
         RowBox[{"Im", "[", 
          RowBox[{"Tabe", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "3"}], "]"}], "]"}], "]"}], ",", 
         RowBox[{"Tabe", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "4"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "Tabe", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Tabepower1", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Tabe", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Tabe", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "4"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "Tabe", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"Tabepower1", ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"All", ",", "All"}], "}"}]}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.720276495052479*^9, 3.72027650478961*^9}, 
   3.7202768710439777`*^9, {3.720289133636586*^9, 3.720289134000206*^9}, {
   3.720295452889329*^9, 3.720295491779483*^9}, {3.720307808130336*^9, 
   3.720307837853526*^9}, {3.720316420601172*^9, 3.720316425404026*^9}, {
   3.720316522793483*^9, 3.720316523100021*^9}, {3.72031665566706*^9, 
   3.720316691846531*^9}, {3.720318611708109*^9, 3.720318660227333*^9}, {
   3.720319735550847*^9, 3.7203197616725817`*^9}, {3.720320937076664*^9, 
   3.720320989002818*^9}, {3.7203211887355957`*^9, 3.720321202887012*^9}, {
   3.720321377165049*^9, 3.720321399340214*^9}, {3.720322367570269*^9, 
   3.720322381416183*^9}, {3.7203224202346573`*^9, 3.720322509668668*^9}, {
   3.7203226914582567`*^9, 3.72032273607658*^9}, {3.720322779758603*^9, 
   3.720322818431041*^9}, {3.720322863095685*^9, 3.720322879762289*^9}, {
   3.720322911945767*^9, 3.7203229133281813`*^9}, {3.720342324245122*^9, 
   3.720342326200007*^9}, {3.7203429988301897`*^9, 3.720343033951708*^9}, 
   3.7203430987386217`*^9, {3.720343394255698*^9, 3.720343411007814*^9}, {
   3.720343493456629*^9, 3.720343505883376*^9}, {3.720343563970585*^9, 
   3.720343580357463*^9}, 3.720343669386386*^9, {3.720351775976816*^9, 
   3.7203518202148314`*^9}, {3.7203526878202744`*^9, 
   3.7203526885422697`*^9}, {3.720353363469408*^9, 3.720353372698892*^9}, {
   3.720371875723793*^9, 3.720371891855729*^9}, {3.7205039549911633`*^9, 
   3.7205039631691313`*^9}, 3.720503997015242*^9, {3.720504779136263*^9, 
   3.7205047795099688`*^9}, {3.7205049677348557`*^9, 3.720504973753105*^9}, {
   3.720505090888968*^9, 3.720505096689576*^9}, {3.7205059765995502`*^9, 
   3.720505981184464*^9}, {3.720508157174651*^9, 3.7205081647522993`*^9}, {
   3.725498242068042*^9, 3.7254982423763113`*^9}, {3.7254982760955677`*^9, 
   3.7254982902822313`*^9}, 3.725581167348537*^9, {3.7255816276572113`*^9, 
   3.725581628176567*^9}, {3.725581660648337*^9, 3.725581675171629*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"31d0c83f-c870-4d8f-bedc-c2c43ec4807a"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw113k81PkfB/A5zExJ15Ztk5KitJvYastgvD+ipbZDbefWimpJt34o6XA0
RIkOQq1NyVHIhFCU3DlqhphxX0lSuWbcx4/5vvv84/E18/18Pu/X8/09Rn3/
ia3/MGg0mjadRhv/6zIzzqzh7CXgP7CMy50m06OOb8EClW3dvTCLmzKP37Yl
JRTmCM5cGxEv41Kfh4Pz+hptrrkxNyR4fERDaLWqk2TVVm6q/PtxULNIeXS1
dD937GDsPwL4OmLCH6Y54PmJMKn/B96WPD5XUfzgJE8xGTapM8DxdRBXPl1w
KjQENe06EhXLXbLXL1OmlQa/a5dv4NRn4n5eQsc6D6ZFcgU3fOxs8YMMWBlu
pzS7qYv7Rb7ea7AvND6qqT5Ff+WK8ZEFJadvs3LW/axPrZ8NlZs22J0l6/Sz
ZFpjK+SAnTBYuLbwsP4k+X7ygHVVs0LXwE9/q3zBfCh7PuB8yiVBn6r3DSwa
4dUIrkj0G8+OT1gAHZM/DT6ZP6xP7bcI2ixmBTWrzzewH9/eyWKoPshf+1pq
bEDl8xbCV+8QR1X9Y0CTDyEcjlFmfjt2zYCqRwjJO2pLz/+UYmDeML6ACNyk
6z3E5z4YUPWJoDg39ZTMerqhf+Z4ASXgrfRTH1vIM5SXu6IU5u+hTffoP2oo
L0dcCr1L7V0te8IMqfrfw8bd0ifpA7WGauPbmVcGZqpnNXOPLuJReZTBnBv7
gp0qYni2NuOjHDxjzvG3/evHo/IRg1m9pqrI6Q5vfLaZcWKoLra4VmGZzqPy
ksDLWa2tPye38HrGp5NJQPVNu+k5U1UjKr8KsFs3vU5y9oCRkbwBKuHdl8Ty
O3pTgcqzElY8cCmJFqQYybfHr4Kerplmr7TfGVH5VoOXi/ayY3OHjYqLxkc1
bPrq61B/0wKovGtA72ZA5C2vA6As32At7Boqtg/t3wtU/rWwJIilIFG2A/l0
e+uAr+IdUqjyP6A86iFBqrz7cJoTUPXUw8ktSfH/03MByqcetNdVLjb2cgWq
vnpYsJpRdKfPAyivBqj7J+Tg9P7LQNXbANOzrhvu5PkC5dcA5l5n3FRtbgBV
fyPoeIi8p9gFAOXZCOw/Njie3xMC1HSN4K0QuaPi1H9A+TYB58/u2aXe94HK
pwkW8pR1WxIigOJpguXt18xs5z8CKq8PoGsFqeeCnwDl/wEsn+5YZnX2KVD5
fYC/401DMmyTgOqHZvh1wHRpjHcq5tkMj/ZVpLs3pwHVH81Qwjp53KUhA/P9
CK5eebFOf2UB1S8fwWptxAbZoxzM+yNwNzs5P+zIB+p6bwHPrn962zwKMf8W
UDaOu/8s9C1Q/dQC0icm7zLYIvT4BC+uH1wAm0vQ4xP8wt2SdHLae/T4BP/d
OPTiwoUy9PgEJva2WofSy9GjFS6Xuio1WkjQoxVyFp/5e8bmCvRoha2KDrsi
j1Six2fQSX4XnX+5Cj0+w6N7fI2FmtXYn58hRHFuciOtBj3aQCu3Ou/J3Rr0
aAPn1JWa3tIa9GgD63NhjmGutejxBSrMZjX3jfUh5fEFdD5/0njYWIseXyA/
LfqQSKMOPb5CR1/Mk0VqdejxFSpqUqYmL65Dj6/Q+6i/sFi3Dj2+QZ43x3Lr
xDr0+AY+Bgu/CPtq0eMb2DOLHKyqatGjHfy379necL8WPdrhUN/+APOLtejR
DgOZRNdkfS16dMCuA/PLHCd+r6cDNrzkOiSKa9CnA4xmi9fbBdRgfR0wSaN3
katFDXp1gNbU5znZM2uw3g6IkOqFCQqr0a8DTCWfBecvVWP9ndAdkts0f001
enbCMZ/l1z/IqjCPTigfFvy2P7YKfTtB5bnlcLFNFebTCRF7deLPzK5C705o
cFjLWi6sxLy6QLSvylrP67t/F3gurJ7Uza3E/Logzk2pkNdRgf3QBVqBQiYn
ogKo51EXqLRPfWm5uwKv1y4InWObET61AvPthonPVxkq5kiwX7rh+ebufG1n
CebdDcr7rgdE60iwf7rBwSrTb1OzGPPvhpzdDy6cCBFjP3XD1dJVeoe2iNFD
Cid2dhn+yxGjhxRS6y+Gloz1P+UhBf89deSoYzl6SCFEWf+459Jy9JDC6B6V
0M9NZeghhWeZP1z68+7360kKcx7qKTpvK0MPGWSdYdZMnFyGHjJwfVVg4pL7
Hj1koL+rN/DtxffoIYPVEjODcO579JDBlK33/FZJS9FDBjpRFsySuFL06IGP
de1Bg3al6NEDGnTBlELNUvTogazlB6KzGkrQowe2lJi2bw4tQY8eaBpWc3DY
U4IePTAg+yGw6qcS9OiF29E3nkjKRejRC4cnvPOyCRChRy9kKKX2rd8mQo9e
UDbiz86dIUKPXhj9tvZxeakQPXphAyi2GN4SokcfWFzQ1FizXYgefWDdGeRe
+qMQPfpAu8/pQ6zgHXr0wVH/Q4sbV71Djz4IvTm0XSf9LXr0jT3vOf2nTN+i
Rx/0b5wmaSoqRo9+YMoMU07sKEaPfqjq11ekNRShRz+82OFjn360CD36Yc/u
Cq+g/kL06Af2BM0gd69C9OgHNfd5531+LESPAegtLrJ9HVGAHmPH1epbpuoV
oMcARIeGnbhS8AY9BoCmrz1dw/IN3m8GYO7lNRE1XfnoMQC2+/yjsi9/fx4M
QtealX+J1PLRYxBE+5dsH0nOQ49BEFs0mm3Ykoceg9Ca8deOgrZc9BgEWZt9
1RGvXPQYhPXkmK6eRi56DAFZ2qShOvaeR3kMQVy+8M5y6xz0GIJNzbG/n6Ln
oMcQTOoMOV9+Pxs9xr5/xnr/5rXZ6DEEQZoDarTWLPQYAu5d1ZRS3yz0GAaX
jTWpJWPvnZTHMGyN3DdQVpmJHsPQb651foZHJnoMg++kwts2SzPRYxi8nlnH
NJS/Ro9h+Fhdceuc+2v0GAG9w2JNns5r9BgBEye1X5RrMtBjBETDSUaKVzPQ
YwRU3uoe+8kwAz1GgBRvHXKrfIUeIxB97yWfCa/QYxS0bHjDgocv0WMU8kCL
4zPlJXqMwqsIY/ZV53T0GIUZghdxCR/T0GMU6Et+mzuwPQ09RoERmM20znuB
HjSyQrRwtEn/Bcjjnkkj6+/ki1zin6MPjYQsT5m1ROs5yOPi0YjdsuyYlrBU
9KKR1rW1N+LnpoK8XBsaqT94wdz/TgrIyzlLI7M5GzuPz0kB+Xb9aCTtgpP4
j3+TQb6dBzRi7GORN0c9Ge8XNNJ3fufe9ohnIOctopHSq41aScueYT40wr/7
Hg6kJAF1+6KRT0E8N6ZpEuZFJ8n39DS9RIkgn24enVxcF7Gz0yoR86OTUxan
t3O7EkAejxmdcOPm7drFT8A86WRWfFTmRpUEkG/vJJ086wh2/lHwFPOlk0j1
T3cj1j0F6vcRnRRE1AWNNAkwbzqp5fFLZrkKQF5uJp00nlwzQzpXgPnTyWTn
zQGX0uOBej2hkyVunS35lvHowSD+sczkdHo8ejDIi+crytM2PEEPBtFeaNNl
EhyHHgwSrZORMLk1Fj0YxHok3mKqYSx6MEhicOxDwxsxeD0xSOUx02G/tsfo
wSCjl9YkTjd/jB4MEqV14aFj5CP0YJCuyGE7JcVH6MEg5qNfHl0+EY0eDOK0
wFTWI45CDwbxnrzScaNJFHowya96yWvcBZHowSQ3f+u/eGVBJHowiaL66b37
AiPQg0m++KaPditFoAeTpEoSQ8HzIXowSXlJmKMe4yF6MIn0ok7Oe9dw9GAS
XX+XSkVGOHowSZrQeaKI/wA9mCRBxzxurtID9GASJ1vRby237qPH2PkFbsoa
8++jhwLZviiyoCA2DD0UiGmP8UcRLww9FEj3YT8FXeE99Bj7/FXP26qD99BD
gShd+3vwdu9/6KFAVK79nvRtyX/ooUB8wqadjrYKRQ8FIk4qmfnszr/ooUCe
riAejKq76KFAdq55Izw37y56KJC9ukYGM2zuoIcCOW7lpJkoCEEPBTJEi+Zs
ooegB4tYPL536922YPRgkbQeTsjimCD0YBGf3HWT13KC0INF7FaGz5hlcxs9
WOTAx9M9V/MD0YNFVsT+sjhwWSB6sEi7uthoQVAAeowds7qU1VkB6MEieV6r
r7s73kKPsfnDDpWvar2JHiwyLfumzjKrm+jBItUthbN3V95ADzYxKactj9p5
Az3YxGqRwzYlyXX0YBPBah8Xpz3X0YNN0i/YS8QN/ujBJr5TpmWrH/FHDzb5
4/Af969880MPNhEeOGR5RMkPPdjk7BSFgFyda+jBJmpqzhfddvmiB5tM43YH
unpeRQ82CTRvKI5KvYIebHLXRHisrtMHPdjkz53+Koo6PujBIZrH5omn2Huj
B4c0NM+Y8D75MnpwSEjzXycI8zJ6cMhJkzYtgz+90INDWDAv7nGkJ3pwCC3X
ttGZ5okeHNJc7SX1/ZuPHhxya+PSM8KXl9CDQ4qmLrb7WeMSenBIn2qdIt/X
Az04hGHuxCkYcEcPDtloLLJpOuKOHhOI0/Fkzxf1bugxgZy3+n0Bb7cb/B+3
t/Wk
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{475., Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 3.01}, {0, 0.48735375327548475`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.72027155855482*^9, 3.72027231686582*^9, 3.720272848153054*^9, 
   3.72027468319044*^9, 3.7202747849471197`*^9, 3.7202749047858133`*^9, {
   3.7202764890437517`*^9, 3.7202764991614323`*^9}, 3.720276872844296*^9, 
   3.7202774283051767`*^9, 3.720277929432276*^9, 3.720278067761683*^9, 
   3.7202785202535067`*^9, 3.72027895283422*^9, 3.720279536147195*^9, 
   3.7202799212562943`*^9, 3.720280237285639*^9, 3.7202874117422123`*^9, 
   3.7202882227787743`*^9, 3.7202884105741262`*^9, 3.720288664222139*^9, 
   3.7202887574685163`*^9, 3.720289019036697*^9, 3.7202891347661133`*^9, 
   3.720289754132683*^9, 3.720290908223648*^9, 3.720294079117956*^9, 
   3.720295388873505*^9, {3.720295461125951*^9, 3.720295492743185*^9}, 
   3.720306862666604*^9, 3.720307666681884*^9, {3.720307809029211*^9, 
   3.720307838262177*^9}, 3.720309085566296*^9, 3.720310568255632*^9, 
   3.720316263301135*^9, 3.72031642723144*^9, 3.7203165248363667`*^9, {
   3.720316673726962*^9, 3.720316693003759*^9}, {3.720318601508972*^9, 
   3.720318661086341*^9}, 3.72031971722379*^9, {3.720319754260736*^9, 
   3.7203197623182697`*^9}, {3.720320923072253*^9, 3.720320990218503*^9}, {
   3.7203211904785347`*^9, 3.720321207144991*^9}, {3.720321381392215*^9, 
   3.720321400318935*^9}, {3.720322347816264*^9, 3.720322383033226*^9}, {
   3.720322423648593*^9, 3.720322511627677*^9}, {3.720322697343301*^9, 
   3.720322737805334*^9}, {3.720322783188531*^9, 3.720322820781049*^9}, {
   3.72032286865156*^9, 3.720322881514344*^9}, 3.7203229165884953`*^9, 
   3.720326243285411*^9, 3.7203422419473343`*^9, {3.720342314689843*^9, 
   3.720342327648037*^9}, {3.720343000412511*^9, 3.720343034763241*^9}, 
   3.7203430998347387`*^9, {3.720343377923046*^9, 3.720343412066065*^9}, {
   3.7203434949475803`*^9, 3.720343507778625*^9}, {3.720343570445286*^9, 
   3.720343581473152*^9}, 3.720343670403911*^9, 3.72035128240278*^9, 
   3.7203516987200003`*^9, {3.7203517788912477`*^9, 3.720351823223337*^9}, {
   3.720352681654875*^9, 3.720352689243775*^9}, {3.7203533558723507`*^9, 
   3.7203533745063887`*^9}, 3.7203722772562037`*^9, 3.7205030388336563`*^9, {
   3.720503948526959*^9, 3.720503963921185*^9}, 3.7205039977162647`*^9, {
   3.720504769819735*^9, 3.720504781681428*^9}, {3.720504964050054*^9, 
   3.720504974588231*^9}, {3.720505084817411*^9, 3.720505097589519*^9}, 
   3.7205052363139467`*^9, 3.720505461595052*^9, 3.720505599702879*^9, 
   3.72050572518423*^9, {3.720505968663488*^9, 3.720505982065629*^9}, 
   3.720506279067334*^9, 3.720506536945477*^9, 3.720506804891708*^9, 
   3.720507630292428*^9, {3.720508157802725*^9, 3.7205081655524883`*^9}, 
   3.720523809279994*^9, {3.725498238949259*^9, 3.725498243086586*^9}, {
   3.725498281321807*^9, 3.72549829092446*^9}, 3.725581250839251*^9, {
   3.725581623097192*^9, 3.725581628987452*^9}, {3.725581661764637*^9, 
   3.725581676890037*^9}, 3.725583489213634*^9, 3.725706561751779*^9, 
   3.725706903832863*^9, 3.725707576447184*^9, 3.725707845153633*^9, 
   3.726571401785623*^9, 3.726575845379635*^9, 3.726577465113278*^9, 
   3.8059924888217173`*^9, 3.805993497239386*^9, 3.805998513577671*^9, 
   3.8060001757678876`*^9, 3.8060141265482607`*^9, 3.806014612150901*^9, 
   3.8060152421711206`*^9, 3.8060187867737107`*^9, 3.8060202415089073`*^9, 
   3.806023400929432*^9, 3.8060484778128595`*^9, 3.806074192410936*^9, 
   3.806076218902233*^9, 3.806077921358288*^9, 3.8060795518437595`*^9, 
   3.8060817037952976`*^9, 3.8060831838460274`*^9, 3.806095728093408*^9, 
   3.80609729355962*^9, 3.806099206497321*^9, 3.806105572850857*^9, 
   3.806108103801546*^9, 3.8061559239957047`*^9},
 CellLabel->
  "Out[128]=",ExpressionUUID->"f5052a81-d5ad-4ae2-9f13-1e5dbe36b9e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dat1", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"N", "[", 
        RowBox[{"Tabe", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"Re", "[", 
         RowBox[{"Tabe", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "3"}], "]"}], "]"}], "]"}], "+", 
        RowBox[{"I", "*", 
         RowBox[{"Im", "[", 
          RowBox[{"Tabe", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "3"}], "]"}], "]"}], "]"}]}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "Tabe", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"ff1", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Re", "[", 
       RowBox[{
        RowBox[{"dat1", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "*", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "I"}], "*", 
          RowBox[{"dat1", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}], "*", 
          RowBox[{"(", "t", ")"}]}], "]"}]}], "]"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"dat1", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", "+", "1"}], ",", "1"}], "]"}], "]"}], "-", 
        RowBox[{"dat1", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{
        RowBox[{"Length", "[", "dat1", "]"}], "-", "1"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", "ff1", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "20"}], ",", "180"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<t\>\"", ",", "\"\<h\>\""}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Medium", ",", 
      RowBox[{"FontSize", "\[Rule]", "16"}]}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", "Black", "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.720523826057309*^9, 3.720523826693927*^9}, {
  3.725498295434197*^9, 3.725498322624423*^9}, {3.7254984270743113`*^9, 
  3.7254984594381237`*^9}, {3.725706923943087*^9, 3.725706955956937*^9}, {
  3.8059926874585476`*^9, 3.8059928809815273`*^9}, {3.8059935210712194`*^9, 
  3.8059935216609545`*^9}, {3.805998555137879*^9, 3.805998571533491*^9}},
 CellLabel->
  "In[129]:=",ExpressionUUID->"15bc3f0f-4801-43fb-892d-f2c4c7478d97"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
hicfCkhFDBrU7nQ/YXQuDM8HbB85zqHBdNISzSvjYXjZerGYwwIaxP2QECnb
Eo7lOl6vCnGlQdv1q+2neeFYNeHyFRdPGvxnjZNMo8Kxzo5DiOJLg9e6Bh09
yeHYaMjmtWUgDa44VV1WjwnHlrlKPgahNDiSrJTKdg7HBKuvIhrhNNiop5eq
tyMcs2dwrnwUDVpfn1bunArD7leO6yyJo4Ek7fDXvpIwHMxyqf+VQIMi3/C/
aH8YlioYHdyTSoO0jaablLsP4usfg/7FZwjvay589ZxzEH/2jdsjeZIGLEmT
Y1uoB3DyzSVs4hkaSO9tDy1sD8Ubp48dyj1Hg2VhzkXq9qG4frf86b4iGvwz
I+envgjBgthzVaqXaKBpYn97AycEzz/e+NqtjAZy8iFfG74H43zx8h9l12nA
PhmWeSk7GO+215eZuEWDer+EZ0wUjN8cr9lmcJcGq2KLtzX9CsKhXWaOEbU0
6HD5/GFrbRCWWfvUD2MaXOslnDJMDcIVfEKGWAMNqsKMxr9ygrDDxTdl+5tp
oDrDT540DMJjI7ynx1ppkE9MFY1cFYTTdYc/vXpBgxmJTR2x3wKxVrDfYsXX
wv6JryrvagrET6qmNvJ6aFC40ZVDPSOch/9EWlx4SwPqWs3EH4JALAILnUfe
02BNYfyiL2sD8fnE9DjdYRosXZYUejUzAO95Kl0QPEqD5yPHLx574o97l595
cPcrDe531+c1dPnhcJJq/9wkDRaevxrW9sgXy5+6PGv2S/geT2fQIpN98O2+
LYopf2hwq3i4dUzdGxNUq3a2/qPB8AXW8NFiT/zV1YQmLUYHk79P/879c8fa
X21PnJWkg8HV7bNDgS64efurm4NSdPixL9VeP8sJu4exXqjL0aHNK50u5sjH
RSJeyyuU6SDT//6uym06Nt07sfnnejoc/KxoqrSQgvvTwmx2a9BhocNMqVIY
ASusSk5p2EKHtTpX7gV+tMBV9OWXlurT4Xr34VwPxT2Ykp/T4LCTDlmN/j1a
3np4cnDtxxPGdOjOjbtr+F0FZ6pfWNCD6NDad4NIGvtqquOtrapiSYf0hb3X
9RLXo5brN01drOmQ3dBkzo/aijx/GHFL7eig0TPxen65IVpsVBc5TqCDTT/P
gddrjC5GWeVtp9Jh585T+0JKAZk/aqsOY9KBcHHuhQjRAg0uor25z6XDhkLm
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
CMtjg1/x3XxZLhNTb88mJ+ezYUJWyUqXl4mffTyiU1JI46tKFXJM88K6PeHv
n15hw4fNJYt4ZLxwzgDz8Pdiup47lbyf3/DEfMNb1gtdp/EPjxa8sffEYeMa
LaqlbDAajg1J/OWB22ZW77QvY0PF4ITTrjoPbDLPJxFSwQaJrhI8fcEDF/KO
3TtRyYbrEVtclOlnYYGPxNUqNqxvtY8tqfXAu4WbBZ7cYYO0u6Pq5XkP3Lm8
onToLhvOmupApa8ntlyVwxCsZYOYPt/nhe88cYl04qxSPRsuG3OVw0O88Er5
iIs2DTRfEbY1WaJMfEDJ3yqokQ1W3MMrjZqYuFfN9nvCAxq/xKZ7TtHe2F5n
U9qVZjb8fnI2l6Ptg2/qy+g3P6b7tVT0y2+ffLCU6eJPX1roeLzp+bv3++Ij
FlNH+J+zwcm0W2bZH1/8zeaz8oaXbKjK2nz/COmH3RxbXli+YsOp8Y/N6YV+
uMatajf1hg020ecO62M/LM/MkzrazoY9+wWO1ZXR849/UkPBO5qfCWGH77v9
8AQZxW36wIaO0uL3gsv8sE8wIdz3kQ2qnpRBV4wvbgx3uLmgiw0GDQMtl1p8
sGqkPlO+mw3DhlPi7ye9cdo++b/mvWyIcLoVpsjrjX8dWlpI9NPvE3sNpGa9
MCv+l13cABtqVLTXD/Z6Yq1TLzIavtH6Fc+5SV1zx1npd427h2l+EqTeyp1l
YJ5zhT3/Ruh+WHTazyjdDQfnpiauG6f9FB7w/nGhK24tOKCOJmm9v9+S0NPq
gkV5bt81mqb7y4+y3HBFF+zqN26l95M+H/2VSiW1nfHparXX2rNsyHEKtOW4
OOHXYsEB6r/ZoNved4m65ohX7ir4pvyH9vvBn3r7TRyx+/OuqPX/2LBT81bJ
J15HfEZFaqEsLwVa8h8UXk064PZjHqlrFlKgI2+yqn2xI5bo/W/NKn4K+MQs
cucMHbGn2bOiFQIU/Pr4hzLZ74jPZgvoiiym4KrGBePee474/YxFw2IhCkZs
Y1q+TTtiScZhB/6lFIw2pDXuXeOEvcvuvudZRq+v035mIOeEs4WmqXlRCjzL
k468mnfEHUFa4z9XUGC7dmxa77IjlnoQemhSjILi5/MHeFc6Yl/ZosWjEhRU
CF6fKgMHnHOwN+ObJAUFcutsO1S34s73a+UHpCiwuLrTzLXVDktv9r7RI02B
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
       "]]},
     Annotation[#, "Charting`Private`Tag$3568534#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"t\"", TraditionalForm], 
    FormBox["\"h\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->Directive[Medium, FontSize -> 16],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8059927685727835`*^9, 3.8059927832039447`*^9}, {
   3.8059928152142763`*^9, 3.8059928819198055`*^9}, {3.8059935031711645`*^9, 
   3.8059935231587367`*^9}, 3.805998521129351*^9, {3.80599855635818*^9, 
   3.8059985725808835`*^9}, 3.8060001820582857`*^9, 3.8060141368143587`*^9, 
   3.8060146183723373`*^9, 3.8060152499136877`*^9, 3.8060188184319105`*^9, 
   3.806020249799159*^9, 3.8060234109307137`*^9, 3.8060484883638153`*^9, 
   3.8060741996597853`*^9, 3.80607622677875*^9, 3.806077928466195*^9, 
   3.806079560317159*^9, 3.8060817107268996`*^9, 3.8060831890559597`*^9, 
   3.8060957342378983`*^9, 3.8060973248720846`*^9, 3.806099215028855*^9, 
   3.8061055778598127`*^9, 3.8061081097141285`*^9, 3.806155930274993*^9},
 CellLabel->
  "Out[131]=",ExpressionUUID->"d4ae8fde-cbb3-4e32-8e8b-3d4b7e679c08"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.806000228305813*^9, 
  3.806000228461715*^9}},ExpressionUUID->"9a67a463-08aa-423f-b006-\
e390fb8d2db2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"BB", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rlist", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"N", "[", 
        RowBox[{"rh", "+", 
         RowBox[{"Exp", "[", 
          RowBox[{"kh", "*", 
           RowBox[{"ii", "/", "16"}]}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"ii", ",", 
         RowBox[{"-", "500"}], ",", "30"}], "}"}]}], "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"N", "[", 
        RowBox[{"2.001", "+", 
         RowBox[{"ii", "/", "10"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"ii", ",", "0", ",", 
         RowBox[{"10", "*", 
          RowBox[{"(", 
           RowBox[{"rd", "-", "3"}], ")"}]}]}], "}"}]}], "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"N", "[", 
        RowBox[{"rd", "-", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "kd"}], "*", "ii"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"ii", ",", 
         RowBox[{"-", "20"}], ",", "180"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rtlist", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"N", "[", 
      RowBox[{"Re", "[", 
       RowBox[{"rt", "/.", 
        RowBox[{"r", "\[Rule]", 
         RowBox[{"rlist", "[", 
          RowBox[{"[", "ii", "]"}], "]"}]}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", "1", ",", 
       RowBox[{"Length", "[", "rlist", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vr1list", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"N", "[", 
      RowBox[{"vr1", "/.", 
       RowBox[{"r", "\[Rule]", 
        RowBox[{"rlist", "[", 
         RowBox[{"[", "ii", "]"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", "1", ",", 
       RowBox[{"Length", "[", "rlist", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vr2list", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"BB", "*", 
      SuperscriptBox["kh", "2"], "*", 
      SuperscriptBox["kappa", "2"], "*", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"f", "/.", 
           RowBox[{"r", "\[Rule]", 
            RowBox[{"rlist", "[", 
             RowBox[{"[", "ii", "]"}], "]"}]}]}], ")"}], "*", 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Sqrt", "[", 
             RowBox[{"1", "-", "f"}], "]"}], "/", "f"}], ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", 
             RowBox[{"2", "*", "rh"}], ",", 
             RowBox[{"rlist", "[", 
              RowBox[{"[", "ii", "]"}], "]"}]}], "}"}]}], "]"}]}], ")"}], 
       "2"]}], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", "1", ",", 
       RowBox[{"Length", "[", "rlist", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vrlist", "=", 
    RowBox[{"vr1list", "+", "vr2list"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"vrrh", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"vr1", "+", 
       RowBox[{"BB", "*", 
        SuperscriptBox["kh", "2"], "*", 
        SuperscriptBox["kappa", "2"], "*", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"f", "*", 
           RowBox[{"Integrate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Sqrt", "[", 
               RowBox[{"1", "-", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"2", "*", "kh"}], ")"}], "*", 
                 RowBox[{"(", 
                  RowBox[{"r", "-", "rh"}], ")"}]}]}], "]"}], "/", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "*", "kh"}], ")"}], "*", 
                RowBox[{"(", 
                 RowBox[{"r", "-", "rh"}], ")"}]}], ")"}]}], ",", "r"}], 
            "]"}]}], ")"}], "2"]}]}], ")"}], "-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"vr1", "+", 
         RowBox[{"BB", "*", 
          SuperscriptBox["kh", "2"], "*", 
          SuperscriptBox["kappa", "2"], "*", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"f", "*", 
             RowBox[{"Integrate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Sqrt", "[", 
                 RowBox[{"1", "-", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"2", "*", "kh"}], ")"}], "*", 
                   RowBox[{"(", 
                    RowBox[{"r", "-", "rh"}], ")"}]}]}], "]"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"2", "*", "kh"}], ")"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"r", "-", "rh"}], ")"}]}], ")"}]}], ",", "r"}], 
              "]"}]}], ")"}], "2"]}]}], ")"}], "/.", 
       RowBox[{"r", "\[Rule]", 
        RowBox[{"rlist", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], ")"}], "+", 
     RowBox[{"vrlist", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"near", " ", 
    SubscriptBox["r", "H"]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vrrd", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"vr1", "+", 
       RowBox[{"BB", "*", 
        SuperscriptBox["kh", "2"], "*", 
        SuperscriptBox["kappa", "2"], "*", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"f", "*", 
           RowBox[{"Integrate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Sqrt", "[", 
               RowBox[{"1", "-", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"2", "*", "kd"}], ")"}], "*", 
                 RowBox[{"(", 
                  RowBox[{"rd", "-", "r"}], ")"}]}]}], "]"}], "/", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "*", "kd"}], ")"}], "*", 
                RowBox[{"(", 
                 RowBox[{"rd", "-", "r"}], ")"}]}], ")"}]}], ",", "r"}], 
            "]"}]}], ")"}], "2"]}]}], ")"}], "-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"vr1", "+", 
         RowBox[{"BB", "*", 
          SuperscriptBox["kh", "2"], "*", 
          SuperscriptBox["kappa", "2"], "*", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"f", "*", 
             RowBox[{"Integrate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Sqrt", "[", 
                 RowBox[{"1", "-", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"2", "*", "kd"}], ")"}], "*", 
                   RowBox[{"(", 
                    RowBox[{"rd", "-", "r"}], ")"}]}]}], "]"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"2", "*", "kd"}], ")"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"rd", "-", "r"}], ")"}]}], ")"}]}], ",", "r"}], 
              "]"}]}], ")"}], "2"]}]}], ")"}], "/.", 
       RowBox[{"r", "\[Rule]", 
        RowBox[{"rlist", "[", 
         RowBox[{"[", 
          RowBox[{"Length", "[", "rlist", "]"}], "]"}], "]"}]}]}], ")"}], "+", 
     RowBox[{"vrlist", "[", 
      RowBox[{"[", 
       RowBox[{"Length", "[", "rlist", "]"}], "]"}], "]"}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"near", " ", 
    SubscriptBox["r", "d"]}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ifun", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"Transpose", "@", 
     RowBox[{"{", 
      RowBox[{"rtlist", ",", "vrlist"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.806000233694727*^9, 3.806000235096916*^9}, {
  3.8063149121853094`*^9, 
  3.806314913265691*^9}},ExpressionUUID->"961d4147-1585-426f-a561-\
701f82ddf238"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"x1", "=", 
    RowBox[{"-", "20"}]}], ";", 
   RowBox[{"x2", "=", "50"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"vrrh", "/.", 
    RowBox[{"r", "\[Rule]", 
     RowBox[{"rh", "+", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"2", "*", "kh", "*", 
         RowBox[{"(", 
          RowBox[{"x", "-", 
           RowBox[{"rtlist", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "]"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"rlist", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "-", "rh"}], ")"}]}]}]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ifunfull1", "[", "xx_", "]"}], ":=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"vrrh", "/.", 
         RowBox[{"r", "\[Rule]", 
          RowBox[{"rh", "+", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"2", "*", "kh", "*", 
              RowBox[{"(", 
               RowBox[{"xx", "-", 
                RowBox[{"rtlist", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "]"}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"rlist", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "-", "rh"}], ")"}]}]}]}]}], 
        ",", 
        RowBox[{
         RowBox[{"xx", "<=", 
          RowBox[{"rtlist", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "&&", 
         RowBox[{"xx", "\[GreaterEqual]", 
          RowBox[{"-", "x1"}]}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ifun", "[", "xx", "]"}], ",", 
        RowBox[{
         RowBox[{"xx", ">", 
          RowBox[{"rtlist", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "&&", 
         RowBox[{"xx", "<", 
          RowBox[{"rtlist", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "rlist", "]"}], "]"}], "]"}]}]}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"vrrd", "/.", 
         RowBox[{"r", "\[Rule]", 
          RowBox[{"rd", "-", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "2"}], "*", "kd", "*", 
              RowBox[{"(", 
               RowBox[{"xx", "-", 
                RowBox[{"rtlist", "[", 
                 RowBox[{"[", 
                  RowBox[{"Length", "[", "rlist", "]"}], "]"}], "]"}]}], 
               ")"}]}], "]"}], "*", 
            RowBox[{"(", 
             RowBox[{"rd", "-", 
              RowBox[{"rlist", "[", 
               RowBox[{"[", 
                RowBox[{"Length", "[", "rlist", "]"}], "]"}], "]"}]}], 
             ")"}]}]}]}]}], ",", 
        RowBox[{
         RowBox[{"xx", "\[GreaterEqual]", 
          RowBox[{"rtlist", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "rlist", "]"}], "]"}], "]"}]}], "&&", 
         RowBox[{"xx", "\[LessEqual]", "x2"}]}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}]}], "Input",
 CellLabel->
  "In[151]:=",ExpressionUUID->"c81a8ced-a779-4718-8ee1-8ad87f997668"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ii", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nmaxx", "=", "300"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"While", "[", 
    RowBox[{
     RowBox[{"ii", "<", 
      RowBox[{"Nmaxx", "+", "1"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"w", "=", 
       RowBox[{"0.01", "+", 
        RowBox[{"0.01", "*", "ii"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"EQ", "=", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"y", "[", "x", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "2"}], "}"}]}], "]"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"w", "^", "2"}], "-", 
           RowBox[{"ifunfull1", "[", "x", "]"}]}], ")"}], "*", 
         RowBox[{"y", "[", "x", "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"BC", "=", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "I"}], "*", "w", "*", "x1"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"BC1", "=", 
       RowBox[{
        RowBox[{"-", "I"}], "*", "w", "*", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "I"}], "*", "w", "*", "x1"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"sol", "=", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"EQ", "==", "0"}], ",", 
           RowBox[{
            RowBox[{"y", "[", "x1", "]"}], "\[Equal]", "BC"}], ",", 
           RowBox[{
            RowBox[{
             SuperscriptBox["y", "\[Prime]",
              MultilineFunction->None], "[", "x1", "]"}], "\[Equal]", 
            "BC1"}]}], "}"}], ",", "y", ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "x1", ",", "x2"}], "}"}], ",", 
         RowBox[{"MaxSteps", "\[Rule]", 
          RowBox[{"10", "^", "6"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"yinf", "=", 
       RowBox[{
        RowBox[{"y", "[", "x2", "]"}], "/.", 
        RowBox[{"sol", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], ";", 
      RowBox[{"yinf1", "=", 
       RowBox[{
        RowBox[{
         SuperscriptBox["y", "\[Prime]",
          MultilineFunction->None], "[", "x2", "]"}], "/.", 
        RowBox[{"sol", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"yinfana", "=", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cin", "*", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "I"}], "*", "w", "*", "x2"}], "]"}]}], "+", 
         RowBox[{"Cout", "*", 
          RowBox[{"Exp", "[", 
           RowBox[{"I", "*", "w", "*", "x2"}], "]"}]}]}], ")"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"yinfana1", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Cin", "*", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "I"}], "*", "w", "*", "x"}], "]"}]}], "+", 
            RowBox[{"Cout", "*", 
             RowBox[{"Exp", "[", 
              RowBox[{"I", "*", "w", "*", "x"}], "]"}]}]}], ",", "x"}], "]"}],
          ")"}], "/.", 
        RowBox[{"x", "\[Rule]", "x2"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"solcin", "=", 
       RowBox[{
        RowBox[{"Solve", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"yinf", "\[Equal]", "yinfana"}], ",", 
            RowBox[{"yinf1", "\[Equal]", "yinfana1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Cin", ",", "Cout"}], "}"}]}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Aint", "=", 
       RowBox[{
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"x", "-", "r0"}], ")"}], "^", "2"}]}], "/", 
               RowBox[{"sigma", "^", "2"}]}], "]"}], "*", 
             RowBox[{"y", "[", "x", "]"}]}], "/.", "sol"}], "//", "Release"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "x1", ",", "x2"}], "}"}]}], 
         RowBox[{"(*", 
          RowBox[{",", 
           RowBox[{"WorkingPrecision", "\[Rule]", "8"}], ",", 
           RowBox[{"PrecisionGoal", "\[Rule]", "8"}], ",", 
           RowBox[{"MaxRecursion", "\[Rule]", "6"}]}], "*)"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"answer", "[", "ii", "]"}], "=", 
       RowBox[{"{", 
        RowBox[{"w", ",", 
         RowBox[{"Cin", "/.", 
          RowBox[{"solcin", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"Psi", "=", 
          RowBox[{
           RowBox[{"Aint", "/", 
            RowBox[{"(", 
             RowBox[{"2", "*", "I", "*", "w", "*", "Cin"}], ")"}]}], "/.", 
           RowBox[{"solcin", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}], ",", 
         RowBox[{"P", "=", 
          RowBox[{
           RowBox[{"w", "^", "2"}], "*", 
           RowBox[{
            RowBox[{"Abs", "[", "Psi", "]"}], "^", "2"}]}]}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ii", "++"}], ";"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<answer_temp_B0.txt\>\"", ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"answer", "[", "ii", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"ii", ",", "0", ",", "Nmaxx"}], "}"}]}], "]"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.806000292528042*^9, 3.8060002934754906`*^9}, {
  3.8060103494184237`*^9, 3.806010350309882*^9}, {3.8060153173571024`*^9, 
  3.8060153261120577`*^9}, {3.806020365859644*^9, 3.8060203724439044`*^9}},
 CellLabel->
  "In[153]:=",ExpressionUUID->"9ceacbbc-2363-4376-b14a-82c8c4cc30f9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"plot", " ", "power", " ", 
    RowBox[{"spctrum", " ", "@", "detector"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Tabe", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"answer", "[", "ii", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"ii", ",", "0", ",", "Nmaxx"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Tabeexport", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"N", "[", 
          RowBox[{"Tabe", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], ",", 
         RowBox[{"Re", "[", 
          RowBox[{"Tabe", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "3"}], "]"}], "]"}], "]"}], ",", 
         RowBox[{"Im", "[", 
          RowBox[{"Tabe", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "3"}], "]"}], "]"}], "]"}], ",", 
         RowBox[{"Tabe", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "4"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "Tabe", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Tabepower1", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Tabe", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Tabe", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "4"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "Tabe", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"Tabepower1", ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"All", ",", "All"}], "}"}]}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}]}]], "Input",
 CellLabel->
  "In[157]:=",ExpressionUUID->"96f58a0b-1bcc-49d2-ab07-a4521973bd0c"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
B/SYR5zFfKKT/3CA/wPHJPoK
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 3.01}, {0, 0.49497499410542495`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8060159411084423`*^9, 3.806021696298176*^9},
 CellLabel->
  "Out[160]=",ExpressionUUID->"f721311d-a577-479e-af6c-9768528fa7ec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dat1", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"N", "[", 
        RowBox[{"Tabe", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"Re", "[", 
         RowBox[{"Tabe", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "3"}], "]"}], "]"}], "]"}], "+", 
        RowBox[{"I", "*", 
         RowBox[{"Im", "[", 
          RowBox[{"Tabe", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "3"}], "]"}], "]"}], "]"}]}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "Tabe", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"ff1", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Re", "[", 
       RowBox[{
        RowBox[{"dat1", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "*", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "I"}], "*", 
          RowBox[{"dat1", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}], "*", 
          RowBox[{"(", "t", ")"}]}], "]"}]}], "]"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"dat1", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", "+", "1"}], ",", "1"}], "]"}], "]"}], "-", 
        RowBox[{"dat1", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{
        RowBox[{"Length", "[", "dat1", "]"}], "-", "1"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", "ff1", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "20"}], ",", "180"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<t\>\"", ",", "\"\<h\>\""}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Medium", ",", 
      RowBox[{"FontSize", "\[Rule]", "16"}]}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", "Black", "}"}]}]}], "]"}]}], "Input",
 CellLabel->
  "In[161]:=",ExpressionUUID->"e95f28c7-b9fc-4cca-833d-954de894798a"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJwUV3c4198Xl72yV8jee5PRvR97Zs/svVdWJLJaCMkm2aSSrxHFfRcZycie
kRFJEi2zn99f9znP6z7P63XPOfc8r8PtGmTmgY+Hh5dIgYf3/zM4Ofnlv3+y
GOl1Bz8xj3Poml9wv8GOLObz76ZiZ5wMuml6eSp3SRZDNo/fJ1JcRFmK2msr
I7LYy+Iff7sMNFHJeek9ydeyWDeBycW4FV1UR8B+5tpzWWzl4bG+XoUhavlC
TN33SBazs6bfL/A3Rm+Gf7AzZMliexfdW4ozTdBg87yIc4IsViSAnaWbN0HT
hb1K9aGymFdR9Oc7WSZo9Uaj9l9XWczhjZ/cTIAx2vEqttA0l8VC/GtyhUoN
0ZHRLdcMDVls3EF7U31MF5HKXQmel5XFWKTvNokKaiJ6VsfrQnyn7/Mc/6xy
Uw1x4OmlhjGc6lstTwl/Io1EPssWYISyWIVZO8XfQgak8J6jhvKXDMbVz1qb
G8cBcI1kLTZrMpj0pyxvIyU5YJj3s6tiQgazbpstVWCFwOb64oedtzLYRjfP
Ye0DLeDu/m5RtUUGI02eGAeO+iBYv/nbrSoZbHolXzdX7xK4JlV6OJ4jg7nt
U8iaF5iAm0x3ybhvymBJR4whVxNMQdZROHNApAymIzEzjo2bgpJlZ/42LxmM
7eq10PY0U1DXZyBLZCODBVzttBN+ZgJanirgTHVlMFmq8fUfcZfAm2xu42Il
GUxJmneRMk8fDEZTOnwRksFabhFQXu/VAtPOf3zlz8lgmhH/yYopQrCqvRx1
g0wG0wVeLE7icmBHbDBlcF8aE0o7lJmZYAeHdC+yz21KY/X9/X4X+VkQ8X5Z
mcesNFZYPux1yCaL6BbTGp6/k8bmKAVHH2QAxPE2qvO4XRqbd739iyBWC4k8
dnuv91gaq3lI2bZ5VR8pZF6afVAojW2f+4Hry7qEcJEXNj7dlcYC3YQZoj+Y
IEMHvt/i16SxW/e5fhn1miIbDWrCaP9TvvXokEVuM+QufEDbYy+NsRcMHPku
mKJg6jVOOiNpzGwfxmQcmqBrv4bFHdWksa2qkKgcYmN0c65dpU5cGvvTe1wX
ccYAZb2u1Pt9XhpzMw8gTyLTRiXVGdbqVNJY0S/PrA1diOrSYjzST6SwM3XB
/I8+yaLmK55XZrelMBqW2ueKnecQZmt6Q2BRCnN+N27zF54H74HqvdBhKcyh
6Yda4Gc5MM0vWNyJpLDrNEW0OtsQrFDQPSZvkMKG/vSk3VrSBts/jl5YlUph
9iQ5H/MZDcHB1HpPWYYUNidC5FQpaQKIO0fHt+OlsL1wioaCAVNAW9GxrBwi
hVF8bnlPPmIG2O/U7KS4SGGr9p1MPrLmQCj4/smoqRQ2GDoWmvvDDMhZXafk
VJfCJgZ94mgozQBU9WH1k5HCXriFm3y6bQIMeSyEWnlO+Snb7Na2DYE1KVAg
oJfC6uXL17Xf6wDWUnPu4zNSGM8keYOAMQ60B42wbH+SxJj7TQm9Tvu/Z4jn
7USxJOZ5q+EioOJHhicGhf0xkphivctERfUFNCoeHtJhK4kJcb8nJFrXQDYO
JTrPFSWxmTBbJj45fbSY2nu+klESKyULOGq+aow8X+3s5e1JYB3es5wXMFO0
9fXcu9QPEthTSyuWN1TmKJRNozT+mQRmCq6UCBWYo7/6/hFhaRJYn1YB2/Rl
c3Q9+oGht58EdtBhLqduaYYI6zp57PUkMKdQgebZeybozsz6X2NBCezuHRwu
8YIhoiGjHdYgksD4lkw7VYW0UY6ScqXiijhmdGVzs8/kImL3dosRfS2OndSF
HtmekUBluammnA/FsYw8xgVZ452LQr3NgvSx4hhxKNF1jvPS4Onvj8fEl8Wx
vwOsl0pNIZATIB0/UBLHmHydchdidEC7pXTdNpM4Fsa4KyXQZQRgsl388k8x
zOy7YhH+FVPQ05RoNTkqhoUFLSSIW5sDw9V6sXcNYliRbS/zwFULMEo/id+Z
Lobdr86/JTNkAWw0/k0/9xfD5DMVVz8bW4CPoULPKvXFsI+WFJYj+ObAvcw0
OV9IDNtqWZ7l3DMBmx+iL6cRi2G89C72r3wMQciZCukbq6KYvwpxk3mPFvgr
NUgS/kYUCyjzc3t2TRVcd/694F0qirW/SBnwihAChBmcTfbXRTGaebzmEEM6
dAfp3jGxF8W02afkyDTkEc33EGdNZVEskJmZZDhbHeVwFCoosYhiSrPqZXEf
9BD7pW5Ksd8iGD5x3RYgNkFlsd+WOcdFsGt7+JRGCWZI6AlTG32jCEbbtROQ
qW6Bns6DeyQZIljB4acmOjlLJEfp43EYIIJNSWQUnRhYonaVLJXvBiJYYglL
GP8tCwT9XtKuCItg2Co6c/67GeopWF2fJBHBSP3vbJFlnM6Td2c7360JY9e8
wFMeQgM0uq+Q3dkljFVktDd/7zntT2Fn38ZHwhjP+bs5My6K6KPNbVgVJ4yp
+vxcJylmQe63GpkKHIQx5xjZD5KfBcBm69xWmoowZox3ayqtTRUErxN23Tgn
jJlY7Va6x2qD30wS+eF/hLBHC6+CAnuNwDVt6yCfCSFM/GSJOOGPKSCIiNdy
+E8IW7OnPvPC1gLcqaxlM80UwoaSO7jXdywBzcToD80gIezJ7uux7MdWIIfw
qFfJSAg7IvvafxRvBdjl+EvERIWwvxTcK5EhlqDM7VIYF5kQpmH6Jyol5XQe
3I/UZ1gXxFLKdXliR03A0zelXKRvBTG99OjLTxb1gdxu/+/DMkHs6KQ80g1P
A0g0ffOSThTEnI/RiuKcPBCKoJ3xdBPEpr0fV3ml0AMeJXn9Ig1BrEnSff7y
YyF0/sDm5QdeQWyD/I6isrQaYnl1TYyEUBDbi7jcdpSqjeiulxarrgpgbSzX
HytjRogSdlOFdgtgf/iy4iL/miJi/I246goBjFGe/4vIFQuE103xYz5JAOOp
CdMSvWCFDpIlXek8BDAnE8bQ3AvW6KeO+ZiOlgDWJWktb+trjbbJIjVj+QUw
13Ixi9t9VmhjoKC5kUgA29vZEMm2sUTLaZ0CG2v8WLT7Ju95AXM0b7yce76H
HysuFat9pGGCpmiJycyr+DHcB/65V/f10OiYcPStFH7sg8u80N8nOPT+gdHX
Dk9+zO/h9B8hBRmEnXswKCTIjzE3fTf5iKRB+9yLi44k/FgWCRv3+RocaCqe
f3Z/nQ/rPB48pF3RA0+d8Lj7e/mwb9dYuxTKTUANN1/WSTUfZt5TJhfSaw7K
VnQI5G7xYR38i0uGOCtQVOkX5uPNh6WKZ+OV71uDHK97ayW6fJjFsytUXxZt
QKbwf1bjQnzYwf3V5qFNG5D6dbKXjIwPs/P6crGIxQakPDlQAl94MaXb0/1G
QVYgPoijLqyfFxsLyD7xOTIH0dLqbHW1vNiCzzPZB+MmIGzPI3XxNi/Wfq5y
to9fHwQ23z5m8OXFcpif1n59hgNuFz4sxonwYqXamt+iM446HQ9/mjST82Ik
y6myOh1yyKaD5c3mJg/2htn/LPEtDWQWpyrLNcCDPRupjdShMkSGOOcKy8en
8ZswapZRU6RNkMR49y4Pll5dS6KIb4ng2+oUzI8HGzpK9SOOtkbKNwf+/DLg
wbYzsj31eWyRnN53b1ExHizJx1JmcdMWSVDQzzpT8mC2YngzFgO2SGhQwSBn
ixu7WpylptNlg3ju2b0aeM+NcWWjjcBZK3Te9Lr4mSfcmPTMw3QfLgvEQl9W
opDGjSGF5i6VehNEN/GW2j+AG7vl3FfGqaiHKHO/xD8y4sbE8ly/BPFCRGx7
dndSnBsjTl7rXvlPGOGxSbtRUnFj9c6KF/Ca2MHBvMU4bpsLG88XpvrCpgJ+
lkRpRQ5xYR97HG1luHTAtnNRS/1TLkzzT/yHP7+NwQYPJricfnqf5CTreMkc
LK+u5DEHcWHnakXnl9itwXwVCbmRMRcW8Ct3hCnTFkx5i8YkSHJhbcEL5y0F
LoMPIsZbrdRcmAyt5uiP95dBzsxa++wiJzYxtHfzWuxlcMdBvFirlBM7yC6S
pr5gB+I+hcU1OHNilwJlL5iT2QB8v9x6Ox5OLCmzYN+b1hKk/GybIVzlwDqt
FU5qnU0B+fV54meVHJgoxjvJLaoP0kn+ydp6cWCBv4XV/1RDQJfJ7UIgzIG9
61ONJeISAQ9YNdOfbJ7HNg4XPzL/5kBF4rc3zgSex2wY6GJX2XURV+tjxnrJ
8xjewxdfa8pMUAUcUrf6wY6lK44N6j61QELvdoLw/mPH+Chv+2aftUGPzemL
68LYMQHLFAfrMjsksSD/zkKBHdPLLGjYs7BHjZ42f07+sGGXt+9lKDE6IIWd
aL7aNjbMOqri3cGsPWq/WmxqHsOGnRQQpPhUXUYXCbDrx6ps2BP8i+ts8bbo
Tery4+oTVoyod65qMsoKaTMRzZhirFgTGqWgqDVD/Q8FiY9usGK3MqflBJxP
+1dYX7ZKgxWzeKPI7OqpjkYa/Z1NiFixxmz88g/LEmj67fP2ilvnsCK9k6aN
UlVgbzy+fkn/HGZi98pkb1sXLE3/ZtinOIftZYdVz3iaAnfXc+rlgyzYQCYp
q8SAJVj/qhJkdI8Fc5p1aKqItQW+4Y5Ff0xYMK2v1d2sDvZg+yS+/xEdC1YX
kvJW09gRhN4q/20wzox9UX4cUIxzAr9pe3h/P2DGPlwVG6QXcQLRhRsmpdbM
mJa6B38oiSM44aO4rn+OGdO7uHL96qfLIOGp+OOfs0xYHZ7I9YY+G0CkZDJd
UsSE/SIlu/l5wgLceh1KpOfIhCXQc/YHCpsASoMHMnucTNjMU50EmXEtwOA4
m6pTzohNy11xXeYnQHnrR20/3Bmx22WX/3zeuoDYQzjXCwUYMcdi3jUOJ11U
eoBj0N5gwGoW2lWak0wRb5I7bqeWAXu+vu70z8AKVZ29GVjgx4DJYThNoct2
SCS3tlBTnAFzVL3R1Z3mgJ5yve/b3qbHXgvRKt3ucUIyddu/8hroMevcqn3h
KGfUIkvLqxFKjxXwuS9cjXNGyh2yJt9k6bGvb6aZy787oU5tq9jcX3TY6GP5
l7L9Dgg3ElWHa6XDbCPaZtYL7VC3beHU1yg6jHJOlOcg3grprnQQ5ijTYVrd
XNVT+abovf+SNDyixT7+M4ji5dBFJr/xnTY7aLHgxKDvUFUJjcfxp2bH0WJL
UsvcGS++XLQh0227iKPFHKKTNRUplcF8lu/nDXxarGrMjuDITA84safR3++m
wQroKm94hZiB5cpnUC2FBjMcL3kiUmMNPCVHA9Z1aLBk2XvDhZz2YPPFz4JM
MhqsObYCr+CZE5hPksiIzKHGuGNEh9rZXMBD/tdjytTU2D+qpz1rUy7Atcec
+eQmFTZ9unre/uQC+L0+273Go8LGvozt5ii4gA2SqyVJV89ikXmBz3AvnMDj
GoplnV1KjCSpQSTk1WUQqFfCT+FHic0vZUdSPLQC0ptSPkMrFJiV+36UTKYJ
+Hmnqz7TngLDBC2FzxZpgFZRqx2LCXIstPVmnXYXH4h+vyHLcon8VK/Hh8sc
skgtICZyrocMC71QM3eWWhfhUVG9LAFk2O00XZa4BTPU9bT0xOUFKTbzw1KE
msAWpRjLqvNLk2KpHqkDNEqOSG/nbfJGLQm2ilE2l/K4IMpMm/7HPCTYeK6c
j2acKxqW/koZVEiMEbaW2PryuKGs0VgTGQZijIv/VX47gRuyvEKT/SuVCHvF
ePQ2nMcVsTCUT70gIsI8t8qTMpKd0VyTPNu164RYC7tXG36kPSqx7HMEfwiw
ayLZnEn/WSGX33Zl+MEEGNMl3nqeHWPEl/tt7e0GPlYb2l9yTIlD64rxwrdd
8DFn+MJYm5YI1U3TBRjOnsHis+/EbBuogYCrlQ3U5mew+sR5uTiFS0CKVenn
6AAepqA0aVfgbAX22t8p5mjiYW9wMxPtU/bAr7X9d2P0PxT1qPaPFYcL2Pm7
GHvB/wRBxhd7H0TcQITyqXiHY1Tfkn3lcbQ7OIoRSdU2PkJVwoVPrp24g4QO
Y/pBeIhEvB8/GnjqDkj/hRWYyxygqkHZqIBUN5AOC7hnefcR3YWNiQelLoAh
AdU4M/5F3uM8crz7DqCga1VynfgPOrmeV+wQag24iMhbA/7+QnaETwIvTxmD
Sm3Jiz+//ER6zpFW515eBKK3LN5Gz+0hEz0yIwkzKvS8/6rhmcFdlNTJ66ar
oYEUKR6O3ez8gUIT4xwlic1Qh2G3HVXDDtIu5w352H9ab/axLmGN7ygMRV39
aOSMsh6eH1UQ+IbobNl0Os+5oRIe7yUNsq8oxSD0lYKIB6qtbNw22dpAJEq7
nETenqhJ6PjIYfgz4jCo2Tnu8kTYYx0Kv8ZVxLhNzogpeqL3Elnnoh4so/qh
V5y0Pe5o+vm8YHLUEvpN9Hl3IdoV9flc8udrnUdPPNxlOiYc0VLQyq2LsdPI
r6r3EfKwRn/DoyptNMYRCk4O/zRrhKivnX0TSjaCZNVeDhX9U0BGhFod5x72
Ivf4dn8eVQmwz/Vxq9CqE71306G8mqkPnoW6d5J+rENJxPzpDa5WwCR08Ep+
913whfCxmmirI/j6gP+ViHMToLFVlDX64wp6Ojf4PpW/ASpNIS3DCx4gt7Hz
az3zACCj8FDi+e4F5Mz1bV+9/QAyMwhF7Oh9QP6J60Jg6wQI1zg/fQB9wElt
jAt37QywtD++OJTuDdwss9fGChYApmLgrIznBdzjJ+U0epaAuqTlC8tSd8A8
uRzBjpbB2QAuqZIbLuCd6PcXv1pXwa/QFoO56Mvg2o3Dg6GGz0Dnh+O+02cz
IDlFolZTuwHSF646JZ7XAMtiDHE3yjYBRix0d7LqW2d2Atdru8LT1U754Jhf
UxPpTIsRyGVvgxJcPOPzQXN0nFNUlqK9A7BM42axdXs0+bpMY0/9ByghjS9v
S3NFDVs1q05gF9zPGsH4qD3RbeZnye9V9kAEefu3xElv5KreLHBB6Sfw/C73
M7nPF6kEvOytlPsFvofxEq2O+CGGvNfedNK/AW1Y1I7Eih/aftNLFif+B1y+
7TBhe+iLer8N1n0V/gsKIlnvHZ33QaUs4wY2AvugIvr+HX0bTxStMbvVzXMA
POLM1DqQKzIPXEqT5jwEP6tXhTaW7ZFY/meJErYjMKl4L7OIxxwRdW8Nk7Mc
gwkHkRNGXhz6uL0bHMlwAohrfWpmqnhB67l92lWaf2C77ZeyJ6cB0C2Ls60h
xoPsRfhdO5dtQHMrft3HJDy4vsU9tqLiAngGkw8YCM7AR3TL78m7PED6MqmB
wY0zMBNWr03n+YDDP3cLb/w7A88O/BbE5fkD77PUW62x+LBLV4+QozwQjPNk
qW4f4sPRncYC2/IggFNiTOOLJoCQ5prq2N0g8NQob8HuLwEkDQrn27cJBKxu
bBKZEYRQ+nXXLDWtP7gZVXK99ychbNwMD+Xt9gY/07iHj0OJoLVTb/Oju+7A
ubyCU+4HEWRNa3x0kd4JDL4QDPYNIoZO8Yl4BcPmQHmoDiv9Rgz37jDu8z2/
CKpWxGmn/Ehg7Zlz6SrNsoh+v8Hl7CYJ5PtP+85cmimKp5Jr1PAmhU+nZ5lX
uhzQFm8rfvRnUvib55f59D13ZHtB2bzBnQzeHmAdLy30QT2XOso/L5NBSkYu
b7KJACTjDn+yu5BDOfq+dJHbwejh1S5N80VyGMjZl/Q9LwRR3tN+cNuBAm7g
w6SWs6EoqqJ/Dc1RQGxUJrZgKQSttRkq/LalhOBk9ViTJgSZDQ+niE1TwqEp
8u/C6kGoc9VsytXqLMy+lj4soOyHRA8mBPPHz0Jr0qEKX0FPlEdtGzVsRgX/
ZZW5Tss4I0L++T6iD1SQwWX3Bwe7OfpovOwTOkgN+VhIJvPSNUBVo4zDOD8N
PJbXEhdxtQH2amHJ391p4M+3+IXkcm6Arq/5CXkFDSwXs0vweuwD+sz+TPCv
0MACywShCtsgUMqUdfu2IC0svWHyl0wyFFydFVP75kcLD470sctHV4BZSe+O
SQMtZBX6nXvlOAyIuLpWNP2khRPnR+/v8IQDfIFja5YLdNAsxF9DyTMMzH3J
pbgWSwddHVNF9/pDQdMTGbT4mg76SnGsidgFg9SQwVANYno4j5HGU9r4And5
b4FqfXrI5CdrotPuCtT28WfJ79FDScFoAht9C7Adr4QbZWaALU9uTmrTmqJe
zbGf8vYMMMqV+vy1BRdUShpYk1/KAHe0k1+/qPVFUe9J7Y9XGWD8Ks2hmVYI
Ms0op3YRZoRhkoz33LPCkIjFxa7uAEaYvKCytUsfifBZZiKEGhnhwmrWBcva
KDQ3d0Uk9Tcj9Ix9xPBN+Spqekj18bsyE7TjmTryehmFUt1qM83jmKBZUaZ6
sVAk8hDU1GrtYoJfBVYVj+6GoYtfP/5lJWWGVuoOCQkHwYjp2dX664bM8NfI
C+JAIR+0HcrgvJzBDNmjolrrKB1Rr8Izeu0JZtjW1fbFthSc+lu93tpzLHA0
kd+6LPASiOpcjT7ryAL7odPitpgbMEmIkwgpY4GSru5nRkEgENZmXR7/zAK/
6v663i0SBvDJmx8oiZ6DRwYXx/aio8DsoLFeUdA5+Ldoa9RhNgY0Zm4e/fvv
HAx+YQQC2a6Du5bJDW5/z8EIq+0iO7Y44H6Oy71XlRWyxNxpIO2+DlQX2plF
b7BCs7iow9izsYDhkeVA+ltWOJRuLdp1chV8c9+5vkvGBq9rXP0n8jQc9Ajd
lbG6xAZTPrPf/AGDQckW/+e2LDbYg41qOoyf+o0GLP/8FBssEfh56YuuDjAO
u2x0g40dGmCvnhOumSIhpd94a07ssPu5R7fQrBfCO8po0q1gh9g6pODgvIJm
kKh3/QY7HIi8qJ/26ipqTOxhoxE/D0Xrl4uYIuPQHR2X4Ssh5yGfS0LYA8IE
5EZxlDDVfB4+gMe09MWJSHU4R0Hl4DzcPDNNIxCShBjuS2+WXOSAycO5s3KR
Seib1fti/EQO+BD71xD1PBH1sHqZevZywO39Gy8UJBNQycczRO8oOGHm77ZH
WWfjUWRZ0QtxE05Y9e8B38z3aGTiqeifmc0JiQa1r103DkdCIqOcv6Y5Yfon
2ZW5e0EIL7LFp56KC5awbrMcnnigrelEjY9SXPBp6vyIYI8jmlY2PU9jzgV9
6Dv3t6rt0Nsijj+4cC540hHF3hLnghpPvo5cyeWCVcGHofIlAajEua2uso0L
EumaRjY8v4ruvElJmprjglYhqwfs7Mkogs/CkeyEC+pdrZPP0c1ABQRNWYWc
3LC7siHlTkkuQsv0veI4btjDf5vdz60Urb6+cohcuWHkJxlZ8a1KRPpoTNIs
iRvad1mkNAXVI/F4WffVSm6oxde8yPnnOTJzup8X0csNGT4P9g5LtaCIi3vv
Sb9ww9qxT61+H9tR4XnzM4XkPBDfe+v+3i+EsKNGeXExHqiCXeLaaXqDVufo
fJERD9TCrGYKst8iiYLR0ZUMHth98EHkoGAAmV2VIYlo5IEZ+p2HhLVDKNIm
S4V0nAcelce/+jIxgjAmswoxZl7ouvfe+GbtGFr99Xy6U4kXPvURPTj4Oo7I
JmjPmtrxwmlPHFkx2SSSaArBrcTwQv2HLbiGg0lkdv9DeHgxLxytbUscb51C
EaHSdSSIF74IPhaVUZ5GhaaZH/OXeKFOp0Fjecw0wqR+0Inh80HvP7QR8xHT
aJXaVKeTlw/WGqPWu4LTiPR7Q4yJFh/8GhsxFn1nCokP0TQse/JBK/zNb5XF
p3xPglfDbvFBhslIz0vOEygidYSFpI4PCr0cuUU8NoYK/aSM8gf4oFtKFm/L
nw8I08+4IfqNDw4zUD+VLB9Gq8I7zR1U/LD/7IKq47t3iIzMZNNYih8+fLBy
JzD4NH8bzziWTfnh76ORSglthMx6qc3DrvDDk9uSOoKrjagoefhlXgs/xBf2
8tcpLgGYu+SOyDQ/NDqbzHGS0AzWNO7xdezzw1cuOkI7b18DCXzjtE+qArB6
Pxz4dg4Ds09PX19xFIAUJj3hbppjIBKj+k0ULwBpcTH+GXcnQdHDQJG8RwLQ
TClIwvrxDMCuDzmKdAnAIQUTeuLCebDqIHH/1aoA9PlcZ/HabBGQqaX3XiIW
hDxGoWoja0tAgn37cElQEMY8Kj1Y/vcJmB0aSV3RE4SPuINUlX4tg4jZJ+5E
foKwqAr7jd+9AgrbzubnpgrCFCe7bxR+qwDLCxgUfioIW+gt2hq+rILVyMEz
r4YFoRtjO7YI1gCZtbjCpR+CcNWyz4o2cA1IKKT5LtEJQadzaoYXw9eAGeO3
klA5IVh4e01r3GoNRP40HCO0EoIBwrYqNQxroGisniQ3Ugg2zmTfWm845Wuk
VBXOF4JxbcX4pBKrYC3TP/hluxB8tBd2ozV9BZCHvK8wmheCF3ciTAYmloGE
idjM4rEQrHdd+SFJvAzMJVPPhnIKQ0+l/YIZnk+g6JtBRI6rMHxGrqikavsR
GCo/p16/IQyZwiZferrNg+MUplrFR8LwjvBnPiXHWeDI9WluelEYWh6NxDPK
TwIu8wgcm4MIfGQ55MwaPwBGHs7N+l0TgWUSGTHL5r3gxhYMe1UoAtmECJ1K
5brAcjJFtcOsCPS6rfRl2qgFVLwopSy1FoV06hHN7uSlyIKIuGonQhQK67qd
1Td5iojM/AAuRxQ+SI6fBqwtyPOrfOjyuCgsbvym0d/4GjEpFVLI/hSF6kPD
F8oWulFvEl5lIr0YLCldvHt1qxcJcQxM8ZmJQVgWRGn6fBBN+0qFhIeIwaUc
qUJ9mRF0u/UBeU+GGAyb1eKUjfmAlAkPy5kaxGCZYRTR/cZRtGnirOY1LAav
kETIPZgaQwXFbydbt8Xg+6JzqW5fxpHBpkgwKZU4vAsU/MXWJ9CRQgaZrbg4
tIP0CUIjk6g+8VdZraE4TB4tflRaPoXsR+xUD/xOccWt4D3naXT2PDahf1cc
7mzRNxSQzKBOH/6gwjpxGFPjuiWZO4MCW+6QbvWLQ3bq22HB1LOIg2DnkeoX
cViN/fKFwbNo2NhSJY1UAm4wKM7Xt82i+KL28QVBCRjt7t+39XUWSX3hDJTQ
kYD4lYYsLiRzaEk+mSTOUwKqiaC4+5RzKDNhs3Q4WQIS3ROwlTuaRerDxspc
lRLweJ0gjXlqFu2yNY8Fd0vAImnwSKpkFpV5swa8XpGABkffadPNZpF5cxwx
HYEknG7pZbX4NYMI8dceuvJIQl17VvbWmzOo6ZL+hf9wkpBifa7vF/kMci98
NkrgIgn3d1sMzOOnEeMGg79FvCRcSajKoP1yOg9vLJb86pSElgk5nzPzJ5HA
kKaS9kdJmMbyPqR8ZQJNsdZ9yDmWhJcFnmL1/BOI3U4Zn51DCvobdRN4PhhD
YXjfLnWLS8FZi7251u5R9L7qYaG/mhT0vqVPovn9A4rdI5TvsJeCKXL4YypK
I+hj6rCXY6EUnLBWF1rW7UdxN2ymbOqloInR9GKUfi/iivikbd4hBYusU78x
6bxFLk57/LqLUvCCui+Jm+xrtCrNvCrNKw3/S3J21Zx8jpIFSs3F5KShwX7D
Ns7pMRJgE+4S0JKGHPPZueas5cibUKWMzUsa9lcKXedij0BfJx2diR5LQ55N
gfVBo3qQOrA+/O+lNMRZPVWS7n0OxLBgcPBeGtbufS8M1GoGgbUJHN+3peEr
kdEu8qGXgLqEIv3LP2m4bhzyOWC0EzRkZR+v0MjAgb8FCRHjGNiNqZqflpGB
knereOtdu8D9YEnDMQ0ZuH7mAk9GUjeQ83jxctBCBsal239wTHsLxm1xon0e
MnCo+RyLfGwPCL/0ruBNhAz80Xl/08+iFzBpmJN33JSBPvMLB5n0faBFcf5q
a54M5P0v6bfbyz5gLebx5XmtDLSPGXvUZdgP/nJt29S3y0CD0krRp339IJ8x
sq9qQAY+/veEVUbqHVAmx1N6NC8DyXBWih5J78Dsya3qwm8yUJriyZhdzzsQ
s0fLnHMiA4VrfQZZ/7wD7BsFKRnUsvDbHfbifOYB8Gqe9/cdLlnYwFPc9lxo
ADh8qPdIlpaF57VEb3GIDoCTt/ITceqyMNJJ6MxVzgHwsL1TM9pcFj4sDOZU
IB4A8JlOU5i7LIxAW+erF9+BT+UjvEHhspA08UnY4eN3ICHP9r5PiixckIgI
1/R7B3jTlvHdc2VhvFqbdfT5d6D7hl+oY40svGenE5Hwph+4R/z8ZNMmC5Nm
R8IV7PoBkV+sqfk7WUhAiCPwX+0DVU7Er43mZOHWtMT4kXMf0La4J6W7JQsx
Dc2soeFesK7LUqp+LAtNU+7bz0r1gltqj6jVqOTgQzrle7JJPUBYRiROkVMO
6ibz3zn77i14J/DftrTUKV67p4zhvwWUNG8HBczk4OijJrepS13gCeElNW43
OQjfqHa3uL0Bl/Yn69nC5GChsSK+W+BrcG954y5Njhw8y8RtHzbWCeiaKfUP
ZuQgcdC2ma5qC7jqzLI19kUOtrr5RxNIN4ElCr70J/tyUOLpX5IlgUbwxFVl
1PmcPNytCJaTUKsHujS+dr028vCA6b5KJ8oHz16GH5V6y8Nif+YrAzeyAJPX
jZLoKHmYGC37xuR7CljpyFsWz5OHIvZmLGatTui6X69v9pQ8pOUe5ZBzKUBr
TGOUgevyUKd9ZBAdPUSGbz4+1fkjD1+xNRyuNpWhc+d+7x4wKcCEFxf1mZaq
UXz3mQfjAgqwrlo9xdeqDn0OOqv4VEEBHnwzvfzsRT1q6uGLcbFSgIwmuVnf
ShsQW6jUeRVPBThS4mEj3/QcJZxXRQwRCpBK7Ekza0cjMg4zJ+h7oADZ8aSU
nz9pQi2cTpWPKhUgqxZnM0F2M2If8NWJaVaAL2v2rGBAC0qMiPhi8VYBSlIf
CUUptaJN7oS7EhMK8Lfrwsizn63IdDBNnHRNAZKa3CPfKH2BXkTlD3/6qQA3
MsuvC6i2IQ6+ypCXhIrQ6at7xfW3bSh5uIH+AYMi1Hpf7MSq2o62ol81B/Ip
wkSHWUr1h+3ITKDPWldOEfLMFDW5bbejtg9j+9yailC3i0jgnPBLxBW7WHho
rgjd3XK7xIxfoptCX9Um3BRh1oOS6SLnl2h77Pfi0yuKME37xK7Y4SWyiMNP
uJWoCPleCFLkab9EL0Wo+FzvK8KjD6G7IuwvEc/kuR6VckVoQm5yiX+xHd26
we/N+J8iXCELI0zMaEffxaTJv79RhJfWn/R5Srcjq2nV+r5RRcjPLiRE39WG
OhJ1L5UtK0KHNsLWZe02xCdpsROzqwgvvtWvAJ0v0I9kPzlJOiX45Fhv3S2t
FdlIR06S8ihB8UQ7/n/rLahzPiFqWVoJLmYJcSCVFpQqW/DqgakSVH+ZIRMy
1oT2PlY6BrkoQYnn+Loh55qQ3Z3neHohSpDGxiS31v4/JPSpT/MoQwmWvyrZ
4154jrrS/7x3HVGCVY/rRwoKn6CeKMOirUUlWMzHnb7LUI/6XB/5RXxXgnlV
TK/G79ShIQUD8jtUF2Dwd87jfp9qNPuxROe54QV4sp7/YmW1FC307TGp2F+A
YtW5udVeJWipUfdzt98F+Cpkg5NyvwB9TtlNmr5zARr/IKKtPbiPdiW03/zr
uwCRCzXz6w8R6BdLYebt6Qun+19M2GdRF/QXf8eZfuMC1C4lCtCitAInk/n/
BEiUoYjntD1MigdnXm8PNTApw/hCShUJ4ZuA8LFGibKAMuSqcF/JKkgDZHHf
VC9pKcN+Gka3qU/ZgNJHnXLaQhkGrcFLH1pyAZV57pyLuzIkkx1z8XcvALRq
W3VfryjDquU74iEbRYBBEBcdnqgM8wDhdzXcQ8BMm6P3L0sZ2ptEP/3cUgpY
DzdZbpcpQ/EX5u7zLY/A+TWwQdeoDGs8pXsKSssA13B2a9FrZRhjHrybElYO
eNu+pAh8UIYNz3g79GUrgED5RauGJWWoy+eCN7hQAYTT7vMr7yhDHvIgVaHw
SiAWufGz658ytBNMnXl4UAkkXdS6jahV4M2RZa/soCogY5B1f4pDBT7m2sVF
TlQBefl1VxcJFVj/mf6gQ7waKHGqynxVU4EyUVVHE1ergQpZ5plwIxV4d+zt
IMvLanBxb23kxF4FXlpL1Hi9Ww1wC8qlt/xVYBB7AMMydw3Q7L0XRHdNBfK/
lCR21KsBOs9XLxbdVYGLz+b2P/nUAP3CC1QChSowjWcV/1NiDTBMTl94VqcC
j32cK7Jya4Bx0Er9hXYVyJ2eq7ZXUQPMbJWudfWrQC56raKexzXAQiPNwGhG
BTZRL+QVncbW4susUxun/Ez796bKa4Ads+Km818VOLf/4FrT/RrgcCa1bZNE
FZZQuPtYRNcA569Lt8KYVWFtRdpqj1UNcJuQtzkRUIXuC7bnGIVqgCe6I3hL
QRVem5SWMPpWDXxqF3/TaqvC7Rs/EtMqq4H/fbmeQktVGO93LpzapBoExd5+
wO+hCgeQrZL0VhUI9fro/ixMFYK305nXr1aBcFNZuQtJqnBLEJK9+FMJolRu
EXTdV4XZa5Ve056VIIZ/YdSwXBXSCzsYs/RWgOvUMmWTjarwkI1z5DtLBXin
45Dd2KUKbWnUXiYalgPG+Fsp6eOq8LH1zpFsSBmo3/noq/1bFToyfa3RyS4F
sx/uyrZcUINZPgbTwnt5QIC8lT9LXw22XN0v95vKASHqy8yBl9XgjuP1Cqwz
G5D+p3TEH6sG62XcxYSqMoBC9lr3A0wN3hiZ/UtikgAS3tO0hnxQg9/mzoXx
LMSCQULVWqNlNahFklT53CsSuIdnpRERXoSPpsYeOT71BFlWwCpc5yLcjaZs
1tJ0R9ss+esWQxfhl5g58YTOW0jZtHtGavEidBcorP4qfRcl3/4+QLlzEYrE
XunvKk1D7AdaDd20AA63nxSsS2Yib5mQslIeAK0E+nJnzLLQf75F2ddkAXzH
lZrh5nMfnZT1pthoAigdbCsYGZyN9Od2o+QsAeThz3Uh9XiAcug5/Gg8ASTi
KZMU1cxBnwz0HLYiABz/1v9NkiIXiSWFGffdBNBFV/5NR2suinr1EFeRB+Bd
PPrRLzp5qPvnO9n4WgCvnrj46LfnIWrx3/z27QBqqcrbEVHlIzsPbhalU1s0
3LhPOqOej6qKDckZ5gG8jDsZ4bTNR7sTkUfft07jUunKQdN8pEZVvj1wDCB5
dRy5t0Q+0uT12jEngZC/Vur135085IuufXlNDeHFDrzqw8I8lHE5a1mSBcIi
20t3dGXyUMuf6rliLggPNP8O7rfkovn7HeMUwhD2JwzPmYjnojNSY4NXpSG8
8/1NZH5eDhJ4v9GzfgHCmUse1GePHiBD7xNkqQ6h2q8Jzla7ByivVLhR2vwU
p4hUd2HIRpK08TlfwiDkeLvxevNxJnpBOiXUew2ezqO2WGfBTATxJF5WJEF4
A2vvbqvKQGbf5xadsiF0HKhYmLK7h2Y/y4SqFUGofZlsKsY9Hbl9vE3IVgGh
n1j3G1L/NBQ2qCg8+d+pPtIQbQ+vu+i4O/3lfy8hvJ+V/yHI4g5KebVmlNkF
oel/dGf5ZG4jqibVpcABCKmpuaheHd9EuY/vhxqOQVhfctdiqykFcZVvEorM
QZgntfLxxDIZ1RTgcklWIJRZFdzeWExE7be/v3yzC6EB7YvWvifxSOOG9qXS
g1N790Q1cO5zLHofVbwUi4+Dc3LWlGn60WjBy4DoAh0OCktZmFI2hiJPp7Jc
JlYcpLx4Y+PJrQC0bbUv/JMbB/3pzVyUcj0Qnnb1pWfSODhe9LJs7pc2uq12
spR6AQcFPgZN3eGUAnTylld8cTg4aDw1mnzeHBSI1RPp6uFg7zNzxqURZ8DL
R5DHb4qDo8AXPGvzAvVsdiIEtjjIpnN17YFyIJCjf/5qyRkH39jzOD3nDQUd
5KTGnd44OKNa9dz0axjQxnf6VBh8qu+viNOP4EgwvN985WoUDhr51nOsN14F
Nj8oia3jcTBMXtCK63kMWNpwy5O7hYMeSgeq5wJigc9Suwhdxim/dCJZ35fr
YHeKtuN7Lg7+yH75p4MxHkQPexsPPsRBHZFr6dOF8YCgF32qq8ZB2l2mRwHk
N0BqJ1PYrWen+ctIAAweNwBjSwCxZysOxkrQ+Tx8dgOUPOnO00A4mD8SKnT4
7QYQqGQT5e7FwatnrmuS8SWAZ0WhHSdDOFjHofziumUCUMruN56fxMHVPAL2
ruQEgN3lWm77eJrf4UDmsdYEoJcYGZb7GQe5LCqmBLYTwGj0EHH4Ng4OsfS4
FIskgsuh/Plmv3FQ5mtuQEBgIlj1uSYqdXJaL/bnGuzticDfZazjLLE6jDLM
W4s+mwR+2YiYfD2rDpei+O7VeiWB6yY3lvsY1aHJhqIPd28SINadDqs6rw5x
JOo03cLJgEUxJd9FXB3KbXV0Fn5LBo8kFkSBvDp0tgKcQbopQERArpNdTR1m
uHDd/ZyfAhrP3zU50FSHgALqh35MASqMy8tThuqQoXDTO4/uJuimvBDebKEO
E541xzHK3gSGhBkk9+3V4XxEW/Gh6k0wcfg5P9hdHRaV5egOid8EjntqYpf8
1eHf37C0gOAmoKDDGxkPO9XfSk8z2JwCXki9uXI5Vh1SUtHYL2mlAA/jJObl
ZHXoXfNa4fi/ZEAXqP3SO10dli9JbmmfSQYoldTpe446jH+H92FMMgn4P36H
H/FQHQ73swgUqSeCc+9Sq46qT9+/CQSd1RJAz8Yl/cQGdXgzK9kihe8GuEJC
u03Wpg5/GjLVfN6PA1wCY5kZr9Uh5wwhfXtuLIh2s54pHlWHbaZsrevdUUAw
4Vws35w6jHDgb1/yjgDjpXNcj1fUoXDxrU5LnjAg8dHJ+8VPdTi2W/ZveCMI
zB1xU4Jjddhx78Exq7Q/uMW2+uwtkQa8/aFDuveDN5BXrjI3pNKAa+JflmwH
PcCyjfefUSYNmKBJ/jiXxw3cixQptOXUgO34z7zr3jsD1Zyti0uCGjDCkcJ2
MsUBfGl6uuwppQGPnwjGF/yxBTljwSnflDQgZvjEaGDECmjsyoiE4TTgnz1Z
Mfqf5mCH5tfggZ4G/MbHMHsATUGxZGvIDTMNKDTg5dokZgT0L11lJL2sAZsY
wxbzq3XAH3+VtnQ3Dfgym1zkQgsOVNw9tmf014ASg/fLNLQVgGkdwisKO9WT
8tC+mJYDnPTdqOCJ1YDrncN/+uR50ON1Dd3aZA2YKgq6fiEVZENMvCWZrgHt
Si7/2lTRRUT8ffdacjSgZSvGsfTeFDVq3JFVe6gBaa5xjNHuWiMnV8OprmoN
uHRV8Y3lNUdEeYMqRr9BAwqGhnjp1bkiz86sN9avNSDfYgO/cYcPol+w8PzY
rwE1u7tsp9QDEHbIRO4xqgE/PKcl/mUVjAJYZ558ndWAJ+5TFVq/QxDrhULT
0BUN6PKiarsj4grqtXb49ferBrw8fTM9dCQMhUVw5sf91ICdq0aSMUfhiPvB
J1XiYw2Yd8zwTeFXBBr6r3wplUgTMo2vDCa2RKKYUY8keipNOP4jnGVdLQoJ
/RAUKmDShGyUA0cVd6LQBPXmABenJnxY0/ekpzgKJUjUB1ULasLDdA5EFR2F
JI0C6SWkNGG84g3jed4oNO8n1dqkpAmlNw/kT0oj0e07u3YqOE0Yk1ZCHvU3
AinUNp281tOE23jfg1VkItBKb0SZrpkmFCTBxU1bhaOMz0raw3aakMKxIVwo
KAypER1+sXTThFPT+eK/E6+gTd6OtHk/TZhW/bmjujgU5arHSbuFacI30TLY
VlcI0nTBTXy5dorTdgeFHQej3TiCq8HJmrCYtPjmU+Ng9LDkLfufNE2oYctS
IxMbhArsxaYsczShCudTi8miQJTDej+zqUQTprRw0m/uB6DM6X0D+mpNSPNK
nXksKwCl5jgThz7ThHSxB1dOXAPQTYtebKRVE9L/+0+d1S0AJdBJxEhimnD2
yW3M53YAih3Jlk/v04QcBUH40u8CUFT64fetEU34LDLhWJYlEF0xdK0zmNGE
j/7yr2t4BKJA8n73uk+ap///0HuiLBD59Elykm1qQsX+lbH8N4HIPSVnxmtX
E7ZFE3gytgYiJ83j+z0Hmqf/+XBWLCwQ2eG7X+In0IKqf7VmKr4HIEvsHWkS
hRZs27rnnM4dgEyuS3ct02tBC9w6exGhPzJQzYvFsWvBJXlZX4ccX6R9cKJY
yqcFlfDqZuynvBHuhcfuiZgWpPK9zc894IlUI97XO8hrQeE813KaKHekKCfr
9UpNC172TPJSWndBMrv53GzaWrCBuuXNro4jEg70ypm20oLFdjcO31w1Q3xi
QyaKTlqw/IxZX/SCLuLalKPI8dKCN+pSbvFPX0BsNYVvfwZpQV2yjA8xi0SI
yRM/3jxKCzqtDPJQ8MoCWj4f5cZ4LViVJT6cXa8BKJeHf9Lc1oKjJrlSk92G
gKRU4VlQphac46y2irczA/iOxT5D+VqwW6BIivm5JThmI+QTL9OCpZyLdi6O
NuDvjO/Hu3VaEEcs/CvY2Q7s5X7I22zUgu81ZL4pv7wMti2VzPVeakH8ID1+
5yh78IX+4dmaLi042fCgGVXZg9UPRH3E77VghRvFi0lbe7B0zz/BY1wL8grb
HuzVXAZzRmOq3fNaMHJ0q1DnqR2YpFD+w7OmBX0n4v5OJduC0f7S5ze+acG4
fA9VT0MbMHiTxH/plxZkE+15YMRhDfq0AgXAiRYsE67i9GayAl0EE0vFxNrw
1so3J0IjS9D5WqXwiEob/teYmfhr0gK0xZVZXmbWhr3vy0N7uy1AkxoZTTun
NvSntPLn4LEEzw6D3rEIacMjBQJB3V+WoK5tMilSShvyTF1MxAfWoDJSDUwq
acObJqe+9sAGlMpX7MvhtCGXMJH39fOXQeEeedN9PW2Ir5Ga+j3PAeQ8Dwnc
NdWGCTQNQY/FnEGqOFh55qoN8apLtPn53cDNr5XFVH7akGqS3OdbmTtIqKW0
CbiiDevSe5gBtSeI9bpC9z5GG87hE7z2t/cCUfyz70WStGFz0nJTdqw3uLIC
b95O1YZDV+A8t5cPCHxUjdvI1oZhzDyugNoX+DpRHWkXa8N3+FXryoG+wON8
eEtlpTYEe2x3Plz3Bd0K58nDnmhD6+hnMgZavoDH5K2DerM2TA63uGT81gfE
+wQ8p+nQhn0P/cwP8HzAxwRGosVubchATdHsf+QFVIs6bJ6814bPRy3Lajo8
QUGzR33MuDY8JMRmnQw9wN+hs3j689pwO7HW5L/nbsBqo9mcZVUbSrxoGPj8
xwU0nXGs/vxVGzqzbXFRiDgDOjbiw6Y9bSgUwTKgUW0PguWeXko81IbSjiF+
MXi2YMjIqsyUQAf29Ajf0oywBGJeJ784KXTgFbLVd0PnzcCd+Cq9bTodOLZR
hm4xXAIb+ZeKX7HqQOWvA4r2ebpA+7/fO3d4dCDdGzH7hU8aoOJ9iaatiA7U
prno20gIAf5n7TxBGR34nGIpu+CcMnD+t/311wUd+JNCPVr6SB50suSCbpwO
/KL5eGG8Rhawy4D7WXo60KwvwjyMRBZEG6x/djbVga98yZmUfsiCafd7ypK2
OpBKRW9oV1oBKFxXTD921oElPHWfCe5cANm5i58GvHVg3RDBx/wGNbDbcFO+
IFgHShfjh3GJ4oDJO8nb3lE68Fpe8+TYfQ3wdGVqXiFeBzp+w+fGbWgByuM4
KaJbOvBMj6PqhX86wJdJKGnsng40YX9ktv1cD/RJjkw9ytWBKu5EhroL+kBQ
L0o0+KEOpFZyYmJxMwAprlxxF6tP9fTfv8kpagBWY/pGKZ/pQOeiLOE1Xn2g
/iBYYK5FB3pR2hEYaeiC0qcs0bWdOlAjoT7kR4oWOOnFBiN7dGBgT6PehZ84
YP/Jm1t7SAfKUTyMtpRSAe0HNOEMkzrQbxiE7p+VBiwMbX3LCzpwHFlxWM4x
gQhxF/bnazoQb6nU95opKxrXJguO+6YD86LK4OhtWZRx1ZaZ/VgHBk2uaH5g
0kHbWWf8Ngl1oTN3y85BnhEyrK/tfEGpCy/Hr3Ukr5qiuremdDcZdKFCzaLM
I2SBSBf3PSzZdaHUsoXofwbWyPPvozZePl148lKz+yDKFnXT6p/dFdWFn8jG
HuUoX0Y8orvOmKwu5F0wWPyeYo/iNQua0lV04ZwO3XNSGwf00UGd1EFDF6bw
ZIrXP3ZAqpGbl0UNdGGMgMar2EQHVJCR9WzfTBdyK2+h9VV79LdWmaDPThcC
gWnhzenLyKpr2SrHVRfSm+w3v/OzQ03zd+rcfXWh5Zs/mbX1Nojut8yJTKgu
vIajYDupt0LB1HOmZ6J1YQQxtxBevAUaEkqsHL6hC8ND6v7iK5shMXXR/eLb
ujDntfvT9EVjdOfymKF/pi4c1Lh094GfAfoSFlOqnK8L/dPnVGSBDvJvTidq
fHQaZ6ba48tqoO1fj3yF63ShZ1sGh1cBQMEKzcOljbqwpTLMOcBeGe1G9Mmx
vNSFh0VeP3zmFFBY61z+vS5duCb2m9FFVh79+bN9QvxeF2YMX06l9JdH0Ur4
7tfHdaHmzb3D+ihFdBTF2P9rXhe6fmfWqlNSQdfbhCQC1nQhOWHTWKwqRHgH
KvdXv+nCkbK6IL4YDZSgbPz38m9dOH50j3ZKUgcRxbg6jJ3ownef7uoRiBug
Wy/D3+iT6EEadTxsEGeMyI9uCb6h1oOOv0m7CUtMUapqUeoFFj3Y7eFSeD7c
HFHFPvvRwKUHPw2ca+2nskQZHW+shIT1IMOfpaufLa0Q/cnEy4fSenDf0Xcg
QMka5Vz8wsWsrAdD3jmnitdYI5a4o+R0dT04lCayZV1ojQoQ9VciAz0oEuNH
u05pjdjxeE1izfUg5Z0ow5EjS1QCFZp/XtaDO+8mfxEGWyDuG3qs/u56MKPv
NxMu2AxVvLaPW/HXg1QUZT9rKUyQAH7wql24HoQKppvxNfpIJDHnqV6KHrSP
LYlspFZD9V219K/T9eCZlqz93AApJEnYEaWUqwc3qK+kmX2kRo2aIwvPHupB
0j+CryducwK55BV1wRo9KBb213NpWAa0vP1dXdKgB6+Rnu3ColTBBWLys0xt
erAIb/uQzkAdvNI+H5r2+hT3M+AyiNICF29KTRG+04NtL5h8aJ/rAKxXQ/Xa
qB4MsxcUXvuqC9RJrR/tzerBiAfW7FTCeqBb15fYb0UPRv9Nrbobqgt0bsf6
LX/VgylJKoVlc9rgXX/GiO1PPejhb32ZKl4TGJJXyH840oOaF9leLCTgwJB+
a4EukT60PQgpp2JVBSZ33/1DZ/Xhl+bg3Zu5cmB0YMFdkUkf/rX55/KvXRhY
Uv7of8qhD4uC7asqpRnBtCGhpICgPgz+G0/3Y/Gw0y6NObtYUh9GqbWTV9Vy
ovn/MVzd8VR3YVxCUgkh2dl7j2uexwiZd7m4rhGSpLIVDaGFhBAqSoWkiMgo
J5TRkCQriZeEkCQk9N4/z+f8zjnf9Tvned4q/eEn2EKSTN+bxh5F7Mlt6pkM
tpDxcVskNVYDDzuSmjfutWXWJxv7RY5pYd/LfgoxJFsgJ0Re+VyhhcffRV2a
d7MFB4trfHukNXEAT9L8QR9b2GLwz+/PDWU8RcxzGQm0Bc+4Gu5313fjoLRH
T13DbKHmN0VvnsGKZ9+/2N0ZYwupPLk3d64JoBC+vnPWCbbAxnJgZkOmCoq8
sk7Uy7SFaVWFB7vaAC1/4K1+cMMWpOy4T1nf24Oi+WVFZAttgfOgu68SzRat
Ugmx1x/aQkTGXNm+W47odKbd1x1PmHpEPspN1CAhP82boysNtsDL4hxofouM
bN8ujIy02EJx1G6B4RoKUj+4d7itwxait0uwrR+mIn72vKGyHltQF3j0JaKO
ilZuzg9mDdnCPWNx1cxrVPTF2PrTyXFb+K1+NlGbj4pe9F3r95u1hd4nrJ/u
SVFQSfhcr92iLXg1tr0s6Sahyzx7erTWbaFPp25pTYuIwktzundx2EF/j76q
WZY9otvMdrFw20FAwOMT191sEBozf/9NwA7K/+W7znRZIJnYq+86xOwgrksl
+YqjKeISnX5bJWsHsdEHdcL/6KAfT+DNdVU7sCEIXa0alUfdlMxX8bp2QNhf
dlz83xZU92OyLdDEDt6EX1YUDuDB+UmmraQ9dnC2z9qjy1wWJ8hfeUlwsIPb
Qb7p7q/VcWDzt2YJZzvIyHmy+3mjNnbyMm7i8LCDI7Z7KHvE9LDO39TnM352
YOT18qTPjB4Wvvq1oTvIDjKHXMK36urhf1qGz+rD7aDo6MLGITYdPNaRUl9w
wg463Y5mR0Zr4FeBo7UXE+zgg7efcccpeVzGQagJTraDtrIz8Z/EhXBGQXK1
S4YdsNAPdFxZ/WQabTry2PS6HbDtfEt6lCaGvAZ0K2Xv2MGseP3CG1FVZBmZ
+GhrqR0cTDm2MHJHFynxfSn7VWkHk9wydrVexmj7Q+2HA/V2MKRENdluYoYW
9l4obWxm6rG/YOHEgAUa+DpYUvzaDkzXh54mTu9B+Izmvcsf7MB8Gw6MZVij
O2LniiI/2cEpjjozp102KLF24K7HqB0YO97RkROyQUed1e9YfmfyObx7ooNq
jag/4wuUf9mB28XqQ53v9yDDS303+f7agVbU23xatgWSUFTN/8NqD0P+OjZf
ngBie3nmxjCXPZzVT7rilWSIprx7rrXy2YO0eM2URo0WereqlPtQ2B7GDjiN
q/vLoMfZp7MzpezBu+yIjM/8L9PTnQqZvlr2sPfulf6dfRrYL+jkFVtDexB2
OHSq9JABtuXsStM0tweliTNX2u8BVr8jlypkaw8KrxVL+xUsMT/EpPwj2QOk
pGh+32mNVz69Sx53s4e/Gewrz7z34i9RMklv99lDloSCVum8LX6x4/jFxwft
IfLzuwX9ZjtcUvb2/LUQewjltc3x6bDDl+2kzsUdt4fCwUefXwna4fBvkQkH
z9iDQWMaV9rdvZge/zqOeNEe9jWkKbEmWmMkIXlGP80e0nNyfLf1W2KZ+vDT
4jn28L7Gy/lCqRnmcmk/yX6LeZ5k3s50S2PcnRIa/aHcHjp9Fq4XjSviIZJW
om+tPQxbjLTnxfPhb/zzOb8a7aFv5S99ZDcXmut9dC/+lT2kRLSw83TJoJXc
kNodH5j7yW7L6YnTQGyemu23PzHxzeT4+pN1Effun33aY/ZQwf1gs3shAQmN
lU80T9tD7Wjpa1UPQ7S7KHiZ8tse1M6etDzub4iUAjU4x9bsYaqHcftKMwHp
qM7tDOdwAEHjiyUh53WR6VyZPNt2B6Drh+zu/qiBbCqP6mfsdIC1t4zAtGZZ
RI5Ut5aRdIBhJTa/EMZ25G7wg/ZYwQHC6dfsj/JwY2aHH9lt4ADNDhXj7Iva
+Fic2jk/cwfgCW5JfdVhhM/smc1csHUA45i6q35nzXAi58O7CRQH0JH8LsL6
0BJnvD5cxc9wANYq8dB5U2ucl6L68o6fAwT+fJS3JrIXF5NmunUOO4DlQN0V
CQ1bXMH/YOxFhANMhnO1exyxxfW9QQvUUw5Qonc7dm/XXvwiV4Xt6zkHGGtj
VCh62+AOj+kdEZcd4OGNC0qvZaxwn2SpNHu2A0zbcLH/0bHA/40e0s686QDr
6Qf9rdwQni5UtpC95wB7rwezH3PXx78PfidXPXKArdYnBHxiVDHnXGDoxyYH
ILIJNvof5kR8lUpx+187QPH5tGZHCXkkEjmV9vuDAwQfXThnvk8byRiU3Do7
yFyvz3v0AMEQqa0efCTwlan3pn5/i48IEbBi490ZJr+7MYYHWM2Redxkp+6i
A9zbesXOn2SB7PfcG3657gDnOILLct9aIGfOg3POmxxhVy3f3PEIC+T5WoFl
fLsjHDZx6fnrZI4CUia2Rwo5QnL6RrJdEKBQUrEEx25HCMx7FGTVZIRO8Aeo
Zyk6Qov9mlL9VV10rlceyWk5womlH+Hrxqrocu43x2pDR7B5nmkSniqKCiQP
HOmxY44twu228kni0lG5U/5UR+i6nD5bpqyGqwrHLy0yHKHkddHVAk9d3HCw
8Ma5/Y4QnRF+9F2eIW5T8X8geMQRspXu73x13RR3/ZB9VhjpCG3qUR9lswB/
qvj6Ru+0I8S0C1dtEzLDYxF3B1vOOwL/Jf+4nLeAZwn7p2mpjnByn5+iUQjC
y39lVsezHUEce79xbzHCG/DYlqhbjsBR+SbWp0EPc8XdEdlU4giFpDABmyQN
zL/HT/lqhSMMPjqradsjhcU5ZYzk6x1B0qFD/D59pUHh9ajtk2ZHUPtd6L7z
0y5kRPIN7O12BK+JLrf6ID2UXtmaij47wpiQ4jGHsyZoSkDlSdFXR7gxXW9s
OmKGzI+lft4+6wjFPocvTIVZotyBhY3HFh2BQIs53L/PCs0buykNrzsCcTTu
wpVsa7Q3/xnRZpMTnH05t1y2ldmfbZCKKt/uBKIHD940q7NGy77nbggJOYHL
tcrBP3esELFlqjlW0gnkwwTT//VaomIFp6kJBSeI8ZWxP7HfHLEkVfKQNJ3g
ktRG9bbXpshlZqd+rYET+OjNtK7P6KOHTic8dps7QXOdjdmZCA3EUTEcf9HW
CV5d/LzjpctuVB15r9PN3QkkG1hDbO4KY+7+bUuNvk4wpPO+ng0p4/1GoWJK
QU7wPXMypYP53j690WORHu4EAj1jrCc/EjA/i1HgygkneHy0MzezxBgH+eSn
+px1AuGo6awqMYRfvNj45NUlJ7A+Riyq2ApYVD7gs1aWExxmT/n8XxbCYRff
bLyWx8QzdMCMnmeCX33XUNpY5ASnZlp2XrQyxFKOmcRDZU5g6Cc6876S2a+U
/4n88MQJvvY53W0T1MBdfJ43jJ47gZDIpahLVGmsFNHUfLvNCeZ+iTZ9vMCO
z/TKTW157wSdKs5VLlp8qM8giSe83wmyWMk5cEEeaVz/oTc44gQiC7bdxve1
0IV1iofllBPoZh06MLVCQMPeNfGl807AgfcpqYeaIkKzaAn/XycIsIwccggy
Q23pENCwgQg69+K4jFks0EJzaMw8OxFWiodtzccskOTvOylyXEQQbXIVzedm
1tNyvbfo3ET4MhPa+OaEBYpy2VyVwkeEDneF0ixtc1RwwaitSZAIDRfKVcdN
AXXUHv60KMycD41STvMxQitT+bNKEkSYXrS3O2Cli+REuzZ4SRMhiLubH7Wp
ILIDm8AVeSLcVFqXvLQsgk6d0lNoVSaC96HVJbuEsYaSsgCjv+pEWM7hgJ2h
krhnONdRXYfI9NufV/6HGmble7vPl0CEemFKhaKwHlaz+Bd+1ZgI+zxjlvaN
GGF6uOaF10AEP/mWD1p2gM/e9b32z5IIhq1RW89zmOPynsyH2nuJkJc29bud
zwIPbmprPOBAhL2nOMxH/C0wp8FK9zUSEQoXbm/pYrHAOoEqE++ciaBbrbry
7qsZ9r7m+XcjnQhiS2UC7FKAk9+kchM8ieCYMmSlmGqEa9aadgf5EMFKsUX0
6bAuHlP7rXPTnwi0PHd3sWE1zOMtb9MdyOSnntHk808SG6e5uXMeJQKL8RAx
2/N3Q0BT0hHjMCJoeNEjVPl3oiu/np0JjiJCU3uCQPIORRTclbqPEcPEo3QU
FxG1kOMjXzOb00Qgla+Pa3vpI+VUvd068URwLz76JPuiEeI8unmD5HkiiLtk
nh29b4rGHQaHtyQR4Y6TxeUcZ0DNKmXPl1KIwEP6muBQD+jmlribo+lE8DVM
3tUXD+jUFDX2XRYRMpt1DtX5IOTeLu9dn0sE+uCfPRezjBGheAUV5RHBicNo
baaegATPv5W4UsDc72cL75cFbfRr/81/pwqJEJvxPjO3RwV1WoZ9CSwhwlRx
U3lAviR6KG2FaQ+JQPx3w8Iwas00YOT7KbVqIkyggFrpbDls9bzBU7iOCGxf
qAuTCZpYOj/NlKOBCIlcx5eOGOhjllN+4vONROgM9v1vG8EYDzH01z+/JML5
nVtjK5UA1xtxDbW3M/U2bxYcqTbD2cKfn1W9ZeI7951fstIcR/4pu3HrPRH2
8/7y/SJogSl9cScvfWTm2yrJ8PGQOdZ44uxxvJ8IzRnvdCK2mmPuLAWT/Z+J
cEq2YFa+CPD38L+ipBEinB3qfhgfYYLbKB2rxl+JUHdWYf5EGQEXat0aVJhk
6nf5TpWYrDaO5w1/yj9DBNaYsv5rW5Sw6btdJ6YXmPpUdnhy5DWaijycdu9b
JkLp77YQjV/CaDkZG71YJUJbU0L7OTEl1HMoXaSchQQhmL0of1QLVdru/3uN
jQQmUsa6+lwElKpI+HSekwQOXUdlvVyM0RHOLfVhW0nAiFvrYhQhZPftc64X
DwnIobflk34AUmgpj7bjJ4GvkEJHTKQZ4rgbT9cXIsHWpOJLTX5maDSeZigt
SgL5syd1XjPz8dxHUXi7JAlkFdr79NkQyjNb/bMiTYITueYt2ueMUIzku/5x
eRKckbo9bS2mj1z/3artUiYBtV2kfdtPTaQ3FJ7ToE6C5IAVc+SlgHY8sz5e
ok0CUd8cRSENITR3TdgtS58Ezx8GZu4c6WzoiJ4hxBmRgOXe4/IiMWF83+25
0BFEArUXzwz1eRXxBcKVZTcLEmTfWbQ5zKeF/Xf69+2xJkG+0x51xoIetlgk
1GjakcBy6ceN8o1GWPLjlmwxJxLYLI7mT4ua4vXKoajNFBK8tsuvOcnHfO/T
H7n8ppGg/bnkmy1nAdeEJOiP0Enw1Htyg4YP4Cyiy863niSYHuUk7qQx3wd1
paUaHxI4wapB0mtjTORe67njT4LhRCvLu4YGWG3mXXVqIAluhmfFKDTp4C1v
CrJOHCHBeLOzkhWvOp4oiYgMCCXB3LZRL8NIaewqtj5UHEmC5SuLY44inLj1
8jnryWjmfrsFLp4U3Y70WLeXK54mQZZM0WeLAFlUGH5VKDCeBAtH/9BvKGoi
wW8SZ0rOk2DEiVq4eaM+OutWPDmVRIJDj/gLn7Abo4XXGmTlVKZe5Zmb0/8h
5GdaW3cogwSFBfG1iUy/u8vNpEuzSWB69T7vEWlzZCH9Kmn6Ogn8bg4N03TN
UUUmeUHlFglU/Hd4sOWaISnOT4zDd5n4yBQ2HldA6dG+Lx/cIwEbObrb4Y8x
2jDzXXX2AQnKbaqbWPQIKNgrPEutggQBPpLq6le10PD71fUj1SSgT6ZcfV6q
gIiWZw+U1ZFAIcGYcvKtIMLV2zp/NDDXqxq2/hmba1BTzCJoNDP17C+/fqJY
HOddE78V3EqC601zST51ypibu2jzo9ckmGmMoq0FaOOTseqhP98x8bZ3FrcJ
EPD0/JMBzW4SSKSMZvU9NsKM/WAR2kcClCe/ai1lit/0tt2vGCTB2NHv+Yet
EDayJfH/GiZB0npq5ksmnJKn/Se0v5JghfTjCjXLBAur+3wNmyRBYrjutTMf
DfHFW1MOj2dIkCutVnvgpx5e3hFWvfCTydd8UryImc+Ac3/FdRdJsGvqx+34
XgXcuxx/PmKFmff6v4cog0LY6tDWuap15pgd1xO/dJlWf85wXWQlQ4aF1z1f
PxEkSxRr1NtEZt4/NF1ZDyWU0XRXMWoLGQjtFd92bdFGbLpq6U+2k+FCU5Hg
ay0CCiuqXlnaQYb1ZjfathBj9N8u5EsQIsPhOZx/NxchcnLr62OiZOD6LXL/
cSugpnUnnVpJMtSlNbzFYmZIM6Tv+h8ZMghSMg7yvWG+D6Pe7IaKZEjbKNEz
cR8hHtrk4WhVMtCmnO7sTzRGsW0hPXWaZLBprH8RQiGgH4Yrpn91ydB96k9j
j6Y28nwQV2RkSIbb/N1qWpVKqENiC88JUzLwH/iymrxTFJmmXzn21JwMsffc
PjiUfDZ9wCY6smrFXH8dJ1yyFsKiUXf2mtiRYTx51nDytgJOnlSpOOnExH9U
ac9TLi286l4l3EAhw5ckC44JVn18qMMkft2FDG/WzO6NcRrhAWj5bsoggyHn
0sH3CybYttKRetqbDJ/rPTu2lyBcJ9v7FPuRoTd+TkGDWQ8qZnvJshwkQ5CC
48dYY4SzuSYuwWEyvJfveG0laYI5TwYvxoYw9Tl0wUtnwAAf+7Hs2RhBBsXa
AzyXknXxt31nWjdEM88TPeX/y1cD07o3a5ifIkNq7TKnsbIsbrFKz46LI0NA
k7DQQDgv/uZf/zb6HBmICpdV9qb9MeU8P8YalkiGkl3PhfJWxZBi0TbCoRQy
WB76kiJopoRsW/UO+6aTIYG15KOVnRY69M2rwD2LDKt9VT3Z7/VQ8qaLvZRc
MkjdPriemGSIHshXbLXPI4NV4StPkqsJ6rD+ZGZZQIaG5w/SDkog9OMAW5Rx
IdOfUt+po++Z/l5QLdUpYfoTxRl6OwAhzWLaiMpDMhyYnbTgnzRB5LbTgrIV
ZOiylOyL9jZCYRPFdmLVZLhZe6Kj9qs+yuDsihWoY45f5j/nztZGjxX+Vm1r
IMO015GBeSNV9NFG5jt7Exket71Wa7GWQosBDpLrL5n8r1aopXVzIcGLkc6L
7WTo3CwTakZlw/r38hNn3zLX+39k0XooiV3b2/D4ezLonEpviipTxscnfy4M
fSTD8XHpz42ftHDuZhGl3n6mvo4iD77o6eN6RUuvd5/JcPVEvtHjJkM8uPdw
RusIE//lj1zC3iZ47WBWO/5Khlsb8ib0l02xeCJefzLJzFPj8Tzrkwijkgnt
8hkyqKsWftny3RR7v+I9WPyTDGs2Hud+WpngM1OGeTd/kyF+r8XuT/mGuIDL
70P2HzJ8Gr7dnr1NHzcrXeJMWyNDAbVLgrdcC4/ZVptc3ECBGxO5HFYMZcx+
6EvoGXYKcHjISWYESGK5JM7i45spMEH9KpWavRFb39f8HLKNAiyyDhzt/FtQ
wGs6XyAvBR4rf0/01JJCF7/HW/sIUIBBCBm+t6qCSrY8OEHfRYHZSo+2bB9t
9Fq55xFZjAJ+mfsiBK/po2m7f+O2uymQsutv4ByrEdoWpCBqIUuBf3LFt66c
MEFqySSSkSIFnuY9laybN0VOpdHntFUpcF3hwllpN4SC39yuV9akQNjW71Zr
paYobfrNnLQuBVxpN0yXFoxRxdZFWVEDCuybfTux0cwQfVCRcOc3oYBoQ0VV
yz09tGBvk7rVjAIVb31vVDlpIYHDIS/Z9lDArL/q6nfm/aB3KXdl1YYCnLI8
BxY/SKBjb6f9ZogU6Ivjl21e5cI5MwK5X6kUMA196xLSvRvXbUPvPrtS4CHv
/JiKkQr+pBrA1sOgwNfLmX+SXjPvB4c0gw5vCgg0r5YVvdLDYkfqjrT4UeCm
ppdHzpIBNk0Zvd0QQIGc22y0AD1j7PVwa391EHO/HQ47AsJMcGyHLndZMAVC
Kpp6/7ttgm/NeloUhVNgfNorO7zFGDdxXziWf4wCGS8rFHeMGuL/1B49uHqC
Av4JHy41cxHwRqeB/y7HUiD22CHxfzQd/KrBWTo8gQLtFuSIWywaOF3tva/r
BQpsX3v3zZ0gh6W428YkU5l+H03U0B/obpg6aSHLnkEBmfWOenlmS1Ux07B/
8ioF0k8/3PNaVRZFexgWvr3G1KephrBuo47M31aNP8qngDNFVXaLtg7iMtGU
z7pNAa+V6uLNogTUVVp6ILqIAoutTnVJpkYoV1Sh2PM+BQrSHtzeG2uCfJJv
T5iXUSDqXF7n6Q5TpLQqrihfSQHl4rMuSeIIzR/KPbjlCQXm9+Sxmx0xRXWf
BEp+1FFArW+DwmqzMYqzS5v60EABQd0NlX5qhsi2fqtyTRMFurmFu2eb9RCf
8oVD11soIHTsH1moQAsN5G4sjX1FgfsRM2XdfcqogOv0tF8HBcLLNjqkZu1G
gdErKnu7mHpwJZKLqVuQ1lTEYdUepn9FLHd2mrLgFbefD3gHKCD3QFfHPkIM
N7UHzf7+TIHSUyb5oe8VcKLBhNrACAWk06wqJf9pYPI936MNXyngnhXeXPpH
Bwvv+lJWMEkBm9MTn5v0CPi/C/S5czMU2GP5n4jcNUNcsvxR49BPCnguKl0Y
5DPGoQGkEKffFCjaF7arJ80YG/a9eaT9h5kPldo1J35jzGpjM79zjQLPsxU5
fuYZ4ldPmrVWWahgKzjilWdKwOnyKGyYjQonHowpcHHqYvrVusoXnFSQWqO8
/CeoiaU26S0Ub6VC0dd6wQlhRTwV+UjnEg8VEhamAs7uFccV4yoRIfxUcN1J
tXwdz4rNW6QXDUSpwKZ5N8ewUBJx6eXriUtSIZZf03WF+T913RWOYpWhgsrY
iKjwb02UK5D1ZFyeCrqPE1gd13SRz1ne5VfKVCBduyrpTzRASr+TCWXqVHjI
ZU637DJC836cx69oU2GwQFX1zWETVNcdXxulT4W+3tFrVwRMUZzlvz/uRlTY
GQSm5BcmyPZxtCEgKty4OzjCddIY8cksRstYUEHuiW7ErK0hGrgSUs9pTYWJ
V5sof0AfFWyc+TttS4Wvix0Ux+PaKDAswPi9IxUedM/FlCioIa3R0RNVZCb/
5rOeNkdlUFPTwNpJOhWei0WSNwl0NiRq0Ux9PKnAoaG6+/1mQUwueH/KyocK
jOO8fLO7ZLEwnwNW8qdCYRTfA0KgGv7vTNs/7kAqVBHi42Io2rjkpwX8OkyF
s0u9oaSXejh0H47tDaGCqbvN08LDBtjwvWFjfQQVOBFl3ELPCLOaVW+4eZwK
wx333xziMcYMy2+v+k4y+RXPCj79ZoSrrYUyeOOo8Pq1d17LTUPMY7fXw/Yc
Ffbskkn7ZUPAgY7RcvGJVDhy22QTeVkHvyDd/1GfQoUF2wvSBZ0aWNx5sGYh
nQp/1M4KrS3J42Ou2+JUrzL5xAsTXpcK4w/upnb+16gg+eeZz5LxzwY1r6P8
+flUZr/4banJmg9d8Ln5ufc2FVhfHB2rE5ZB/+1/X8hTTIXwca9KXic1ZHyQ
NXhvKRXuL2ZZHn6gjbKCtA3iyqlQIHQ0YypEH80d9WOtf0wFa4O1mvNOzP83
LPP1rxoqRDS8qh1XNEZ3IlsyVJ5RgWv77S+Ds8Zo/fiSx/5GKojb2WrIXDVG
ricV5PNeUuEHY/OxfDkjVBHrNtfTToXfXNwBaqUEtDUhsXZ7B/O8uE8VO8x0
kf/5+jibLiq0vFD3+LVJEz1PnLY700MF6vO0bd9oCkg4RUygboAKQpNhdnqh
IigizXFofogKN5O5V7i4fpt2ZpwuUh5ljgvveF1j5cVK2eXBft+osH/oTt+q
qTROuDZicOM700+DsgBXFVU8lMe3secHFXav8h+X/KWFCQUWb7gXqNBbU7t/
LFEPp98Nz7ReZp5fztr/ysAATxff9YxdpcK78oIw8ldDbFXaI1/L4gyh9aLK
yieN8M2yTT9/sjlDnTCPw8e/hnilglCntNkZHlW9HP/gb4Cp1Qfjfbc5w7xi
WGtwhx5+WJtrf53XGbKN6YX8DtqY89lrgY8CztCXl0MP36qGfZ6vDm0TdgaG
kbDONlsZvLPVM+S0lDPEyrQP2J8aMw19ddmwRs4ZLA3/K587KYTevH2+8aeS
M7TEvTR1aJJDcu9/vlFUd4ZubxfvwzoaKLZbKstH2xnGeMj2ugd10EAvxeua
vjMI9X6IL/2oj3Q+JSh0GzlD68W2wikXQ5QyVPVzKzjDd0aQkFmvEZoYGa/b
Y+kM0zkVlmp7jJH5150Jp2ycoWF4d+LUDSN0fcLG4Yk9E49pYvDFCQO0+P24
4BzRGVjVVbkf6ukj4o+SLwrOznDe9CL+eFsblcx/Kt7n5gyBrdmzscVqiG1x
a2iuhzMcTCGc3fhNBtWuHmHb6s/kGy9HHjv3poGf5eZby0BnaNPdw6rrL4iP
bHyfdfKIMxjz5kynhcjiNg5W7+pQZ8hyB45fLWpYiktb8UekM0hzBequBWrj
E9v85uVjnIEnt5aqWKSHe3gy671PO4PvO6FP/UsErMHfkpAT7wzVEq3CGlaG
OHHnkkPXeWcIPhC3EnbWEGe1tY02JTnDtaPWBSvtBvjW8dzjlZedQdBjcI+x
PAGXKgVtv3OFeX6g58bO+7q45pPJ3YyrTLzsSbvuH9bCL5K3G529xtyfMvvg
KZ8q7jQZ6YzIdwaWmTYnHXMZ/C0/YZVW5AxAPFFsltXXME+kpVvfd4YLxVdo
pTF8aH2DggKhzBnuzXHFmfyRQlyVf54pVDoDYVltvU5IBQn6vabseuIMex2X
z8fIaSEpgRuTm+ud4demmY1eRbpIteXI6ZUGZ+jylDGoCiYgQhQIfG9yBs/I
ebXjgYbIUoHv/qcWZzjnrD3WFG+EiP2j8OaVM+i1YjHXSiPknljV87TDGazL
7H7/WTJE/kbngx50OcNhvbEbQa4GKHTalTWvh6nH0/26BqN66NQNpeyUAWco
LB8dVH6ojRIdV1VPDzlDCiUIZO+ro6x/b5uP/ucM2xb3VZ1flEO3yvPdvMed
4Y0PbukSEEGl+0J+EKecoVPmRNuNnjXTGj6Ls2azzqDxZcUu5TInftHML6I1
7wwLAw8k+SIlcGf4eLnUojNUGEdprVYr4EHZGqsdK87QwS6l9MJPA3/ruTi4
cd0ZFMZ9iqx6tPH8effQhQ000JjOAI10PbxOUOX8yk6Dto21nROxBMw1tX7j
42YaxJzmnxlOM8AC1zq1W7bRwKbmXYPEUwMsaV/QXs1Lgw2JowEp6wSsshbm
VSRAg2ccFWfWvfQx4eGe31d30WDmKyHu+6wOtvTamXRBjAYHxkIO/HmuiYk8
k5LHd9NgbSmYN3BMGbs31lUflKXBydbtFwxspLF/aLI9XZEGC3YrPBM/d+BQ
ac//bFVpwNKVOzPE1dRwqlv9mJEmDRyzqzdVTvGhxLMbuFV0aUDik1tOmJJC
WXofbosa0GC8Xjig74UyuvXtjsE2ExoE8U5x5H3SRKXZke/WgAaZ1a/GHU11
Uc1em/2zljTgH0++IjOjj16s7Po7ZEODoani0Z+dBujd/e+p7+xpoDI733Sq
n/l+M57JPSfS4JIVr9KOdUM0vu3y03IqDebUngQ8NzFE8w3e5FuuNPDXrHP3
zyeg9aNaE2kMJt79pjHhmnqIazfbqThvGnSfk2I5uFkbCXR93BHmRwPNiGxj
2XNqSDK+6J5vAA2y/la80/sni1R0jiNqEA2G7dtkM9N2Icss0UO64TQo3pN5
IrByMyZaz7LIHaPBYlCiZd4FCey+jLMET9Cgx7OVGnpGAfvfS1PZFEsDifoN
oRIqGjiU7tu0FE8Doe9WdEqcNubJnxo2vkADv5dPFMxozPt5NOTfmWQaaFMn
JI4bE7C9wh+x1lQaJOBtIt93G+DJoFjjrZk0SP6sptezRsDnHm1yJ+XQ4E6o
HU28Sx/LLKYcz7pBg/nkd9E6zPugyVAw+9MtGiil8C+l52th79M3qiULafD7
zMcthTdU8XqzzMf9JTSQkW4+++q5DL7OWfqr5CENBnf1qkxuEsSGDtp8cxU0
AP1Sh7XA/obetDoN3Sc0aDruhXey7EDhPWZO0fU0EL2QaH4rXBrxibQfxpgG
BR3/VKJKVVC5FzGZ7QUNOEPfKZf4aSHHO70le9uY860b54yf6qLpCc/2lDc0
CL3V571kSECJquPfPnTSYGDjqF1OqwFSCD3MsesjDcrEuCXyyIboZfWCjGc/
DVr8dvL39Rggn78xFrc/M/UdqFa45UZALLDRZ2KEBuKFn3fenNJFeQmJsarj
TP7FA5+kb2sh43be/NApGkyILf0k2KqigW05z57M0uBblGdclLYMOkaWHFyd
p0Hnf4JbNTE/ErxatGK2xMx/n+++s+9qTSs/qe06/5cGKYOG5jKdOzBRslr/
zT/m/xWkkfMtSRrP+pnQeNlcINwG55g7q+Dkey/CaZwuMGGQ9lXntyZWmrW7
cm2rC3xvlSrh/qeD27Q+PBrmcQGV3MAeqqI+9o+id8oKuMCpvWY/VTwJmO3p
yGzgLhf4eUALZacR8C2Wg9vKxVxgQ1ZIz1SjPjbdM6f8e7cL+MTHP+lb0sWD
F6NsDeVcIOXlzCUhK20c3bEecFrJBe55kFdRmjoW2nHu/As1F1jp/rDKai2P
q122FW7WdoFqlpr5z+yimHo944WjvgtIrq+ueKax4PlhkdErRi7QthYjeOXZ
JnRZ9vaGfuQCg6ph0V9uSSCVQCVJcUsXUItYATERRfTq4SNTXxsXCDHbrX7i
iQYK+EXwKLZn8lnVnW4x0kEchOcxM0QXuFbdH1K0qIfunLDO1XJ2AbJuW1H4
GwIyb+yoiXJzgYDmmZ1PSwzQMDut96mHC3BdXz3494IBOmn7+fcGHxdYlR98
9iuAgIQv+/Fb+7uAfoB59RWaHqr58F0rOdAFIt6rmxw/oI1oQmGk90dcwCY5
LFgyXB0tMFaOCoa5QILrybKHE3Io/daZFPcoFzAWktnktVkEaYxzPrgZ4wIa
AZyPFvesmXYopb7+etoFLuxN2Hxy52YcdHTnlFKCC9T47/K83iSBuR7ncQZf
cIEu3yc8qq0KuHhZVr4q2QWk+CkD5o4a2MrkwZ6VVBeYjjBgfXJBG4+e0fFD
mS7w36MvQSLzulhBkDslOMcFctHece3D+jio5NuTWzdcILpfYXJqWR8/Mm0c
6brlAtSj8f80U/XxYlfuFrZCpr4O5x4c0tfDRgfCdXVLXEBPhiPHeFUbx/51
8PJ/yMzfjyC7Db818MvL8hevVjD5BA1sGTythLlkNlS2VbvAnVcmn5s2SmGn
moHBP3UuwOmvRuy9wosz7B9zKGMXYLlX46VmM2DaN3xJg9HsAtn8cQL7R/mR
WMQB+qVWF9gvInzBtUoa+Ww2S2h47QKiK0XWXWYqqPCG8MMf71zAsyqO9fiI
JvquudAr2e0Csn3uSieXdJBGy9sN5D4XOLdRaH+tpT6KoBcpxw+6gBjhm/HT
CgKqm411fjzsAqqtOh9rtQ3Qehz99NcxF+jU/sjO20xAFjt17glOusAJcKuK
2K+PLtzf9sF6xgUIqbk/GxR00Rv0bfXYTxeInLz8kS6thXi7n8uV/HaBoWO+
SZ/GVRAtIJf46Y8LKPWI3rCLkUHXVsOit667wMKPy4f1ywTRcKrDHRNWVxg+
WbNhaP+MqYysfMcRDldQUI1RS7jHjQ/Wsiznc7mCNv15V/0bSfzQYWD3e25X
eD75JSJDTxHPj1Tase5wBeXjqannbDWwfuSlCO2drpCjbyAy6MSsB7kO5PuJ
uEJc9meO8ku6uDEP2jMlXOGC6Otk2Vk9zKEt/KtF2hVSm6vFf/nqY9vWX6LL
8q6w92xu8n9Teviy+1srRRVXaPfzJS+d18XdPwqD6RqucGvbs0qDvdpYKCE2
N0nHFSTv33+vsEcDewjRXzwluILXtuziCm1FXFCqPTtj7Ap8p2zn03sl8TfY
JiRh5grB0nsKHklvxyofx82Ie1yBhd8qnmdi0jTk4PNDZ/a6AmfLgBZpoyCq
XsvJrHBwhcV/Z1TbN8qgv2lheJTkChmbRK9tsFdBIOcwyU9zhaSM/yo8X2ii
hDq5HVZ0VzhYGcodVKuD2h1ZTKI8XSEv44SJyoQe4h7t9y/2cQX672/6VCMC
IkdVpvb7u0LM5zwV4UICurrlUh3XIVeI9rnytlyGgAbz/ceMjrrC7QelRQef
6qHdOsB9OMwVXr41ppyM0UH+bbsIeVGucKS68kXMMU10n/Fr37sYV/Dz2vy+
u0AZzc29SWKJdYVPtvkNms7SSPdsYZVmAlNvQS624cf8KHpX7BefC0z+R14c
lK0ZNm144LY5I5mZh5/r+pujePBGc23tl6muEMD7m32DxG5s07PVYzHDFQaE
7slbWyvi5MDxc/I5rnCvb4KTVUsDv1/H5a43XCHBcK9jyU5tLHglZ+DiLVdI
5+3lNyTo4q0fd7wPvcucv/Q2XThYD7PuTGl1v+cK9s7xZKVhPbzsytlg+YDJ
py1yciJBD//IjXus+og5X7c98v4+XTw+uFoiWOUKra3Pqk7GauNB8ahb/2pc
wf0a/6H2nxq4y/vn1YmnrpC/L9ks5aoybis4lPL+uSuEfLejRVNkcMPY14S6
F65A3eTS6VAqhB/LecfcbnMFnvjuSZD511ASMBCS/MYVNAI3SIf+x4pulVAD
IjpdQaVH4YDVEWGUPd3h6dntCpT9qdWbHGVRitpeZ+s+V6AtnuXtf6KCEoKb
7TQGmXhH7B6fy9VE0RUm5ruGXcHohb0Rr7UOCl54QmAdY/J/e1/yqa0e8tfT
Uv/+jZkvNR/hQxn6iHGsVLb7uytM7MrptdpFQJQ6OdFnP5h+NhmpCTH7R9vV
m3yFv1zBZuqWZuArPQSmIpsvL7nCzeNdEqGsukgvNvNf1F9X6CwnbWpI1kIq
TdsXvf8x/8/b9t/c1tSQFFvi9N6NbnBm4mRC4Fd5tMuKbVRrkxtILPT3rXNL
Io5Xy+/YtrvB85fHb77o6WtY3RLWMsPnBmwXxo9yBPLheYeZpz2CbkAbbC5/
bLkbT1w+UImF3WD3iwmBq+UK+Mv7kXvF4m7Q9jLk1zYDddyzg3EzTcoNXuv+
PC9M0cJvnHuyouXcAJ8otf7ip4ObrhIv+Sq5geSBO+zoObOf638Vb6/mBsdP
i9e1uzHrQ5E90bpazHGQ02Smih6+64GDxfXc4O/GvNYAQ118Pd/gwCZDN3jR
UTFwJ0kbp49UesyZuMHsqBr+p6aJL0irUfvN3KAiWM56Y6gKPrW/2LZpjxu8
J7VX3T0ni8OLpMzu73UDjb/IObJMBB+avK6f4cDEc/vqbnoeB/ZR3ql2kuQG
N18nPcrZtWjqejhNxt/ZDehOhHwaCCLHsi0iTm5uoFfE8SdAXhpZ/jzLS/Bw
g2St+ct/ryghQ20Wzt373ODLyLyp2BUNpBERvb55vxs8mjkb/YusjeSeLCzM
B7iB6INP+Ryhukjsz5Hvn4Lc4FwjucV2SA/xG02OvAh2g0DG1cP1SfqI66Rv
34NwNzBv5/r+PFwfseDPHVnH3EDuRX+kZ64eWmRxfXn6hBuUWLp5yrMx603z
rvqAWDc465r76i/WQv8l2FeQEtwg9pL1kHizOupraSk2vOAGn+ocE09sVETv
OM3ypZPdQGws3DowZjdqsa3P3JrqBgEMnrWPvXzoabJu8u8rzHxcZb+eWzRi
WsyjdLz1mhsMWXBVK3uLY41xt2W2m25w6edlg0268ri2/mKU+R03KO+/6D5n
oobN02oXTxe7gbeIdA4HqxZ+5T8Z8azUDfwpl6g1cjqYbLzr90o5c3731tE7
Ubr4E+/ecEIV069/eoWt33Sx37djvyJq3YCKrHJYwnTx9NPi0MpnbhCT0Ldm
KK6Dw9P7fs41MvVqF08nLGnitQOcIWotbrB4aTvXJgU1fM6EMHfolRvs7at5
sUtGHnPvCDh6r4OZnyQ0vYEqjrMmrs6OdzH99707/F6JC4s3tB6W6WXqxR5L
t93xy7TwytL0vk9uIKXImrLhnCBSPygflP/FDVTMEoNdnkmjGlOX74OjbhBR
EnV6IEYZAf/5QOEJN7ia7GOChDRR22T1pMu0G4QKlryceK2NiHg8IHPODXZE
THV2PtNFfRmCE10LbsA9rvTt0oAe2hdodYDnDzNvny83yu/UR1MoctxhzQ1y
zVNp8SF6KFSgcH/SBjrgG/mKEXM6aGXq41gbOx1+pVlbHGfW//HP2f04uOgw
cGpbqrylOtqapTtqwU2HbVK1Ko0CCijj0H6fM3x0cAw/vvkJmyQSNcscaRCk
Q9+1Vc3DSdvQXcGX3qvCdAD2OT+9c98a1KYXvhhI0KEtfk3wiz8/rm6U8YqS
pkP5guCSYKQUNr1KHXosTwelXqse9hlF3BqU4DGvTIfNGmn3zstpYKL540F1
DTpUxTh58N7Xwn07x9wP69DhXPzkg2+BOth7ZsenEgJzXCo9k0fVxRNNFvQJ
Yya/5z+z9njp4uDssH5ZMzpwxfRN1Cfq4D+Hb7v67qHDSsOQfsUXLRxn8aH3
5l463Dl5UNvxqAbm2rXRZciBDg/ilS7/vqOE02e1ekTIdPibUuD5gSSNhV/4
OLvR6JCbhI9YeAnigpz07iw6HSR3VOtznl9oUD7aROn2pAOn/kfd42840WPL
+S5eXzrEBvwT8T4vhoyFpchOB+iA7Otn7F/JoRc/SO+TD9FhsjchYvW3KnJ4
eYb46igd8psN3pv/00Q9uY/ebQqnQ7jMIY7bFB3kGTziuOcYHUa+49Ptw7po
fA9vR9wJOlCoI/ZWV/XQUREzh+exTLxRSQyFYD20PBf8Zi2BDi4RvsNwWBfF
tty0M7pIB/Hzr/m4c7QR5/XOV8cu0eEHiz7ZkUMTpYWw2FanMc+jhy+ezlNG
wtYa7b8y6dBFU9+vrCiDCkS9bTRz6fBcREq+aG4nUpq/3Hokjw48mnmOX5ZW
TCtasVVpAR2Cpy6ft1Nnx4Y3frycLKRD6qOekiVvEdwcKrFH/j4zHy7cxy2i
ZfHq7x+pomV02CcdmwCzyljv+PNB3ko6UA/6BguUaeDg1VSFTU/o8HH4fIbu
Wy1ccnpf+GodHXxmzrzdhHTwGKvW858NdPjPulR/07IOFj/HuvVbEx0iL+8N
2z6vg103f3AZbKGDaFVqX6qqDk5Pvn37/Ss6WJ31zEt8xHxftof/aOmgQ2Zn
KsEuSQNzXLE0etpFB7Uc8J6/poxBUOD8ox46+P3dg95Ly+LonK9dhQN0yB64
y7ntnQh+LFotfn2IDhrX/c9Tr3Pi2fxzgWn/MfPArvI7IHXG1KdQnvXEFB0u
WktHK5/aja4rLjuEzNLBOTm+wi9HAfWUtuX4z9NBgXG7fv9XNcSjkfPVfZEO
RVu2fAkX0EK2lQc1SSvM/HzRaP5PTAcl6BmetFpn+tew+sEkWhc11HK1G7G6
A11xnKNWnOm38Sd+TQ53SD3lq/eFXQ9pPr/vLcflDsUFbC6NGroo0OJEqQi3
O8RkTe3+XqiN7rTYL/PwucNQVcY98UhNNLRXzJJD0B04rjVcrPBVRUJvZy7/
3eUOd0+xGdp/lUNkYsOnOTF3ePH5yFVeZwmU/CFFfny3O3jvr9lv9XY7aqF5
hX2SdQcW75HYOrVTpiwD6rhT0R0C4O1ozLHt2NQMDKKL3YGIdDdEim1GEvy+
qe6l7jAs0LRrrvlrA8u3s9+My90h+s695Z8dvHiktthU/LE7+Jk9bT8qLImb
kl9n/nviDk/2jfJAjRy+7TU7PVzvDstjPAUcF1VwghavZRN2ByOR+9qDDzTw
fnada7eb3aE/bP/0l3gtbNVHm09odYdFmVvKik+0sfz943v9X7tDuDJNpNZE
B3Oeun7T+p07uPQLxdvu0MGTRLyk8MEdzgQ/cwk30MavpP9z5Op1h8b1c/m5
TzTx/UW2wu8D7hB78XQIQ1cdJ7fLr70ZYvIxmfeOmVTEQddtqQ//cweTEIG2
qhpp7HD08P3L4+4gOOhMCSzbhdXMU1lDpph+nWevKtjIgbkFKt3Is0w99Rod
3A/Nmf749rFce94dFCKcvU7I7UCddcubBBbdgZLQNTXcKYkeXRLxWvzjDjqH
O9yEL8qjdG/T6t41pj+T51NV4lVRmPa+bbUbGMB/tEyebqWJqBwJfrnsDKh0
6t5wz0Qb6fYX1sdsZsAy4TJh01UdJFjazuexjQHnLazu6lvroqVT0wdNeRnw
39gjao4N870hbW+UEGDAsPH1O87XdFCtjJbQhl0M2Ec1sPXYo41yl6hH/xNl
gHvJxAEdsiaKeRXV0izJgMIEsx/id1UR40au2F0ZBsSlxz+98EQemQQ/Cz+n
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
wLt3JHuZtg7+H8TN8zg=
       "]]},
     Annotation[#, "Charting`Private`Tag$4763457#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"t\"", TraditionalForm], 
    FormBox["\"h\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->Directive[Medium, FontSize -> 16],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8060159482244005`*^9, 3.806021704200652*^9},
 CellLabel->
  "Out[163]=",ExpressionUUID->"8b6a72c8-ee64-48d6-bc48-f53722bd91ed"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8062709624860272`*^9, 
  3.806270962750907*^9}},ExpressionUUID->"35fe2fae-a4bb-40bb-ae3b-\
a9b400f94d0d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"answer", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<answer_temp_rd10_B0.txt\>\"", ",", 
     RowBox[{"{", "\"\<Table\>\"", "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.806271036792482*^9, 3.8062710658188944`*^9}, {
  3.8062713021655426`*^9, 3.8062713122787447`*^9}, {3.80630694693419*^9, 
  3.8063069475488048`*^9}, {3.80630720728747*^9, 3.806307208242956*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"fc76f6cd-4003-45fa-817b-45e76eed067d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Nmaxx", "=", 
  RowBox[{
   RowBox[{"Length", "[", "answer", "]"}], "-", "1"}]}]], "Input",
 CellChangeTimes->{{3.806306979587468*^9, 3.806306982703677*^9}, {
  3.806307222027032*^9, 3.8063072585531187`*^9}, {3.8063077130392857`*^9, 
  3.806307720358082*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"1d5d6be8-e5ce-46ae-8161-7ae4ea4f3664"],

Cell[BoxData["300"], "Output",
 CellChangeTimes->{{3.806307214455399*^9, 3.806307258910944*^9}, 
   3.806307720756869*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"77b66d81-33df-4b85-9885-78a14f1f904e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Tabe", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"answer", "[", "ii", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", "0", ",", "Nmaxx"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[14]:=",ExpressionUUID->"b0a1fd7e-3402-42af-be42-cb83d2c83c64"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Tabeexport", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"N", "[", 
        RowBox[{"Tabe", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"Re", "[", 
        RowBox[{"Tabe", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "3"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"Im", "[", 
        RowBox[{"Tabe", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "3"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"Tabe", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "4"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "Tabe", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",ExpressionUUID->"88dfc334-d40b-4fc0-93ab-e4d74f28c533"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"answer", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "8"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.806308321181167*^9, 3.806308336753251*^9}, {
  3.806308418354497*^9, 3.8063084862056456`*^9}, {3.80630854718573*^9, 
  3.8063085598764963`*^9}, {3.80630860563827*^9, 3.806308641720635*^9}, {
  3.806308726420105*^9, 3.8063087450754557`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"f9299d66-5967-4f82-917c-40357ebfeb93"],

Cell[BoxData["\<\"4.855031617125335*^-10}\"\>"], "Output",
 CellChangeTimes->{{3.80630845037916*^9, 3.806308487746771*^9}, {
  3.8063085485829306`*^9, 3.8063085632795153`*^9}, {3.806308611193082*^9, 
  3.8063086432597218`*^9}, {3.8063087285948677`*^9, 3.806308745485189*^9}},
 CellLabel->"Out[36]=",ExpressionUUID->"52bbf31d-efa9-4dc8-b177-1f3b71d62899"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Abs", "[", 
  RowBox[{"1", "+", 
   RowBox[{"2", "*", "I"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.806308258362135*^9, 3.8063082591786366`*^9}, {
  3.806309139208576*^9, 3.80630915569613*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"98c2e9d2-b33c-447f-bae0-0e7f00d61a32"],

Cell[BoxData[
 SqrtBox["5"]], "Output",
 CellChangeTimes->{
  3.806308260820696*^9, {3.8063091438249593`*^9, 3.806309156136876*^9}},
 CellLabel->"Out[38]=",ExpressionUUID->"9690c3c7-035b-4a19-99bd-ee2f0d7b87dc"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"temp", "=", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Transpose", "@", 
         RowBox[{"{", 
          RowBox[{"rtlist", ",", "vrlist"}], "}"}]}], "}"}], ",", 
       RowBox[{"Joined", "\[Rule]", "False"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x1", ",", "x2"}], "}"}], ",", "All"}], "}"}]}]}], "]"}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{"temp1", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ifunfull1", "[", "x", "]"}], ",", 
          SuperscriptBox["0.6928", "2"]}], "}"}], ",", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"x", "-", "r0"}], ")"}], "^", "2"}]}], "/", 
          RowBox[{"sigma", "^", "2"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "x1", ",", "x2"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Black", ",", "Red"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"All", ",", "All"}], "}"}]}]}], "]"}]}], "\n", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[{{-19.999996530612243`, 0.}, {-19.94785795350486, 
         0.}, {-19.89571937639748, 0.}, {-19.791442222182717`, 
         0.}, {-19.58288791375319, 0.}, {-19.16577929689414, 
         0.}, {-18.331562063176037`, 0.}, {-18.279423486068655`, 
         0.}, {-18.227284908961273`, 0.}, {-18.12300775474651, 
         0.}, {-17.914453446316983`, 0.}, {-17.883854827084924`, 0.}}], 
        LineBox[CompressedData["
1:eJwVl3c8198Xx42skmTvvTfZ43OumVUhe1NSSJERvolImZGRVUZkJlTIfCt9
bKFIsvfno2RUpNLv8/vnvh/Px/s87uPcc17n3HsEPa9YeVGQkZF9Ii3//7o/
3yeLwStiv34mVqXNF+GO7gpPOpcpYkLrCSnPFUpwfZf3lilzFTEJjeHNEYNS
nKFT0V/Lm4pYdpntEkduGY5iNJjuV4Ai9vZHb/3sVDkOMzZlLTyviFW1nHi7
pFCJ01TdkdkwUcREpZu9vRif4naru9UztRWxEzwlYrMPa3AvhPMNtOUVMf84
fUtTgVqc3HFD5wQWRYyn9iqX2HIdbv0O50VFGkUsp2NDfP5TPa784Ou1iV8K
2DD+lcCzz89xQl+yEsVmFbCVI+Q37OkacLOevg8GRxSwu+1mxQ2qjbj8T/A4
qEsBm733QU8uqAnH1r3W/LpCAZO5MK21ItSCezZ/1tk0TwHjE7y0ztvQijP+
0/53JEkBMxPX/d3q3o4LV8xE81cUsI1mBqVJsk4csznZwkUPBYxZmZMy+m8n
rvqCb8ymlQLWOTu6O0L7BjeTp4v/p6KAjZcURq6cfosLbaj2viOugKVpzMXH
JuJxjCPsdMc4FbAWTS25mMluXCz91APtPXnseCGV+8/nfbgG3fpJs8/y2L9F
6/A2NIBbC7nL69Quj8mf9NVNWhrEmc8rPw6Llccs/4V32bYM4yLZjqzc9ZbH
/MvOZH1/PoKrNZuXyDaVx4JcRpPIWkZxLA3JNQ2M8hhduCJ97+4HnNH6ua23
O3JY/sKPG/by47jrAprKY+NyWL8Eo9vf6x9xUwkrr3by5bAP0xGdvUaTOAas
9Q9FFMkeElw1Bz/j0I/7wHRODnPtPhRq7TONK3GDtwqSctjZ2fa3X0PmcOMZ
rLSIXg67f8H/433feRxt37rpmW+yGLXbK1pf/wWcr3L28OWXstgdS7u/9MVL
uPxL/sw3smWxoko/meIPy7ihRwa2SRGy2O2Z4HYKzlWcEt3W50pdWUyR+JbT
7jMBdx7XzdcsQtpvxKkgwWkdl3XtoUcvjSx2sZVn6vD2F9z+tMnq6qAM1r0Q
vpt9YhMnwywgtVsrgxXsaYrYiGzhXI1/+lFnyGCGsvfMDgtv417XF2+LOMpg
1x+5/a049R33ffW6irKODLY5xHTPPuIHToz3zHV9ARmsuRqVxTf/xCXc+f3X
Y0Uam/4ZIpEe8AvX2jqCAnqlsSPrPw8Xr+/jNrbKYqKqpTGNMzryxRF/cFbO
1nQFgdJYAJWBXdHCP1xsmpR5jY001l76gu/EDBk04MnutalLY9en1jXHJsiB
S/Epy9SBFPZ0gc4wc58SzC/E2K3PS2H+5ZSHrgpTQWSeQ+5+lxR2KCTM67YL
NSxQUQtwJpL+5021+tPRAYvWlKeEvxS2/I2H9uqNw2B0tb5UzVIKM8AF+9PS
0EPlpKu0LbsURujLEWNxPwbbpcJeFn8ksZz9ykLDeEbQDFh7ZDoviU1nB3Po
+h+HPppAJqiSxFRsPEyPuDID03tVc41USWz83il5TR8WcHz0+/aJYElsV4PC
mxjLCgTl27/EQRIbvDjb92eNHRTITE8IiUhisfc3O48rc8L1fobLPHSS2Gh4
Qi9DGhfQembPMb6XwBrV//Q+jeUFC1kXriNNElie7O07F3n5IXtP0JrqoQQW
VFR8mP+CAEjcq+r+dUECKxtiEI9XF4KrjlfJv5tJYGweik/fKwtDk6iK1oaC
BBaCY/z7GicCxq3tNQv74liKjvm95EgxSL0TszY1K44V/4h7QN4gDhNWxkIf
u8Qxn2hPtVMHEuBNGMnsTxHHrApS97nfSkPNi6x3b6+JY7dbORoeGMrCz5tO
dJi9OKal2ZA5PSkHcWzL/70QEscyi88MS4kowtB8RUMNjTjWQ//nTMRxJWB7
6r9Z/kUMI38S7V145AQ80d8797BBDDM+ukehLqkCGwxtDx/kiWElW/qvpE6r
gupk9Me0KDHsSzVH8s4tNcBfPWIWZyqG/UqvCL/JrwkM2sOxUfJimGbqYh5P
vBbY0mS2h7OIYU0DuR6G1Dqw/JBP6cqMKMagFHYf40cgc2nR99IbUWxuFIvb
OEAQpFxeeq5cFNtIbKKQIerCoX5FTvtAUcyAto09bFUfzLN+WlnZiWItt59F
be0bQIZHS5K5tig2fmtr1ozXCET2DMh0qUWx0fi476tpxuD3hk5Ta10E089u
T1pZNoEXKUPXVIZFSPXAIapnbgb6ovarkrki2CPPVUoW69OQsMkjKHJTBEtV
Z8TX7J6B0ZZ5R77zIpjrHGXO3oQFeFr5DjHJiWD7rMUDzxqtoJJXgfYoswiW
/FBv9kHzWdhe+65LsyeM1e8afrrebw23bka+/N0pjHH7xowrctlBn6n+tx9P
hLHpUe2wSgd7YGKjldxMFMYcZ/LlXCsdoKg6LX/JRhgrtyAzUo9xhrkdh/gL
WsKYijK2c5XKFfi0hELWBISxPXDzOZbvBrm99We+rAth2hT/Rfje9oAJxght
/xEhzOjaf+nlgZ7Abq8vudkghDXEEqN8/M5Bxsp7iu/RQhiUEZ6K3fWCUdn8
b8HeQliL9J5xUtUFOB58fmrXXAhz28uUOD3jDSmUP17+ZifZK5MPSQb7wIBp
W/GNv4JYvfNzEbLPvnDk/u17/xYEscYjoPr07GW4K8B2ibJGEPuOizDuQlcB
7z1jcztdEDvRlIPz5QkAqmdP9GjCBDFybcnPDykD4ZaOGs8RA0GslMOgiHX3
GmCx/2iTJQWx1yE7jU8OBcNBf/cPhmOC2GN33t9OAiEQ4Wj/jmlSAMv6yDQj
ffs6NBcJtGZ0CGCa9A+pPr8Lg721tXK2UgGsYuV6zIR0BASFht3iuiqA5ev0
+jtzR0J9u+6VfBsBjMLgpeC72puwRXXYmU9LAOOeoR168TQK/DNyVYSoBbBb
wq/8dcJvgUPjWwPjj/zYNkNR0OPAGBg3tOUzL+bHvrZFOu2ExsI7z9CRs+r8
2IVKwaVfVXFgvkVTZUfJj10udv/EOXUHem5mxzoN8WHlffPMu9zx8Dr/ldq5
83zYU8JvEf6hRABp0+Pe8nyYYV/pLV69ZGh9NUn02efFojSVRlBvCrwc//0w
MJUXSxF5vHnxcBooeSWFhjjxYkd/z22WfE2Dmh0ey3AxXmy3Jk8hcuo+lDPi
Dt1q5cEalsikbWczQLRgaPr2HR7s3lM586TvmVAs69YYb8WDXY5/2TPE/gDy
TKN80ta4MdXKumfKiTnA8YnRIPM5N1ZDqPivZyoXMryLeHMiubHnQ3p7JpAP
KbGvhwtZuLEDZ7qX5poFcIT5bGXJLBfGcunZGs6nEO4WLcaUV3JhWQujxpG6
RRDdfkitFnFh7DU5n88wPoYD80zGF0e4sKPf7ZinaEsg/LMosXGcE7P+qqgZ
c7QUgvaMHnb4cWKL89/TjXTKwJ1NadDwBCf2R4HxXnZMOZxS5v3b/4sD6wgt
nh2frACxqzvOE3EcWPDX+Cq5jmpgSplJcj3FgcUECVPOn6qBf1W9rUvMHFjT
qshE7eYzmFgt4NkqZMfecCdp07bUQRdVonmoNzs2eT6OSv5pPdQJh/z3V5Yd
G3r1pVWw6jkkuJlP0bWwYXY1eUS1gZcQckONPjWaDQv/KIP0NxvgXJ6QNpsx
G3bJ6CGOINgE2h/38oTGWLHlR7qh7541g8SPxf7yPFZsTJwKbdK3Aivzu99y
nqzYYdkX4BvWBhunS520vrFgYqebq6h0MZj0S03sfMmCLQo8cLl+rBO6EyJa
Tv7HgmHly+fsVjqhEG/JbU3Hgile7FPZevoGkpa0zSbfMWOXxu7XEh91QRiF
RIR7FjN2w7f9wUD2W7DCHUz6CTNjfx3cLKLKuoGyoTL3tg4Ttn86r+aMwgBs
vs/sO3KICQt+4+vgdnEQprai9tP6jmPTE8JG78uH4IWsneMju+NYRdv6h9XC
YbhQSsnVGMCI7ZoGbdSdfw8Zkq+URsyOYkM0s3GF1p/gste9+9MT9JhwcahI
OsskGBV5bRO86LFV3xsUDu8nYY+DqZ4i6gj2wLz7HZhNwYj12vFjR49ghe9+
9ZlTTkNlansAd+5hTM+cQYymaRqcaX0VlV/QYT+sOlddWGdBxUA3DenSYSyy
8jJfW2eBIYp9y3yIFvu7xzhxV34OsN03tV5rNNh5tu6M7J45yDmRyxgYTIMd
C1yYEmach8ArV69GUtBgqN/1NJv1PAiv8ig84KHGnhj90QgbngfriKe+Z+qo
sPom4eQ/hxYg9hiujMaICvtqT2E4prIALx4PLXRMHsK4HuzLfPVcgCU1N77r
Vw5hslVd1kpJC8Ay8M1B4dAhbEjp2mZW3QIYukdlrmVTYrucMheOv1+AkO+M
I4WylFjiZLBB/uYCPLlbRO/wmgJLdOKVVz28COM8SsbH7Sgw23rzN/P8i0BT
9zqmd50c+/ngvV+p4iLgSvRFnAvIMSbMiTVJaxEuflrc12Alxxil4/8VmixC
9uUg1e0KMqx4qMV298wi9JJTBVbiyLB2gw/yxVaLsCMt7fT2yb+Oy5ddZJss
F8Ha2nxUZfigYwz7HWJ1ahFe/nfZ5Mmvvx1pIbiQJMNFYCtNwdiE/3YsJVTe
j9FchNDBZ2p3zP90aFS9+2orswgTP4ZrdoN/d1zpFhUQ514EDb5t0YsF+x31
qm67rDSLkGvE/HCi51cHWXu3qhHpvL/9lVlMtvc6moZ4HD+PL4DzA5vEV9x7
HW3pD51+NS9AW0cIhZThbocEgTeqK38B+NYehOX6/+zofvGEz+O/BZhTn/SO
6PzeweSHDywg5UPX4/fMOnGno1B6qfDusQUojuexdWbZ6Tj6cXV/ZHUezk26
Guh4b3VcSle+djRjHrooolqepm524OwNXulenAdTWz0v7aBvHaO3mKgcteZh
cBeve8D5pWPDzJepdmYOPmgO70d7LXdgPoXRFLxzkESZ+Fx0+11Hp77zr1ec
05BulOFXodPbYeA08Vu5YQpy4x+Kysa/7igqc3umdHYKSnCY62hUSUeI7N+j
HPc+g+aSVGxr3VvwUi9/M8Q4CWQn9mq8xxYgcGGXa9f4I3RemD8a9GQJmpQk
rLo3xuFWbp9fVOgKTHuveMpmjQMlxUOpHE4ibCzshg4QxiBmTeDscs0mJDox
duWXfIDztzJv+T7Ygl8GaQ8u2X0AA57D9Vs3t8H0FtvKxJEPcMhih/HA4jvA
n/fzD8LeQ1zj2yG2nV2I/ej35NTFUbhgqXmQ/3kPcpPCpdbER+Hkeo2scNcv
qFXcu01PGAFa/uwk+czfQKvzrm3uygjEx/mYGqv9A5nEJ4Oy94ZBJfWb9uox
MmRrd+zDPcdhEJ2usJaKJUPidjcszooPA1UoX2ytHzny9Pv2fCT+HeAraRZb
dSgR+XObK+f4h6Bht3P/Xx0lGskR8aftH4QnBv8x6YsdQpOqgabsYYNwZ2ZT
t5eBChnTPO4ymhqA69JVDvQxVGhdMT7KMm0ALl73CjizS4W+C58KzjUeAGOm
ycKxWWr04rXH7da2flB3y2jisKZB9xQ0E6Mi+kGi+vSwUw8N2ihv/Wmv1Q+0
Rm/+zdfSoqrw9AXezj7oDat23Yg+jMjnvnkuL/ZCM/5CiOLPw8jlriZOra4X
KpkFU4J8jqC0JWNOi6heSHia2bZvRY9SrSrbnwv3Qvj+mTGdbnr01OIK/9fd
HvA5efhrlNZRNPEJh/UN9oDpfCQPjQgDmo+W4rOK7AFNOQ1l02wGJH+4rXrd
vgekInbMkumPIeaceG86lR44wnoxgvnHMcQ/e7O+fqsbDhTSTKqUGVHYAzUH
+dFuCLHzHxvwZ0Qb2y6JTC+64UKJxNdji4yI7lnb9reIbtgaPWAS4jmOjgmR
8uHZDf+Rj6kr2xxH0qX9uz9MuuG+a3Ssffdx5BeplTnH0w28yXaVPmRM6Aqg
Nh7abihvkR3+T4MJMTlL2UZ9x0M7xyR3URUTSg+b7i4bxoPJyVrd50tMiFJH
rssdw8OH4Djvt7zMKA6neVG6Dg9uJc7JH22Zkaa/agvFYzwQR5WeE+4xI/Ci
zJjPxEMwOd2n3z3M6BP9Da438XggU5g9OErBgviUqIOLI/GQ6PpSRECLBX30
m1kPD8IDW3KiqVIQC7Lmd9w86YuHohaPqwZPWVA5Q8H6oXN4kCGqZdmusKDT
+sMZT53w0MjB0HqRnxVp3fkXomODB72TS/Ph9qwI5/glrvYMHgaDm2mS01jR
trFABIUZHuxLUmUL+ljRJdNzQfIn8bA4euFsHSUbCs8wPH/CAA/+5Dphb7TZ
EBf9xJ3Denj4Jc9cMBbMhtik7h6tQ3iIdSV0rdawobX3W6eESXwsuYP4a5UN
Yep/al1InNuSyUgvyI5u3UysdNbFgyjRV5XPkR1l+dpM8OjjoZZDz1khnR1J
8Ob25hriQeskxy29AXakjac//d4YD/jgjTJrKg7klZbF+MYcD5YlXYMXcByo
e7qS3tsSD1OjuTvXQznQ8zA/xlZbPHiTB3Am1nIghxpD1Q5nPGzLn4SHBA6U
SP8t9DIpXjdceb2eCXGiEveT1F0+eKBN3knodOJE9tnvqbFAPPARC8aXBzmR
oYNC9MNYPFRwhPzZpeZCjqptpWEpeFA+aS50GHEh8uIbjzez8WBasndZrp4L
1bSzsZc+w8PY6FA6WudCIT73q6db8OBOXvrKSoQbcYXLeZf14CHE1ZIqNIsb
GU5G7Cwt4oE8WVw6/h03cpPnsrHexkNSy1+LPFoeVPVe5JsZeTcUc1Tmd4Tz
oACuilP9At0wNEqhTOvGi3pLU/JHvbrBgfyTA1c2L3qxZ0lldr0bluSf3ZQZ
4UWNioY/tBK7YT/Jqd9Cnw8JjHEHRNV3g/jJF5454vxIRno18Dx1D8SZPM0d
c+ZH5qHak9tcPbBi9mT0+H1+1FvD3Tkj3wMlFtl6CX/4UUa6BOpz7IHjsri0
tosCqF9t0vLdix5IURUKqNERRF/Qu8xH13uhvZEv2dxeEBV1jerevN8LX9W5
K4iBgsjiYu6N6upeMNdimRcrF0RVw3dZCfO9cARRWxYwCSEm/r2k0TN9cNeE
qJC6KoQeNweF1an3Q1PfirkchTCidv5Vv2vbD6tmixcHeIQRriJz4kZwPxid
niqktRJGOnVxKief9wPV2SHG6FZh1OPkOdaiOAC3nOs3A9JEUJv3gH2xxiD8
dyW89qyWGJp6V/7oTsA7+F5uUqRgL4Z229KkB3Pegd8Cx/2jwWIo9YxqiMnr
d+Bk03itu0YMWT7yo9+mGwZNre+qWkLi6EZksmev8zDsUfu3CdFJoJ6GhwZK
NCMQ/Mijb2tcElmJ3HtsdnkUJjI/nCj+JI32nF5VxPJ8AP9B46V7gbJoM7m8
SPDaGHwfVZe7w66EdAwdr7QUfgZ3bJpu+LwKmmpYeaL3fQ5GGj7d3PmljkrS
R+RU5Zag0EnzvhWNBjI3TPaO0lgCf7K8kjoWDaTssPb4jcES0Js6916R10CJ
b9jXlZ2WwHh6hunLeQ3k0SXF0nlnCdopl0qX3mmgq19q/wTOLkG1xUb/WKkm
4lANrPh0dxkifpyeUX6uiQ431XlJpC+Dae6zzXRME2mXiZ3zf7gMq4tXWa0+
ayJLTOPrbN0yCIXuuA4xaqGjwobjdpPLkPNwbwsfoYW29ft+3JNcgXAGi2+v
7mohhTg690alFYgjUnA0WWqjKgchlkFsBcLWBzJU3bXRobOEhmd9K+D3Jev4
S39t5B5HczbuwwpYbUgdqU/URnwqa+jY2grwblsdVL3VRrzH+KJTGFbhxa/i
pQINHZTkFWaj5rAKi7T6dXcEcQj/nuvqzNIqjNMdlaNWwKG6sCWQ+LoKPYc/
VsbicIjPKSbt/I9VqKH3LYl2wiF1moD7L6jWIJwx/UFEJg5xJrSQ1YmuARPH
4o0rdIAuJmsVMJ9bAyQeY2q3BUhIp7Hf6P0aqPv0f037B2hSJr2h7tMaZI/H
G69QI+TRUFbNMLcG9zhH1wVYERK+rPf40Zc1iCzwVMpSREisKEuMjYoALlUx
HVE+CCnGxOu4nSDAxID48UcBCP2ZyQlfUyeA9Ua/Z8t1hPxquULP4QhgrshC
/TMOoah3nwrkTAig3Vhi7vsYofbmODNOVwJwvXn7yWYKIUlacUed2wTIWrok
fW0RIRMeDbr5eAIwUTPcSCUiZPeo2TgkhQB0JrYC/XsIXeNOCwh+QIC9oZUL
iFUXDQcyauHLCRC0mdDkwqOLmHj/0/lZTYDN4/KHI4R1Ub/lpTfsdQRYsw59
+lJRF3ls8djJvyLAx0ma71KndRFnY1l0bQ8BrP5UGRrb6CKKtP27fgMEGOK1
eODlrIvGZ4IYuIYJgHfP1iz00UWUzg73TT4SoGFFIpr1ji66mUn33/4SATK2
TRjIMF1kP0UrXfKXAAn+SsXFeF00FsM8fpKMCNFELlXDQV10vYKXOENBBP+F
dZeESV2k0MxnsUpDhJOjyU9Zfuiid7t+2h7HiYA7HaLb+FsX7UycsCxkJoJy
n+uYA4Ue+rdLMznKSgSB1/J/Hx3TQxVbMqeYuIiwXzdiLimlh1ojs7f3BYmw
Kds816+ghwLOiE+OCRNhpaI4yF9NDy1uJxuWiBLhfdG1/OcGesjgVvEzbkki
9PE6K9ia6aHwuPrnXVJEwHIMuvYs9RDLgqahhwwRqtNYv+i46SFX2aecwfJE
KD56cHPOSw8JRFz2/KJAhJz4FeYYPz0kn+Wtb6dEhLjoRq2eMD30/jBugkaF
CG4BDolWGXqo/9uzkg8aRLD9qsv/I1cP2ZzRISdoEsH8ktTzB0V6aCt7jGFL
iwjqHr8np2r0kPT6gsmUDhHkphf9b77UQ5FLppEdOCKIOgxQCLXqIbPm1wFZ
QAQmy4dS3r16iP4U8TG/LhFoB2+30w3rocC2ccIIiQ+M/a2qx/WQUcLi31A9
Inzvsl05Pa2HTBv/Lh7XJ8I6gvCtRT1kOddUUEDihVZxhgyiHlKdO1AWNCDC
hDpjseqWHqrNjijPIvHQiz2VT7t6qLjR4+AfibsU5nsjDvRQvH+/poshEZqr
e134qPTRzr6NRw2J6yTqt7Aj+kinQjZ0h8TlJbm3zzHpo8aO3igZIyI8Eojh
pObUR89ji245kDgj3/dpOb8+otlLjAoncQKHta6ZmD7i3X188x6JozK0x77K
6KMf5z7EZpM4lFH0UuoJfYT9/ZiRSWL/pKN/lTT1UT8L64s4Ep+n/Zk6hvTR
CQq1VV8SO8bOiFw/qY8a7JpOGJLYgqy7ieu0PiIXyHrERGKj/56Zt1mT9vMa
lPlA8ldn78Gcm5M+Kvt7fyGexMpBUUEUnvqImEd4e4LEUpsXaUsv6iO++ONT
I6R4KHHFWX68oo9qfqnbO5JYy+BxLl2oPup5WXzwgRRfA39sUStSH3lHhY3r
ktg8e1rG/7Y+6t6gXy0k5cf69X5wYRLJnzeuatuk/Dl/Ye8YTddHHHz7gyok
voysLNWK9RG3tv96Oin/IT5Xci9VkOLhah1dQ9JHZEbSYl6tPlIS7wlvIekn
ZQ0fTNahj3gcORqqSfrKYlpqV8Lro9pWjCaNpL8CbXJar0F9JJ7q/9mbpM/a
VK3c3s/6yO9cr9hXVSI0Ndsv/l7QR3qaFM/ySHruXAqWkSPqI4MPIxPaykQY
Va9tv7+nj3TfJ8jbKRJhZ05k0YnVAPmUCnz4QqqnP4f1ZFJ4DNCZf3VmiqR6
O6TiFowJGyAq2+9PLooTgSU+h0ZUyQAlpYRK1pLqVVWRQWbjtAEqucZk85ib
1A+cpIMFbA2Qx6ji55ukufPkbeN2KxcDZNKplHiGnQj2n25ZNPoaoBaj0KQe
JiKERe8GRd01QG/981iE6Ihwq4qlvf6eAfqjdXEtm5qkpzFFmuUsA9RaxqhA
eYgIuZJ+OSalBujYLw7d+gMCtI7MtTG9NkDFN9mCInYI0PX7L7VhL8l/Y8J2
yiYBBkW5LUKHDdDN36FKWV8JMBNms/B5xgBVm9znjVolAJlQH3XpbwNEyx3b
/HqSAPqBz8+oqRgiI88ZMvoOUj/9yfJ5Q8sQ8cQ9Ny9oIYBxRMiFJ3qG6GPQ
tf8kmghwOlbjBquFIVKp2qrgIfVvx6yOyh0fQ/Sw+7BicjEBApv7qWoLDdHP
KptnWTEEKKRYapGgN0L71m7DCaT7R/iO4ck5JiO09Lv067oGAZ4cKRt9wGmE
nI6PHjdQIUA1iw+BWtwIGRIoMz5JE6BJbJNtWdcIDf7aSMrlIMA70z8BRaFG
6HleTP1/m2twcJ9FgmvRCGktH8JT5a5B+tvKix5EIyTGHto7l74GEnuoonzL
CGm6S9TXJ6+BlctlKTWykyhvqsBLK3oNnojjZax5TyLbLyMN895rcKo1VDHF
7iQaqyTnTT6xBvnLk5oUAydR5xJwN3WtgpZ60SniC2O0c2+mRGJkBUYTQ4qO
tRqj/865phr1roDPrNkP5TfGiN1q6I1r5wpkx/3MvzlijOYpMcXIuhX4+cHs
C8uGMSLnhavhaStQG/AzAcRN0P7E5dZAixUQqzLrycgxQWRCV/Kf9y0DI99P
PYg0RdVkaSIb9Utwp9ijd0nCHL3xPB/xJ2kBoqr28kN3T6GMtF9LqrJzwH32
CblT2Rk01dUzcuXwFJTxMuR5lFmgur8+X00YJ4D8w4wTfbIl2pd3ULkq8AGq
P2l6uZ2zQsn30mcWJ4chp0iGtcLsLPqAhJvr4vphJJ5C9qW8NZqR8jum60Ca
txhiD2hOWKMjJxzfJ5DmvZR0qmFHVWvEr1jIMKdCmmce0l4j07FG91+e+FzN
hIfXtQyvzEyt0YhnoPO7gbfw4iOX4cJ5a6R2EHVLWf8tZImecDmWa42sUp4a
eKp3gWPnueRLh2xQYNLbSw76r0H34U2NQ7Q2yLzx0Q2eE69BIixv+dERG6Q8
Eo5fF3oNuwrvdT4w2aBxetq5GorXkFGot4ETtEFvI0OT8a87YfCm4BkWnA1S
UulIUzXsBISbZewItUE1ll8Zv1lhINrimMGyboOCpoy3Pwq0gWlX9nzAhg3y
aThGM0fTRnpvj8u927JBqT/Nm/c3WqFh1qo3fs8GRRkdvPduawXjQ2YHB1S2
6OX2jyZ+p1bwO6V1kSBgi0ytc0P/5rRA/Sy3drutLbrxst9ISrQZ0KHpRe/X
tkiAsrmE/UojrDxs1nzx1hbxXglinHNshES17DSyXltUjz+y32jUCOM+ZyHn
nS1i/tclmMXXCJdHenP7pmzRUObJtsPvGiD3UYOl7K4t+tktzjeo1ADf1VM7
tqXtkDH9+cshVC+h/LJ+3o1MOyTGmufvOVYPtq4tA8dz7NBSZrKKw5t6oDpz
4qA03w5Ni35Ld6urB08FYY+hx3boScbxr7nJ9cC7QyHOX2+HXuYpTfcZ1cP9
66/rsSE7VBKZe5y6tQ7+i9Hto6S1Rz15BXyP6mrBMgd+xYfbo1UxwcAjKU9J
78tP/XM37JFI/dr2kWtPQWLs2iO1aHu0/fmATtj+KZAdL9dfvmOPvGj4WjKE
nkLtXcYUlGmP3hfZX4ptqgbG6/NCu8/sUZcP5VrcWhUM2caYn1+2Ry37RhOV
9pVgytJdgLNwQOoS3jmcIWUA8b/Np886oNOeZ/9cdS0D5QP5/Qg7B9QU/Cpk
xqgM+NayrV+5OqDuQ2znf7OXwXaLD53yZQcUoZykrtXyBHLOMVyTTHBAo20n
T7+hegJr9TZGLF0OSC0ZPx1eWQK3LZe+ENQckUtB+tFPcsXQtKOpZabliCy/
xX7x4S0GYmZafDXOET18d/QiPX0xnJ7EiV0xJNm/oKWLJBQB27kct+9WjsjA
TKmEq7QIyoNOjx5cdkSrX245y/EXQd+DpkbmEkdU47wi58tXCIwzSbd0GJ3Q
m3aPu87J+dDFGDOZzOyErl17ssEfmA+h+mFKM2xOSLjSefi3bT7MlHstRPI6
oWeVjS//CORD1TWcHiblhDRyyVsEGvLAiG6TXN/QCb3u5N+eW8qF/5TPRhuH
O6FF6/De5rM5oOBt8in7hhMymX35zlsrBxZzQJEQ5YSSBK2WpYRzwPSf9Hz8
HSfEnkJPtbOdDex9h3T7M5yQt4KsRHx6NtS7NZCdfuaEbMjHDrdNPIC1BM6o
s0tOqKL53vPuwCwoYamsX191Qstx/krglAUejzSXY9adUGFwLNuQfhZM1jmZ
vth2QpaHxF8psmZB/8RDFlZyZ+SYZXGM4VUm1IgJVYzzOqO5ypXrtFSZEPRa
atTBzhn93ZAaDXqaDgrmLYe2HZ1RQYVlTW12OnwdM1NLcHVG1/OnPclj0+EC
wS+/2csZJXif3Z9zTAc7xmcXuIOc0bTY7p8sunTQdD3xeyrVGV15Rswb9LkP
5PtaIu59zohscN99USsN9ms3dpsHnVGP9ak3g1Jp8N27qJ91xBkVmgSf6uFM
g7Ux6mv9H50RfVpI4dfdVBiqG+lUXXZGL3iXKnZfpEL+JW+3o2QuiMtHVvCv
Yiqofrqf26zigpz4/+pM+aeAQqqhP6uGCxKXnHW/bZECkif3dK9qu6Acv9wr
ZkopwPPShSCq74IGK0JnZH8mA2WahHqahQsqeaJtZHIzGYaN28e8fV3QXcpF
v66sJPBpIjCyFrmgqKuNK3yTCXAZr9rRWOKCng6tP/3RmgBXP8Rcdix3QQ9E
K4aIBQkQvMnbV/DMBVEP2pTJX0iAKAmrGKl2F1R5OfumwPd4yMxu/gGfXZBV
dDTFbdZ4wK4nTvqwuqJJdonm9Mt34HXcxN2jnK7obmIyz8HZO/A2Q1StlscV
HZGJs4nRvAN9tR3pP4RdUdtJv4/TNHdgbG3HPErJFb0mO2E0/DgOiPbOHZln
XJGNT7tjxtxtYNWQLcHiXdFBlQTnml8sZH/kdLZKdkWHfcw2Fm1jgSeEmmUp
1RXtfsvJ+4liQeT5bAxNtityOGYq6s4aC8qy98+dfkLyz0gsRLcjBqwEd4Wm
Xrui1ICJSUn2GEil6yza/e2KqF5M8/8ZjwaW8qcO8f9cUczN4vXyN9GQbZR7
nJvSDVHECC9dqo2Gwphr0bjDbkjy+S16iYRoePZX1OM2hxuazjPWSsdFw9BW
ggCziht6WVHbzFwVBUcmrQvk/N1Qg3J52RWRmzBQem7vVoAbiii8ST186Cak
BARafgxyQwKdd/3OLEcCI10qZVSEG4pSVZisfBIJLOr93iN33dD9CrudYalI
4MnSVQh67IYc3RcSO9VvgJyVXOerCZJ/tu3nA30i4BuvDhfDlBuSOsWmdON0
BNQSzK55zrohjYf/ZT1WigCl6EuiR1bc0Kl9mmq93+GgVlsS77zjhmbYY893
J4eDwJ2jFf+o3VHU19lfHxrDQHI5JqBY0B3962gct+K/Dikh9olXhd3RMynf
N4mHrsN3GtlSnKg7YoH5yHlCKLRLjU9MSrijb+bNXxZehILVVQnErOCOaK2K
/TXNQyH89wBDLM4dBZGf1BOKCoGB42zVXk7uaJU86TrjnyBQfEx8e8LFHeVc
Gh2qWgqCLOWOWXI3d3RrVzzYfTAI3O0uMj/ydEfzgwHAWhAE3/Obw8cvuaMP
bwd2K/SDgFfCzeTkdXf0g9d54lLaNfDHla9IZLoj/Yz1Gxm4QAhcOWo5kUU6
X5KaQIx0IISkXGu5k+2OZpavCt7mCIQbM7jUlTx3VFVj/eP1dgAkRY5plBS7
I4JKzIBweQBUtFMk89e6o9FK7flLbAGwhHM5wdbvjiZWW8bjya7C2srrh28H
3FECrV5b9OwV+JIiQRs85I7kbEWYmNqvwM7MztT7EXdUUNn8LzviClDcTIhL
m3BHgnILjNp7/iDQ0fiJfsUdGaRzcbfsXgYnYIqiJPdAp120GloY/KDw2ckr
lRQeiNLjeVL3li8s8d9wtTzkgQbu64VvfvAFP7I17QIaDzSaEKaZk+cLkZ1t
vzQZPJAMo5O+vpQvFOpfuhbI7YEO0NvZOXMfWDqJXZhX8UAnLOJ9455cBImm
HzZ31TzQ1aWlObLki+AnIW0or+GBslMe8mReuwg/aLOEb2h7oObu6VuHdS8C
dZ/vHIe+B2JibUNi094gac7uaGHhgSxr8CNHuLzB38L/VIePB7q410u5VuoF
al82JRP8PNCR4gOl2GQvILt7jdrG3wPlaZ5R0wr2grSO6x3EAA90//Et018G
XvBCLkaRLcwDdavlWNcvn4ff9Nmsl+94IHanXH0ymfNwt7dzmqvEA2n41+Wf
6vcESy+D5uVSD2TN1kdxrMETuMi7s2rLPBAdt/zCaqEnVKkPnDGq8kDVzygq
ZkM8YahsvDOg3gP9CAx/sCTsCaxx66U9mAe6c21LUe6WBxTrsfqHTHsgK61V
Lq4z7nD4h0Se0KwHqoxXqf2o4w4BZdo9Q3MeqC2iWqRMxh0Q/Xkh8SUPRJXz
wTrisDvMjNWPfyR6oCtbEdwbyW7AeckCNPY80J/1PSmHOFdIvZfI+IfJE3Vu
fa1WSHWGPd0CnXIWT0QR3G8xF+AMbt/rfazZPNG7PLeQZ2edQc5hsqua0xMZ
fCzvqWJ3hgEhyTAXAU9kzFfJzlnkBDQN+Pl2WU/04mrCg8pXjhA5Rf482tgT
XS+Jh3EyB8hu5qh2M/VEq1H0EiKL9lCfLV+qY+6J5iqEHme8tYcVa5cHv854
oq3Jr8+nEuzh9GBTRICdJ8o9o9J9iN0eeNuvGHhc8ETvFV8tpavYQWvB9BiK
9USHMdqNygQbGL/xfYgvzhM5bUbwUgTYwKbTkZ4/dzxRt1SlSaidDYhwaDQ3
JXqivJQHjC0iNpCUmvFIId0TFWi9yinBrMEp2sxboNgTPTe3U1r4exaC3Dzd
Dx57op8321zpVs5Cik6Yw1Qpyf5KRIj50Fl4/euJWXaFJ2I2pyWKFpwFqUAK
BcY6T3T8auUVIb2zYGDBKblR74nSg7UiRaXPgqucgtDAC08k31IQrM9yFu4T
XVjuNnmiQPXd5ncrVlDdE3T0QrMnMiFoDOgMWwH+SSK1QasnYlRjs8a/soK5
2OJ/gu2eyG3mhPKlx1aw7/lq71+HJxrM0zwtlmwF/wO2/Gxn
         "]]},
       Annotation[#, "Charting`Private`Tag$858856#1"]& ], 
      TagBox[
       {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQfUn89NH//40PrHX6fO729nv2Je8jHR6GGMH5Ysdf
7Dq00gDOX3UrTjtMXAvOX7hm4pwnocoI/T/c5u7PkYTzlZ/LGEyXYYPzGYx/
rEu/+sgexk9bovGW/7GAA4yv7r4laaa6PJxfk1+1IdhaDc7PO+vxpL9IF87/
cslCr13cCM5POHCX80KKKZx/cdvN+s8/LeD8tldMEjsCbeB8B/Vmr/CP9nD+
lE+efAwHHOF8rQ8ZHEsznOF856LN/uamrnD+v0kiGlKP3eB8a4uFvq+2eMD5
AnLfnOzrvOD89kWJJ59o+MD5Dat/zCn/7gvnSwcvY4xe7g/nL5flm524PADO
Z7xyL5qnNxDOX3PTKjU+OQjOn7lQR3SldzDC/51Mulv1Q+D8qIPJvZksoXC+
6u6oKSKvEXwHlruP0w+Fwfkrcp1n104Nh/MDZ9r/7KyKgPO9RI7PtwuIhPNb
A5+8eWkehfD/vZ4mW4FoOP9Fl2RD8BMEn/GXtUrCqRg4P2vHSwHRhbFwvqil
7pIDnXFwPvetkPl6efFwvubT5sJFigmI9GG34pnGVAQ/2l6ogZkxESEfkOe7
PwvBX+Qkmld2F8Gvu8O4udEjCc7fM//uVYcWBP9X0s4f//cj+ABLq9B4
         "]]},
       Annotation[#, "Charting`Private`Tag$858856#1"]& ], 
      TagBox[
       {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[CompressedData["
1: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
U91adJnBsIHqz3H52xKNVG+6161vN1H9P4zyR5E=
         "]]},
       Annotation[#, "Charting`Private`Tag$858856#2"]& ], {}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}]}]], "Input",
 CellChangeTimes->{{3.8063148814559293`*^9, 
  3.8063148819326315`*^9}},ExpressionUUID->"0b2326f4-64a6-4ed7-8399-\
429a0c58d4d8"]
},
WindowSize->{1350, 677},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules->{"TryRealOnly" -> False},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"85c4f110-eb7e-4aad-ba46-71b6fd0ab529"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 3886, 87, 186, "Input",ExpressionUUID->"6ca9472d-5d54-43c8-8a42-3cb1124d94db"],
Cell[4447, 109, 30466, 734, 1585, "Input",ExpressionUUID->"16ce4052-78b2-4ee5-83f7-f8f85727252c"],
Cell[34916, 845, 283, 6, 105, "Input",ExpressionUUID->"935848f6-56ac-43e1-ac16-ba3fccb0c560"],
Cell[CellGroupData[{
Cell[35224, 855, 3559, 49, 48, "Input",ExpressionUUID->"f1536e5e-0b1b-4f6b-893a-262446e8f23f"],
Cell[38786, 906, 201, 3, 32, "Output",ExpressionUUID->"cfce72c2-4d9f-4f49-91cc-711e885374fb"]
}, Open  ]],
Cell[39002, 912, 1883, 27, 28, "Input",ExpressionUUID->"e6266782-0933-46f4-bfc5-9ac0340565c7"],
Cell[40888, 941, 232, 5, 86, "Input",ExpressionUUID->"1c6f85b5-c3c5-4191-9488-c1431c82dcce"],
Cell[CellGroupData[{
Cell[41145, 950, 4091, 90, 105, "Input",ExpressionUUID->"31d0c83f-c870-4d8f-bedc-c2c43ec4807a"],
Cell[45239, 1042, 9483, 164, 316, "Output",ExpressionUUID->"f5052a81-d5ad-4ae2-9f13-1e5dbe36b9e4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54759, 1211, 2744, 78, 67, "Input",ExpressionUUID->"15bc3f0f-4801-43fb-892d-f2c4c7478d97"],
Cell[57506, 1291, 60943, 1018, 257, "Output",ExpressionUUID->"d4ae8fde-cbb3-4e32-8e8b-3d4b7e679c08"]
}, Open  ]],
Cell[118464, 2312, 232, 5, 86, "Input",ExpressionUUID->"9a67a463-08aa-423f-b006-e390fb8d2db2"],
Cell[118699, 2319, 8103, 240, 279, "Input",ExpressionUUID->"961d4147-1585-426f-a561-701f82ddf238"],
Cell[126805, 2561, 3101, 92, 105, "Input",ExpressionUUID->"c81a8ced-a779-4718-8ee1-8ad87f997668"],
Cell[129909, 2655, 6205, 169, 409, "Input",ExpressionUUID->"9ceacbbc-2363-4376-b14a-82c8c4cc30f9"],
Cell[CellGroupData[{
Cell[136139, 2828, 2116, 63, 105, "Input",ExpressionUUID->"96f58a0b-1bcc-49d2-ab07-a4521973bd0c"],
Cell[138258, 2893, 5848, 112, 245, "Output",ExpressionUUID->"f721311d-a577-479e-af6c-9768528fa7ec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144143, 3010, 2378, 73, 67, "Input",ExpressionUUID->"e95f28c7-b9fc-4cca-833d-954de894798a"],
Cell[146524, 3085, 63407, 1061, 256, "Output",ExpressionUUID->"8b6a72c8-ee64-48d6-bc48-f53722bd91ed"]
}, Open  ]],
Cell[209946, 4149, 257, 5, 105, "Input",ExpressionUUID->"35fe2fae-a4bb-40bb-ae3b-a9b400f94d0d"],
Cell[210206, 4156, 622, 13, 48, "Input",ExpressionUUID->"fc76f6cd-4003-45fa-817b-45e76eed067d"],
Cell[CellGroupData[{
Cell[210853, 4173, 361, 7, 28, "Input",ExpressionUUID->"1d5d6be8-e5ce-46ae-8161-7ae4ea4f3664"],
Cell[211217, 4182, 200, 3, 32, "Output",ExpressionUUID->"77b66d81-33df-4b85-9885-78a14f1f904e"]
}, Open  ]],
Cell[211432, 4188, 315, 9, 28, "Input",ExpressionUUID->"b0a1fd7e-3402-42af-be42-cb83d2c83c64"],
Cell[211750, 4199, 859, 25, 28, "Input",ExpressionUUID->"88dfc334-d40b-4fc0-93ab-e4d74f28c533"],
Cell[CellGroupData[{
Cell[212634, 4228, 448, 8, 28, "Input",ExpressionUUID->"f9299d66-5967-4f82-917c-40357ebfeb93"],
Cell[213085, 4238, 354, 4, 32, "Output",ExpressionUUID->"52bbf31d-efa9-4dc8-b177-1f3b71d62899"]
}, Open  ]],
Cell[CellGroupData[{
Cell[213476, 4247, 298, 6, 28, "Input",ExpressionUUID->"98c2e9d2-b33c-447f-bae0-0e7f00d61a32"],
Cell[213777, 4255, 211, 4, 32, "Output",ExpressionUUID->"9690c3c7-035b-4a19-99bd-ee2f0d7b87dc"]
}, Open  ]],
Cell[214003, 4262, 25931, 466, 165, "Input",ExpressionUUID->"0b2326f4-64a6-4ed7-8399-429a0c58d4d8"]
}
]
*)

